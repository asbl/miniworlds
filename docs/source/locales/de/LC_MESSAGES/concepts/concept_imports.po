# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-25 09:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: de <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/concepts/concept_imports.md:1
msgid "Konzept: Importe"
msgstr "Concept: Imports"

#: ../../source/concepts/concept_imports.md:3
msgid ""
"Mit import kannst du Bibliotheken importieren und die dort abgelegten "
"Klassen und Funktionen verwenden. Es gibt unterschiedliche Arten, wie du "
"Bibliotheken importieren kannst:"
msgstr ""
"With import you can import libraries and use the classes and functions "
"stored there. There are different ways you can import libraries:"

#: ../../source/concepts/concept_imports.md:5
msgid "Unterschiedliche Arten von Imports"
msgstr "Different kinds of imports"

#: ../../source/concepts/concept_imports.md:7
msgid ""
"Man kann in Python auf unterschiedliche Arten Bibliotheken importieren.  Die"
" folgenden 3 Anweisungen sind alle erlaubt:"
msgstr ""
"One can import libraries in Python in different ways. The following 3 "
"statements are all allowed:"

#: ../../source/concepts/concept_imports.md:16
msgid ""
"Mit der hier verwendeten Version `import miniworlds` musst du jedesmal "
"`miniworlds.objekt` schreiben, wenn du ein Objekt aus der miniworlds-"
"Bibliothek importierst. Stattdessen kannst du auch `from miniworlds import "
"*` schreiben - Dann kannst du miniworlds weglassen."
msgstr ""
"With the version `import miniworlds` used here, you have to write "
"`miniworlds.object` every time you import an object from the miniworlds "
"library. Instead, you can also write `from miniworlds import *` - Then you "
"can leave out miniworlds."

#: ../../source/concepts/concept_imports.md:18
msgid ""
"So sähe das erste Programm aus, wenn wir `import miniworlds` geschrieben "
"hätten:"
msgstr ""
"So would the first program look if we had written 'import miniworlds':"

#: ../../source/concepts/concept_imports.md:34
msgid "Explizite vs. Implizit."
msgstr "Explizit vs. Implizit."

#: ../../source/concepts/concept_imports.md:36
msgid ""
"Die Variante jedesmal `miniworlds.objekt` anstatt einfach nur `objekt` zu "
"schreiben mag zwar zuerst hässlicher erscheinen, weil man mehr Text "
"schreiben muss."
msgstr ""
"The variant each time `miniworlds.object` instead of simply writing `object`"
" may appear uglier at first because you have to write more text."

#: ../../source/concepts/concept_imports.md:39
msgid ""
"Dies ist trotzdem in Python die bevorzugte Variante, da so erkennbar ist, "
"welche Objekte aus welcher Bibliothek importiert wurden."
msgstr ""
"This is still the preferred option in Python, as it is recognizable which "
"objects were imported from which library."

#: ../../source/concepts/concept_imports.md:42
msgid ""
"Es könnte ja z.B. sein, dass du in deinem Programm eine Klasse `TiledWorld` "
"definierst und damit zweimal der gleiche Name verwendet wird - Für Leser "
"deines Programms wird es dann schwierig nachzuvollziehen, worauf sich der "
"Name TiledWorld bezieht."
msgstr ""
"It could for example be that you define a class `TiledWorld` in your program"
" and thus the same name is used twice - For readers of your program it then "
"becomes difficult to understand what the name TiledWorld refers to."

#: ../../source/concepts/concept_imports.md:46
msgid ""
"Im Python-Zen gilt das Prinzip **explicit over implicit** - Dies bedeutet, "
"dass oft mehr Code besser ist, wenn dieser dadurch besser nachvollziehbar "
"wird."
msgstr ""
"Im Python-Zen gilt das Prinzip **explicit over implicit** - Dies bedeutet, "
"dass oft mehr Code besser ist, wenn dieser dadurch besser nachvollziehbar "
"wird."

#: ../../source/concepts/concept_imports.md:49
msgid "Aliase"
msgstr "Aliase"

#: ../../source/concepts/concept_imports.md:51
msgid ""
"Die dritte Variante ist ein Kompromiss zwischen erster und zweiter Variante."
" Wenn die der Name `miniworlds` zu lang ist, dann kannst du einen Alias "
"definieren, z.B. `mwm`"
msgstr ""
"The third variant is a compromise between the first and second variants. If "
"the name 'miniworlds' is too long, then you can define an alias, e.g. 'mwm'"

#: ../../source/concepts/concept_imports.md:54
msgid "Das Programm würde dann folgendermaßen aussehen:"
msgstr "The program would then look like this:"

#: ../../source/concepts/concept_imports.md:70
msgid "Hinweise für Lehrer"
msgstr "Instructions for teachers"

#: ../../source/concepts/concept_imports.md:72
msgid ""
"Es werden in diesen Tutorials beide Varianten verwendet. Als Lehrer sollte "
"man sich aber entscheiden, welche Variante man für den Einstieg bevorzugt."
msgstr ""
"In these tutorials, both variants are used. As a teacher, however, one should decide which variant one prefers for the introduction. \n"
"\n"
"Es werden in diesen Tutorials beide Varianten verwendet. Als Lehrer sollte man sich aber entscheiden, welche Variante man für den Einstieg bevorzugt."

#: ../../source/concepts/concept_imports.md:75
msgid ""
"Für Anfänger kann es hilfreich sein, auf diese Art von Importen zu "
"verzichten."
msgstr "For beginners, it can be helpful to avoid this type of imports."
