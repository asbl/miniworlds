# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-25 09:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: de <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/api/positions_vector.md:1
msgid "Positions -> Vector"
msgstr "Positionen -> Vektor"

#: miniworlds.positions.vector.Vector:1 of
msgid "Describes a two-dimensional vector."
msgstr "Beschreibt einen zweidimensionalen Vektor."

#: miniworlds.positions.vector.Vector:3 of
msgid "It is used to describe a position, acceleration or velocity."
msgstr ""
"Es wird verwendet, um eine Position, Beschleunigung oder Geschwindigkeit zu "
"beschreiben."

#: miniworlds.positions.vector.Vector:7
#: miniworlds.positions.vector.Vector.add:11
#: miniworlds.positions.vector.Vector.multiply:9
#: miniworlds.positions.vector.Vector.sub:11 of
msgid "Examples"
msgstr "Beispiele"

#: miniworlds.positions.vector.Vector:8 of
msgid "Create a circle which follows the mouse."
msgstr "Erstellen Sie einen Kreis, der der Maus folgt."

#: ../../source/api/positions_vector.md
msgid "Public Data Attributes:"
msgstr "Öffentliche Datenattribute:"

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`angle <miniworlds.positions.vector.Vector.angle>`\\"
msgstr ":py:obj:`Winkel <miniworlds.positions.vector.Vector.angle>`\\"

#: ../../None:5:<autosummary>:1 miniworlds.positions.vector.Vector.angle:1 of
msgid "describes the angle as miniworlds direction"
msgstr "beschreibt den Winkel als Miniweltenrichtung"

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`x <miniworlds.positions.vector.Vector.x>`\\"
msgstr ":py:obj:`x <miniworlds.positions.vector.Vector.x>`\\"

#: ../../None:5:<autosummary>:1 miniworlds.positions.vector.Vector.x:1 of
msgid "the x component of the vector"
msgstr "die x-Komponente des Vektors"

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`y <miniworlds.positions.vector.Vector.y>`\\"
msgstr ":py:obj:`y <miniworlds.positions.vector.Vector.y>`\\"

#: ../../None:5:<autosummary>:1 miniworlds.positions.vector.Vector.y:1 of
msgid "the y component of the vector"
msgstr "die y-komponente des vektors"

#: ../../source/api/positions_vector.md
msgid "Public Methods:"
msgstr "Öffentliche Methoden:"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.positions.vector.Vector.__init__>`\\ \\(x\\, "
"y\\)"
msgstr ""
":py:obj:`__init__ <miniworlds.positions.vector.Vector.__init__>`\\ \\(x\\, "
"y\\)"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`__getitem__ <miniworlds.positions.vector.Vector.__getitem__>`\\ "
"\\(item\\)"
msgstr ""
":py:obj:`__getitem__ <miniworlds.positions.vector.Vector.__getitem__>`\\ "
"\\(item\\)"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`to_position <miniworlds.positions.vector.Vector.to_position>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`to_position <miniworlds.positions.vector.Vector.to_position>`\\ "
"\\(\\)"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`from_positions "
"<miniworlds.positions.vector.Vector.from_positions>`\\ \\(p1\\, p2\\)"
msgstr ""
":py:obj:`from_positions "
"<miniworlds.positions.vector.Vector.from_positions>`\\ \\(p1\\, p2\\)"

#: ../../None:29:<autosummary>:1
#: miniworlds.positions.vector.Vector.from_actor_and_position:1
#: miniworlds.positions.vector.Vector.from_position:1
#: miniworlds.positions.vector.Vector.from_positions:1 of
msgid "Create a vector from actor and position"
msgstr "Erstelle einen Vektor aus Schauspieler und Position"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`from_position <miniworlds.positions.vector.Vector.from_position>`\\"
" \\(position\\)"
msgstr ""
":py:obj:`from_position <miniworlds.positions.vector.Vector.from_position>`\\"
" \\(position\\)"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`from_actor_and_position "
"<miniworlds.positions.vector.Vector.from_actor_and_position>`\\ \\(t1\\, "
"pos\\)"
msgstr ""
":py:obj:`from_actor_and_position "
"<miniworlds.positions.vector.Vector.from_actor_and_position>`\\ \\(t1\\, "
"pos\\)"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`from_actors <miniworlds.positions.vector.Vector.from_actors>`\\ "
"\\(t1\\, t2\\)"
msgstr ""
":py:obj:`from_actors <miniworlds.positions.vector.Vector.from_actors>`\\ "
"\\(t1\\, t2\\)"

#: ../../None:29:<autosummary>:1
#: miniworlds.positions.vector.Vector.from_actors:1 of
msgid "Create a vector from two actors."
msgstr "Erstellen Sie einen Vektor aus zwei Akteuren."

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`from_direction "
"<miniworlds.positions.vector.Vector.from_direction>`\\ \\(direction\\)"
msgstr ""
":py:obj:`from_direction "
"<miniworlds.positions.vector.Vector.from_direction>`\\ \\(direction\\)"

#: ../../None:29:<autosummary>:1
#: miniworlds.positions.vector.Vector.from_direction:1 of
msgid "Creates a vector from miniworlds direction."
msgstr "Erzeugt einen Vektor aus der Richtung der Miniwelten."

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`from_actor_direction "
"<miniworlds.positions.vector.Vector.from_actor_direction>`\\ \\(actor\\)"
msgstr ""
":py:obj:`from_actor_direction "
"<miniworlds.positions.vector.Vector.from_actor_direction>`\\ \\(actor\\)"

#: ../../None:29:<autosummary>:1
#: miniworlds.positions.vector.Vector.from_actor_direction:1 of
msgid "Creates a vector from actor direction"
msgstr "Erstellt einen Vektor aus der Richtung des Schauspielers"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`from_actor_position "
"<miniworlds.positions.vector.Vector.from_actor_position>`\\ \\(actor\\)"
msgstr ""
":py:obj:`from_actor_position "
"<miniworlds.positions.vector.Vector.from_actor_position>`\\ \\(actor\\)"

#: ../../None:29:<autosummary>:1
#: miniworlds.positions.vector.Vector.from_actor_position:1 of
msgid "Creates a vector from actor position"
msgstr "Erstellt einen Vektor aus der Schauspielerposition"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`rotate <miniworlds.positions.vector.Vector.rotate>`\\ \\(theta\\)"
msgstr ":py:obj:`drehen <miniworlds.positions.vector.Vector.rotate>`\\ \\(theta\\)"

#: ../../None:29:<autosummary>:1 miniworlds.positions.vector.Vector.rotate:1
#: of
msgid "rotates Vector by theta degrees"
msgstr "rotiert Vektor um theta Grad"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`to_direction <miniworlds.positions.vector.Vector.to_direction>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`to_direction <miniworlds.positions.vector.Vector.to_direction>`\\ "
"\\(\\)"

#: ../../None:29:<autosummary>:1
#: miniworlds.positions.vector.Vector.to_direction:1 of
msgid "Returns miniworlds direction from vector."
msgstr "Gibt Miniweltenrichtung vom Vektor zurück."

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`get_normal <miniworlds.positions.vector.Vector.get_normal>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`get_normal <miniworlds.positions.vector.Vector.get_normal>`\\ "
"\\(\\)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`normalize <miniworlds.positions.vector.Vector.normalize>`\\ \\(\\)"
msgstr ""
":py:obj:`normalisieren <miniworlds.positions.vector.Vector.normalisieren>`\\"
" \\(\\)"

#: ../../None:29:<autosummary>:1
#: miniworlds.positions.vector.Vector.normalize:1 of
msgid "sets length of vector to 1"
msgstr "setzt Länge des Vektors auf 1"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`length <miniworlds.positions.vector.Vector.length>`\\ \\(\\)"
msgstr ":py:obj:`Länge <miniworlds.positions.vector.Vector.length>`\\ \\(\\)"

#: ../../None:29:<autosummary>:1 miniworlds.positions.vector.Vector.length:1
#: of
msgid "returns length of vector"
msgstr "gibt länge des Vektors zurück"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`neg <miniworlds.positions.vector.Vector.neg>`\\ \\(\\)"
msgstr ":py:obj:`neg <miniworlds.positions.vector.Vector.neg>`\\ \\(\\)"

#: ../../None:29:<autosummary>:1 miniworlds.positions.vector.Vector.neg:1 of
msgid "returns -v for Vector v"
msgstr "Gibt -v für Vektor v zurück"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`multiply <miniworlds.positions.vector.Vector.multiply>`\\ "
"\\(other\\)"
msgstr ""
":py:obj:`multiplizieren <miniworlds.positions.vector.Vector.multiply>`\\ "
"\\(anderes\\)"

#: ../../None:29:<autosummary>:1 miniworlds.positions.vector.Vector.multiply:1
#: of
msgid ""
"product self * other: * returns product, if ``other`` is scalar (return-"
"type: Vector) :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`float\\`\\, "
"\\:py\\:class\\:\\`\\~miniworlds.positions.vector.Vector\\`\\]`"
msgstr ""
"Produkt Selbst * Andere: * gibt Produkt zurück, wenn „andere“ skalar ist "
"(Rückgabetyp: Vektor) :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`float\\`\\, "
"\\:py\\:class\\:\\`\\~miniworlds.positions.vector.Vector\\`\\]`"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`dot <miniworlds.positions.vector.Vector.dot>`\\ \\(other\\)"
msgstr ":py:obj:`dot <miniworlds.positions.vector.Vector.dot>`\\ \\(other\\)"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`add_to_position "
"<miniworlds.positions.vector.Vector.add_to_position>`\\ \\(position\\)"
msgstr ""
":py:obj:`add_to_position "
"<miniworlds.positions.vector.Vector.add_to_position>`\\ \\(position\\)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`__str__ <miniworlds.positions.vector.Vector.__str__>`\\ \\(\\)"
msgstr ":py:obj:`__str__ <miniworlds.positions.vector.Vector.__str__>`\\ \\(\\)"

#: ../../None:29:<autosummary>:1
msgid "Return str(self)."
msgstr "Gib str(self) zurück."

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`__neg__ <miniworlds.positions.vector.Vector.__neg__>`\\ \\(\\)"
msgstr ":py:obj:`__neg__ <miniworlds.positions.vector.Vector.__neg__>`\\ \\(\\)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`__mul__ <miniworlds.positions.vector.Vector.__mul__>`\\ \\(other\\)"
msgstr ""
":py:obj:`__mul__ <miniworlds.positions.vector.Vector.__mul__>`\\ \\(other\\)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`__add__ <miniworlds.positions.vector.Vector.__add__>`\\ \\(other\\)"
msgstr ""
":py:obj:`__add__ <miniworlds.positions.vector.Vector.__add__>`\\ \\(other\\)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`__sub__ <miniworlds.positions.vector.Vector.__sub__>`\\ \\(other\\)"
msgstr ""
":py:obj:`__sub__ <miniworlds.positions.vector.Vector.__sub__>`\\ "
"\\(anderer\\)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`sub <miniworlds.positions.vector.Vector.sub>`\\ \\(other\\)"
msgstr ":py:obj:`sub <miniworlds.positions.vector.Vector.sub>`\\ \\(other\\)"

#: ../../None:29:<autosummary>:1 miniworlds.positions.vector.Vector.sub:1 of
msgid "adds vector `other` from self."
msgstr "fügt Vektor `andere` von selbst hinzu."

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`add <miniworlds.positions.vector.Vector.add>`\\ \\(other\\)"
msgstr ":py:obj:`add <miniworlds.positions.vector.Vector.add>`\\ \\(other\\)"

#: ../../None:29:<autosummary>:1 miniworlds.positions.vector.Vector.add:1 of
msgid "adds vector `other` to self."
msgstr "fügt Vektor `other` zu sich selbst hinzu."

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`limit <miniworlds.positions.vector.Vector.limit>`\\ \\(value\\)"
msgstr ":py:obj:`limit <miniworlds.positions.vector.Vector.limit>`\\ \\(Wert\\)"

#: ../../None:29:<autosummary>:1 miniworlds.positions.vector.Vector.limit:1 of
msgid "limits length of vector to value"
msgstr "Begrenzt Länge des Vektors auf Wert"

#: ../../source/api/positions_vector.md
msgid "Rückgabetyp"
msgstr "Return type"

#: miniworlds.positions.vector.Vector.add:3
#: miniworlds.positions.vector.Vector.dot:2
#: miniworlds.positions.vector.Vector.from_actor_and_position:7
#: miniworlds.positions.vector.Vector.from_actor_position:4
#: miniworlds.positions.vector.Vector.from_actors:7
#: miniworlds.positions.vector.Vector.from_direction:4
#: miniworlds.positions.vector.Vector.from_position:7
#: miniworlds.positions.vector.Vector.from_positions:7
#: miniworlds.positions.vector.Vector.limit:4
#: miniworlds.positions.vector.Vector.rotate:4
#: miniworlds.positions.vector.Vector.sub:3 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.positions.vector.Vector\\``"
msgstr ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.positions.vector.Vector\\``"

#: ../../source/api/positions_vector.md
msgid "Parameter"
msgstr ""
"Parameter\n"
"\n"
"Parameter"

#: miniworlds.positions.vector.Vector.add:5
#: miniworlds.positions.vector.Vector.sub:5 of
msgid "other Vector"
msgstr "anderer Vektor"

#: ../../source/api/positions_vector.md
msgid "Rückgabe"
msgstr "Return"

#: miniworlds.positions.vector.Vector.add:8
#: miniworlds.positions.vector.Vector.sub:8 of
msgid "`self` + `other`"
msgstr "`selbst` + `anderer`"

#: miniworlds.positions.vector.Vector.add:12 of
msgid "Add two vectors:"
msgstr "Füge zwei Vektoren hinzu:"

#: miniworlds.positions.vector.Vector.add:21
#: miniworlds.positions.vector.Vector.multiply:21
#: miniworlds.positions.vector.Vector.neg:14
#: miniworlds.positions.vector.Vector.sub:21 of
msgid "Alternative:"
msgstr "Alternative: Alternative"

#: miniworlds.positions.vector.Vector.add_to_position:2 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`float\\`\\, \\:py\\:class\\:\\`float\\`\\]`"
msgstr ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`float\\`\\, \\:py\\:class\\:\\`float\\`\\]`"

#: miniworlds.positions.vector.Vector.from_actor_and_position:3
#: miniworlds.positions.vector.Vector.from_position:3
#: miniworlds.positions.vector.Vector.from_positions:3 of
msgid "The vector describes is generated from: actor2.center - position"
msgstr "Der Vektor beschreibt wird erzeugt aus: actor2.center - position"

#: miniworlds.positions.vector.Vector.from_actor_direction:3
#: miniworlds.positions.vector.Vector.neg:3
#: miniworlds.positions.vector.Vector.normalize:3 of
msgid ""
"Examples: :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.positions.vector.Vector\\``"
msgstr ""
"Beispiele: :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.positions.vector.Vector\\``"

#: miniworlds.positions.vector.Vector.from_actor_direction:7 of
msgid "Creates rotating rectangle"
msgstr "Erzeugt rotierendes Rechteck"

#: miniworlds.positions.vector.Vector.from_actors:3 of
msgid "The vector describes is generated from: actor2.center - actor1.center"
msgstr ""
"Der Vektor beschreibt wird generiert aus: actor2.center - actor1.center."

#: miniworlds.positions.vector.Vector.length:3 of
msgid "Examples: :rtype: :sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"
msgstr "Beispiele: :rtype: :sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"

#: miniworlds.positions.vector.Vector.length:7 of
msgid "Length of vector"
msgstr "Länge des Vektors"

#: miniworlds.positions.vector.Vector.multiply:5 of
msgid "returns dot-product, if ``other`` is vector (return-type: float)"
msgstr ""
"gibt das Skalarprodukt zurück, wenn \"andere\" ein Vektor ist (Rückgabetyp: "
"float)"

#: miniworlds.positions.vector.Vector.multiply:6 of
msgid "a scalar or vector"
msgstr "ein Skalar oder Vektor"

#: miniworlds.positions.vector.Vector.multiply:10 of
msgid "Product and dot-product:"
msgstr "Produkt und Punktprodukt:"

#: miniworlds.positions.vector.Vector.neg:7 of
msgid "Inverse of vector:"
msgstr "Inverse von Vektor:"

#: miniworlds.positions.vector.Vector.normalize:7 of
msgid "Normalized vector with length 1:"
msgstr "Normalisierter Vektor mit Länge 1:"

#: miniworlds.positions.vector.Vector.sub:12 of
msgid "Subtracts two vectors:"
msgstr "Zieht zwei Vektoren voneinander ab:"

#: miniworlds.positions.vector.Vector.to_direction:4 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"
msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"
