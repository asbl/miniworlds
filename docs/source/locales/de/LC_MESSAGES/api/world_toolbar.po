# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-08 17:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/api/world_toolbar.md:1
msgid "World > Toolbar"
msgstr "Welt > Symbolleiste"

#: miniworlds.worlds.gui.toolbar.Toolbar:1 of
msgid "A Toolbar contains widgets (Buttons, Labels, ...)"
msgstr "Eine Symbolleiste enthält Widgets (Schaltflächen, Beschriftungen, ...)"

#: ../../source/api/world_toolbar.md
msgid "Public Data Attributes:"
msgstr "Öffentliche Datenattribute:"

#: ../../None:22:<autosummary>:1
msgid ""
":py:obj:`background_color "
"<miniworlds.worlds.gui.toolbar.Toolbar.background_color>`\\"
msgstr ""
":py:obj:`background_color "
"<miniworlds.worlds.gui.toolbar.Toolbar.background_color>`\\"

#: ../../None:22:<autosummary>:1
msgid "Background color as Tuple, e.g. (255,255,255) for white."
msgstr "Hintergrundfarbe als Tupel, z.B. (255,255,255) für Weiß."

#: ../../None:22:<autosummary>:1
msgid ""
":py:obj:`padding_left "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_left>`\\"
msgstr ""
":py:obj:`padding_left "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_left>`\\"

#: ../../None:22:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.padding_left:1 of
msgid "Defines left margin"
msgstr "Definiert den linken Rand"

#: ../../None:22:<autosummary>:1
msgid ""
":py:obj:`padding_right "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_right>`\\"
msgstr ""
":py:obj:`padding_right "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_right>`\\"

#: ../../None:22:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.padding_right:1 of
msgid "Defines right margin"
msgstr "Definiert den rechten Rand"

#: ../../None:22:<autosummary>:1
msgid ""
":py:obj:`padding_top "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_top>`\\"
msgstr ""
":py:obj:`padding_top "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_top>`\\"

#: ../../None:22:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.padding_top:1 of
msgid "Defines top margin"
msgstr "Definiert den oberen Rand"

#: ../../None:22:<autosummary>:1
msgid ""
":py:obj:`padding_bottom "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_bottom>`\\"
msgstr ""
":py:obj:`padding_bottom "
"<miniworlds.worlds.gui.toolbar.Toolbar.padding_bottom>`\\"

#: ../../None:22:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.padding_bottom:1 of
msgid "Defines bottom margin"
msgstr "Definiert den unteren Rand"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`widgets <miniworlds.worlds.gui.toolbar.Toolbar.widgets>`\\"
msgstr ":py:obj:`widgets <miniworlds.worlds.gui.toolbar.Toolbar.widgets>`\\"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`actors <miniworlds.worlds.gui.toolbar.Toolbar.actors>`\\"
msgstr ":py:obj:`actors <miniworlds.worlds.gui.toolbar.Toolbar.actors>`\\"

#: ../../None:22:<autosummary>:1
msgid ""
":py:obj:`event_manager "
"<miniworlds.worlds.gui.toolbar.Toolbar.event_manager>`\\"
msgstr ""
":py:obj:`event_manager "
"<miniworlds.worlds.gui.toolbar.Toolbar.event_manager>`\\"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`clock <miniworlds.worlds.gui.toolbar.Toolbar.clock>`\\"
msgstr ":py:obj:`clock <miniworlds.worlds.gui.toolbar.Toolbar.clock>`\\"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`frame <miniworlds.worlds.gui.toolbar.Toolbar.frame>`\\"
msgstr ":py:obj:`frame <miniworlds.worlds.gui.toolbar.Toolbar.frame>`\\"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`is_running <miniworlds.worlds.gui.toolbar.Toolbar.is_running>`\\"
msgstr ":py:obj:`is_running <miniworlds.worlds.gui.toolbar.Toolbar.is_running>`\\"

#: ../../None:22:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`actors_fixed_size "
"<miniworlds.worlds.gui.toolbar.Toolbar.actors_fixed_size>`\\"
msgstr ":py:obj:`actors <miniworlds.worlds.gui.toolbar.Toolbar.actors>`\\"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`app <miniworlds.worlds.gui.toolbar.Toolbar.app>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.gui.toolbar.Toolbar.app>`\\"

#: ../../None:22:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`backgrounds "
"<miniworlds.worlds.gui.toolbar.Toolbar.backgrounds>`\\"
msgstr ""
":py:obj:`backgrounds "
"<miniworlds.worlds.gui.toolbar.Toolbar.backgrounds>`\\"

#: ../../None:22:<autosummary>:1
#, fuzzy
msgid ":py:obj:`layout <miniworlds.worlds.gui.toolbar.Toolbar.layout>`\\"
msgstr ":py:obj:`layout <miniworlds.worlds.gui.toolbar.Toolbar.layout>`\\"

#: ../../None:22:<autosummary>:1
#, fuzzy
msgid ":py:obj:`data <miniworlds.worlds.gui.toolbar.Toolbar.data>`\\"
msgstr ":py:obj:`data <miniworlds.worlds.gui.toolbar.Toolbar.data>`\\"

#: ../../None:22:<autosummary>:1
#, fuzzy
msgid ":py:obj:`mouse <miniworlds.worlds.gui.toolbar.Toolbar.mouse>`\\"
msgstr ":py:obj:`mouse <miniworlds.worlds.gui.toolbar.Toolbar.mouse>`\\"

#: ../../None:22:<autosummary>:1
#, fuzzy
msgid ":py:obj:`draw <miniworlds.worlds.gui.toolbar.Toolbar.draw>`\\"
msgstr ":py:obj:`draw <miniworlds.worlds.gui.toolbar.Toolbar.draw>`\\"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`music <miniworlds.worlds.gui.toolbar.Toolbar.music>`\\"
msgstr ":py:obj:`music <miniworlds.worlds.gui.toolbar.Toolbar.music>`\\"

#: ../../None:22:<autosummary>:1
msgid ":py:obj:`sound <miniworlds.worlds.gui.toolbar.Toolbar.sound>`\\"
msgstr ":py:obj:`sound <miniworlds.worlds.gui.toolbar.Toolbar.sound>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`actors <miniworlds.worlds.gui.gui.GUI.actors>`\\"
msgstr ":py:obj:`actors <miniworlds.worlds.gui.gui.GUI.actors>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`event_manager <miniworlds.worlds.gui.gui.GUI.event_manager>`\\"
msgstr ":py:obj:`event_manager <miniworlds.worlds.gui.gui.GUI.event_manager>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`clock <miniworlds.worlds.gui.gui.GUI.clock>`\\"
msgstr ":py:obj:`clock <miniworlds.worlds.gui.gui.GUI.clock>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`frame <miniworlds.worlds.gui.gui.GUI.frame>`\\"
msgstr ":py:obj:`frame <miniworlds.worlds.gui.gui.GUI.frame>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`is_running <miniworlds.worlds.gui.gui.GUI.is_running>`\\"
msgstr ":py:obj:`is_running <miniworlds.worlds.gui.gui.GUI.is_running>`\\"

#: ../../None:16:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`actors_fixed_size "
"<miniworlds.worlds.gui.gui.GUI.actors_fixed_size>`\\"
msgstr ""
":py:obj:`actors_fixed_size "
"<miniworlds.worlds.gui.gui.GUI.actors_fixed_size>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`app <miniworlds.worlds.gui.gui.GUI.app>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.gui.gui.GUI.app>`\\"

#: ../../None:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`backgrounds <miniworlds.worlds.gui.gui.GUI.backgrounds>`\\"
msgstr ":py:obj:`backgrounds <miniworlds.worlds.gui.gui.GUI.backgrounds>`\\"

#: ../../None:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`layout <miniworlds.worlds.gui.gui.GUI.layout>`\\"
msgstr ":py:obj:`layout <miniworlds.worlds.gui.gui.GUI.layout>`\\"

#: ../../None:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`data <miniworlds.worlds.gui.gui.GUI.data>`\\"
msgstr ":py:obj:`data <miniworlds.worlds.gui.gui.GUI.data>`\\"

#: ../../None:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`mouse <miniworlds.worlds.gui.gui.GUI.mouse>`\\"
msgstr ":py:obj:`mouse <miniworlds.worlds.gui.gui.GUI.mouse>`\\"

#: ../../None:16:<autosummary>:1
#, fuzzy
msgid ":py:obj:`draw <miniworlds.worlds.gui.gui.GUI.draw>`\\"
msgstr ":py:obj:`draw <miniworlds.worlds.gui.gui.GUI.draw>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`music <miniworlds.worlds.gui.gui.GUI.music>`\\"
msgstr ":py:obj:`music <miniworlds.worlds.gui.gui.GUI.music>`\\"

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`sound <miniworlds.worlds.gui.gui.GUI.sound>`\\"
msgstr ":py:obj:`sound <miniworlds.worlds.gui.gui.GUI.sound>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`subclasses <miniworlds.worlds.world.World.subclasses>`\\"
msgstr ":py:obj:`subclasses <miniworlds.worlds.world.World.subclasses>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`class_name <miniworlds.worlds.world.World.class_name>`\\"
msgstr ":py:obj:`class_name <miniworlds.worlds.world.World.class_name>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`step <miniworlds.worlds.world.World.step>`\\"
msgstr ":py:obj:`step <miniworlds.worlds.world.World.step>`\\"

#: ../../None:29:<autosummary>:1
msgid "Step defines how often the method ``act()`` will be called."
msgstr "Der Schritt definiert, wie oft die Methode ``act()`` aufgerufen wird."

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`fps <miniworlds.worlds.world.World.fps>`\\"
msgstr ":py:obj:`fps <miniworlds.worlds.world.World.fps>`\\"

#: ../../None:29:<autosummary>:1
msgid "Frames per second shown on the screen."
msgstr "Bilder pro Sekunde auf dem Bildschirm angezeigt."

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`world_size_x <miniworlds.worlds.world.World.world_size_x>`\\"
msgstr ":py:obj:`world_size_x <miniworlds.worlds.world.World.world_size_x>`\\"

#: ../../None:29:<autosummary>:1
msgid "The x-world_size (defaults to view_size)"
msgstr "Die x-world_size (standardmäßig view_size)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`world_size_y <miniworlds.worlds.world.World.world_size_y>`\\"
msgstr ":py:obj:`world_size_y <miniworlds.worlds.world.World.world_size_y>`\\"

#: ../../None:29:<autosummary>:1
msgid "The y-world_size (defaults to view_size)"
msgstr "Die y-world_size (standardmäßig view_size)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`columns <miniworlds.worlds.world.World.columns>`\\"
msgstr ":py:obj:`columns <miniworlds.worlds.world.World.columns>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`rows <miniworlds.worlds.world.World.rows>`\\"
msgstr ":py:obj:`rows <miniworlds.worlds.world.World.rows>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`size <miniworlds.worlds.world.World.size>`\\"
msgstr ":py:obj:`Größe <miniworlds.worlds.world.World.size>`\\"

#: ../../None:29:<autosummary>:1
msgid "Set the size of world"
msgstr "Stellen Sie die Größe der Welt ein"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`background <miniworlds.worlds.world.World.background>`\\"
msgstr ":py:obj:`background <miniworlds.worlds.world.World.background>`\\"

#: ../../None:29:<autosummary>:1 ../../None:35:<autosummary>:1
msgid "Returns the current background"
msgstr "Gibt den aktuellen background zurück"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`has_background <miniworlds.worlds.world.World.has_background>`\\"
msgstr ":py:obj:`has_background <miniworlds.worlds.world.World.has_background>`\\"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`registered_events "
"<miniworlds.worlds.world.World.registered_events>`\\"
msgstr ""
":py:obj:`registered_events "
"<miniworlds.worlds.world.World.registered_events>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`image <miniworlds.worlds.world.World.image>`\\"
msgstr ":py:obj:`image <miniworlds.worlds.world.World.image>`\\"

#: ../../None:29:<autosummary>:1
msgid "The current displayed image"
msgstr "Das aktuell angezeigte Bild"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`actors <miniworlds.worlds.world.World.actors>`\\"
msgstr ":py:obj:`Akteure <miniworlds.worlds.world.World.actors>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`event_manager <miniworlds.worlds.world.World.event_manager>`\\"
msgstr ":py:obj:`event_manager <miniworlds.worlds.world.World.event_manager>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`clock <miniworlds.worlds.world.World.clock>`\\"
msgstr ":py:obj:`clock <miniworlds.worlds.world.World.clock>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`frame <miniworlds.worlds.world.World.frame>`\\"
msgstr ":py:obj:`frame <miniworlds.worlds.world.World.frame>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`is_running <miniworlds.worlds.world.World.is_running>`\\"
msgstr ":py:obj:`is_running <miniworlds.worlds.world.World.is_running>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`actors_fixed_size "
"<miniworlds.worlds.world.World.actors_fixed_size>`\\"
msgstr ":py:obj:`Akteure <miniworlds.worlds.world.World.actors>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`backgrounds <miniworlds.worlds.world.World.backgrounds>`\\"
msgstr ":py:obj:`Hintergründe <miniworlds.worlds.world.World.backgrounds>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`layout <miniworlds.worlds.world.World.layout>`\\"
msgstr ":py:obj:`sound <miniworlds.worlds.world.World.sound>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`data <miniworlds.worlds.world.World.data>`\\"
msgstr ":py:obj:`data <miniworlds.worlds.world.World.data>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`mouse <miniworlds.worlds.world.World.mouse>`\\"
msgstr ":py:obj:`mouse <miniworlds.worlds.world.World.mouse>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`draw <miniworlds.worlds.world.World.draw>`\\"
msgstr ":py:obj:`draw <miniworlds.worlds.world.World.draw>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`music <miniworlds.worlds.world.World.music>`\\"
msgstr ":py:obj:`Musik <miniworlds.worlds.world.World.music>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`sound <miniworlds.worlds.world.World.sound>`\\"
msgstr ":py:obj:`sound <miniworlds.worlds.world.World.sound>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`window <miniworlds.worlds.world_base.WorldBase.window>`\\"
msgstr ":py:obj:`window <miniworlds.worlds.world_base.WorldBase.window>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`size <miniworlds.worlds.world_base.WorldBase.size>`\\"
msgstr ":py:obj:`size <miniworlds.worlds.world_base.WorldBase.size>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`topleft <miniworlds.worlds.world_base.WorldBase.topleft>`\\"
msgstr ":py:obj:`topleft <miniworlds.worlds.world_base.WorldBase.topleft>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`width <miniworlds.worlds.world_base.WorldBase.width>`\\"
msgstr ":py:obj:`width <miniworlds.worlds.world_base.WorldBase.width>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`height <miniworlds.worlds.world_base.WorldBase.height>`\\"
msgstr ":py:obj:`height <miniworlds.worlds.world_base.WorldBase.height>`\\"

#: ../../source/api/world_toolbar.md
msgid "Public Methods:"
msgstr "Öffentliche Methoden:"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.worlds.gui.toolbar.Toolbar.__init__>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`__init__ <miniworlds.worlds.gui.toolbar.Toolbar.__init__>`\\ "
"\\(\\)"

#: ../../None:17:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.__init__:1 of
msgid "Base class for toolbars."
msgstr "Basisklasse für Symbolleisten."

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`on_change <miniworlds.worlds.gui.toolbar.Toolbar.on_change>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`on_change <miniworlds.worlds.gui.toolbar.Toolbar.on_change>`\\ "
"\\(\\)"

#: ../../None:17:<autosummary>:1 ../../None:8:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.on_change:1 of
msgid "implemented in subclasses"
msgstr "in Unterklassen implementiert"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`remove <miniworlds.worlds.gui.toolbar.Toolbar.remove>`\\ "
"\\(item\\)"
msgstr ""
":py:obj:`remove <miniworlds.worlds.gui.toolbar.Toolbar.remove>`\\ "
"\\(item\\)"

#: ../../None:17:<autosummary>:1
msgid "Removes a widget from the toolbar."
msgstr "Entfernt ein Widget aus der Symbolleiste."

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`has_widget <miniworlds.worlds.gui.toolbar.Toolbar.has_widget>`\\"
" \\(key\\)"
msgstr ""
":py:obj:`has_widget <miniworlds.worlds.gui.toolbar.Toolbar.has_widget>`\\"
" \\(key\\)"

#: ../../None:17:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.has_widget:1 of
msgid "Checks if self.widgets has key"
msgstr "Prüft, ob self.widgets den Schlüssel hat"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`get_widget <miniworlds.worlds.gui.toolbar.Toolbar.get_widget>`\\"
" \\(key\\)"
msgstr ""
":py:obj:`get_widget <miniworlds.worlds.gui.toolbar.Toolbar.get_widget>`\\"
" \\(key\\)"

#: ../../None:17:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.get_widget:1 of
msgid "Gets widget by key"
msgstr "Widget nach Schlüssel abrufen"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`remove_all_widgets "
"<miniworlds.worlds.gui.toolbar.Toolbar.remove_all_widgets>`\\ \\(\\)"
msgstr ""
":py:obj:`remove_all_widgets "
"<miniworlds.worlds.gui.toolbar.Toolbar.remove_all_widgets>`\\ \\(\\)"

#: ../../None:17:<autosummary>:1
msgid ":py:obj:`reorder <miniworlds.worlds.gui.toolbar.Toolbar.reorder>`\\ \\(\\)"
msgstr ":py:obj:`reorder <miniworlds.worlds.gui.toolbar.Toolbar.reorder>`\\ \\(\\)"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`update_width_and_height "
"<miniworlds.worlds.gui.toolbar.Toolbar.update_width_and_height>`\\ \\(\\)"
msgstr ""
":py:obj:`update_width_and_height "
"<miniworlds.worlds.gui.toolbar.Toolbar.update_width_and_height>`\\ \\(\\)"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`send_message "
"<miniworlds.worlds.gui.toolbar.Toolbar.send_message>`\\ \\(text\\)"
msgstr ""
":py:obj:`send_message "
"<miniworlds.worlds.gui.toolbar.Toolbar.send_message>`\\ \\(text\\)"

#: ../../None:17:<autosummary>:1 ../../None:35:<autosummary>:1
#: miniworlds.worlds.gui.toolbar.Toolbar.send_message:1 of
msgid "Sends broadcast message"
msgstr "Sendet Rundfunknachricht"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`scroll_up <miniworlds.worlds.gui.toolbar.Toolbar.scroll_up>`\\ "
"\\(value\\)"
msgstr ""
":py:obj:`scroll_up <miniworlds.worlds.gui.toolbar.Toolbar.scroll_up>`\\ "
"\\(value\\)"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`scroll_down "
"<miniworlds.worlds.gui.toolbar.Toolbar.scroll_down>`\\ \\(value\\)"
msgstr ""
":py:obj:`scroll_down "
"<miniworlds.worlds.gui.toolbar.Toolbar.scroll_down>`\\ \\(value\\)"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`can_scroll_down "
"<miniworlds.worlds.gui.toolbar.Toolbar.can_scroll_down>`\\ \\(value\\)"
msgstr ""
":py:obj:`can_scroll_down "
"<miniworlds.worlds.gui.toolbar.Toolbar.can_scroll_down>`\\ \\(value\\)"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`can_scroll_up "
"<miniworlds.worlds.gui.toolbar.Toolbar.can_scroll_up>`\\ \\(value\\)"
msgstr ""
":py:obj:`can_scroll_up "
"<miniworlds.worlds.gui.toolbar.Toolbar.can_scroll_up>`\\ \\(value\\)"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`on_new_actor "
"<miniworlds.worlds.gui.toolbar.Toolbar.on_new_actor>`\\ \\(actor\\)"
msgstr ""
":py:obj:`on_new_actor "
"<miniworlds.worlds.gui.toolbar.Toolbar.on_new_actor>`\\ \\(actor\\)"

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`on_remove_actor "
"<miniworlds.worlds.gui.toolbar.Toolbar.on_remove_actor>`\\ \\(actor\\)"
msgstr ""
":py:obj:`on_remove_actor "
"<miniworlds.worlds.gui.toolbar.Toolbar.on_remove_actor>`\\ \\(actor\\)"

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`add <miniworlds.worlds.gui.gui.GUI.add>`\\ \\(actor\\)"
msgstr ":py:obj:`add <miniworlds.worlds.gui.gui.GUI.add>`\\ \\(actor\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.worlds.world.World.__init__>`\\ \\(\\[x\\, "
"y\\]\\)"
msgstr ""
":py:obj:`__init__ <miniworlds.worlds.world.World.__init__>`\\ \\(\\[x\\, "
"y\\]\\)"

#: ../../None:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`contains_position "
"<miniworlds.worlds.world.World.contains_position>`\\ \\(pos\\)"
msgstr ""
":py:obj:`detect_position "
"<miniworlds.worlds.world.World.detect_position>`\\ \\(pos\\)"

#: ../../None:35:<autosummary>:1
msgid "Checks if position is in the world."
msgstr "Prüft, ob die Position in der Welt ist."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`contains_rect <miniworlds.worlds.world.World.contains_rect>`\\ "
"\\(rect\\)"
msgstr ""
":py:obj:`contains_rect <miniworlds.worlds.world.World.contains_rect>`\\ "
"\\(rect\\)"

#: ../../None:35:<autosummary>:1
msgid "Returns True if the entire rectangle is fully inside the world."
msgstr ""

#: ../../None:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`contains_rect_any "
"<miniworlds.worlds.world.World.contains_rect_any>`\\ \\(rect\\)"
msgstr ""
":py:obj:`contains_rect <miniworlds.worlds.world.World.contains_rect>`\\ "
"\\(rect\\)"

#: ../../None:35:<autosummary>:1
msgid "Returns True if any part of the rectangle is inside the world."
msgstr ""

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`set_columns <miniworlds.worlds.world.World.set_columns>`\\ "
"\\(value\\)"
msgstr ""
":py:obj:`set_columns <miniworlds.worlds.world.World.set_columns>`\\ "
"\\(value\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`set_rows <miniworlds.worlds.world.World.set_rows>`\\ \\(value\\)"
msgstr ""
":py:obj:`set_rows <miniworlds.worlds.world.World.set_rows>`\\ "
"\\(value\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`borders <miniworlds.worlds.world.World.borders>`\\ \\(value\\)"
msgstr ":py:obj:`Grenzen <miniworlds.worlds.world.World.borders>`\\ \\(value\\)"

#: ../../None:35:<autosummary>:1
msgid "Gets all borders from a source (`Position` or `Rect`)."
msgstr "Ruft alle Ränder aus einer source (`Position` oder `Rect`) ab."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`get_background <miniworlds.worlds.world.World.get_background>`\\"
" \\(\\)"
msgstr ""
":py:obj:`get_background <miniworlds.worlds.world.World.get_background>`\\"
" \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`switch_background "
"<miniworlds.worlds.world.World.switch_background>`\\ \\(background\\)"
msgstr ""
":py:obj:`switch_background "
"<miniworlds.worlds.world.World.switch_background>`\\ \\(background\\)"

#: ../../None:35:<autosummary>:1
msgid "Switches the background"
msgstr "Wechselt den Hintergrund"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`remove_background "
"<miniworlds.worlds.world.World.remove_background>`\\ "
"\\(\\[background\\]\\)"
msgstr ""
":py:obj:`remove_background "
"<miniworlds.worlds.world.World.remove_background>`\\ "
"\\(\\[background\\]\\)"

#: ../../None:35:<autosummary>:1
msgid "Removes a background from world"
msgstr "Entfernt einen Hintergrund aus der Welt"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`set_background <miniworlds.worlds.world.World.set_background>`\\"
" \\(source\\)"
msgstr ""
":py:obj:`set_background <miniworlds.worlds.world.World.set_background>`\\"
" \\(source\\)"

#: ../../None:35:<autosummary>:1
msgid "Adds a new background to the world"
msgstr "Fügt der Welt einen neuen Hintergrund hinzu"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`add_background <miniworlds.worlds.world.World.add_background>`\\"
" \\(source\\)"
msgstr ""
":py:obj:`add_background <miniworlds.worlds.world.World.add_background>`\\"
" \\(source\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`start <miniworlds.worlds.world.World.start>`\\ \\(\\)"
msgstr ":py:obj:`start <miniworlds.worlds.world.World.start>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid "Starts the world, if world is not running."
msgstr "Startet die Welt, wenn die Welt nicht läuft."

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`stop <miniworlds.worlds.world.World.stop>`\\ \\(\\[frames\\]\\)"
msgstr ":py:obj:`stop <miniworlds.worlds.world.World.stop>`\\ \\(\\[frames\\]\\)"

#: ../../None:35:<autosummary>:1
msgid "Stops the world."
msgstr "Hält die Welt an."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`start_listening "
"<miniworlds.worlds.world.World.start_listening>`\\ \\(\\)"
msgstr ""
":py:obj:`start_listening "
"<miniworlds.worlds.world.World.start_listening>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`stop_listening <miniworlds.worlds.world.World.stop_listening>`\\"
" \\(\\)"
msgstr ""
":py:obj:`stop_listening <miniworlds.worlds.world.World.stop_listening>`\\"
" \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`run <miniworlds.worlds.world.World.run>`\\ \\(\\[fullscreen\\, "
"fit\\_desktop\\, replit\\, ...\\]\\)"
msgstr ""
":py:obj:`run <miniworlds.worlds.world.World.run>`\\ \\(\\[fullscreen\\, "
"fit\\_desktop\\, replit\\, ...\\]\\)"

#: ../../None:35:<autosummary>:1
msgid "Starts the main application loop of the Miniworlds engine."
msgstr ""

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`is_in_world <miniworlds.worlds.world.World.is_in_world>`\\ "
"\\(position\\)"
msgstr ""
":py:obj:`is_in_world <miniworlds.worlds.world.World.is_in_world>`\\ "
"\\(position\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`send_message <miniworlds.worlds.world.World.send_message>`\\ "
"\\(message\\[\\, data\\]\\)"
msgstr ""
":py:obj:`send_message <miniworlds.worlds.world.World.send_message>`\\ "
"\\(message\\[\\, data\\]\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`quit <miniworlds.worlds.world.World.quit>`\\ "
"\\(\\[exit\\_code\\]\\)"
msgstr ""
":py:obj:`quit <miniworlds.worlds.world.World.quit>`\\ "
"\\(\\[exit\\_code\\]\\)"

#: ../../None:35:<autosummary>:1
msgid "quits app and closes the window"
msgstr "beendet die App und schließt das Fenster"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`reset <miniworlds.worlds.world.World.reset>`\\ \\(\\)"
msgstr ":py:obj:`reset <miniworlds.worlds.world.World.reset>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
"Resets the world Creates a new world with init-function - recreates all "
"actors and actors on the world."
msgstr ""
"Setzt die Welt zurück Erstellt eine neue Welt mit der Init-Funktion - "
"erstellt alle Akteure und Akteure in der Welt neu."

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`clear <miniworlds.worlds.world.World.clear>`\\ \\(\\)"
msgstr ":py:obj:`clear <miniworlds.worlds.world.World.clear>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`get_from_pixel <miniworlds.worlds.world.World.get_from_pixel>`\\"
" \\(position\\)"
msgstr ""
":py:obj:`get_from_pixel <miniworlds.worlds.world.World.get_from_pixel>`\\"
" \\(position\\)"

#: ../../None:35:<autosummary>:1
msgid "Gets Position from pixel"
msgstr "Position aus Pixel abrufen"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`to_pixel <miniworlds.worlds.world.World.to_pixel>`\\ "
"\\(position\\)"
msgstr ""
":py:obj:`to_pixel <miniworlds.worlds.world.World.to_pixel>`\\ "
"\\(position\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`on_setup <miniworlds.worlds.world.World.on_setup>`\\ \\(\\)"
msgstr ":py:obj:`on_setup <miniworlds.worlds.world.World.on_setup>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid "Overwrite or register this method to call `on_setup`-Actions"
msgstr ""
"Überschreiben oder registrieren Sie diese Methode, um `on_setup`-Aktionen"
" aufzurufen"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`detect_actors <miniworlds.worlds.world.World.detect_actors>`\\ "
"\\(position\\)"
msgstr ""
":py:obj:`detect_actors <miniworlds.worlds.world.World.detect_actors>`\\ "
"\\(position\\)"

#: ../../None:35:<autosummary>:1
msgid "Gets all actors which are found at a specific position."
msgstr "Ruft alle Akteure ab, die sich an einer bestimmten Position befinden."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`get_actors_from_pixel "
"<miniworlds.worlds.world.World.get_actors_from_pixel>`\\ \\(pixel\\)"
msgstr ""
":py:obj:`get_actors_from_pixel "
"<miniworlds.worlds.world.World.get_actors_from_pixel>`\\ \\(pixel\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`register <miniworlds.worlds.world.World.register>`\\ \\(method\\)"
msgstr ""
":py:obj:`register <miniworlds.worlds.world.World.register>`\\ "
"\\(Methode\\)"

#: ../../None:35:<autosummary>:1
msgid "Used as decorator e.g. @register def method."
msgstr "Verwendet als Dekorator, z.B. @register def Methode."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`unregister <miniworlds.worlds.world.World.unregister>`\\ "
"\\(method\\)"
msgstr ""
":py:obj:`unregister <miniworlds.worlds.world.World.unregister>`\\ "
"\\(Methode\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`distance_to <miniworlds.worlds.world.World.distance_to>`\\ "
"\\(pos1\\, pos2\\)"
msgstr ""
":py:obj:`distance_to <miniworlds.worlds.world.World.distance_to>`\\ "
"\\(pos1\\, pos2\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`direction_to <miniworlds.worlds.world.World.direction_to>`\\ "
"\\(pos1\\, pos2\\)"
msgstr ""
":py:obj:`direction_to <miniworlds.worlds.world.World.direction_to>`\\ "
"\\(pos1\\, pos2\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`screenshot <miniworlds.worlds.world.World.screenshot>`\\ "
"\\(\\[filename\\]\\)"
msgstr ""
":py:obj:`screenshot <miniworlds.worlds.world.World.screenshot>`\\ "
"\\(\\[Dateiname\\]\\)"

#: ../../None:35:<autosummary>:1
msgid "Creates a screenshot in given file."
msgstr "Erstellt einen Screenshot in der angegebenen Datei."

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`get_events <miniworlds.worlds.world.World.get_events>`\\ \\(\\)"
msgstr ":py:obj:`get_events <miniworlds.worlds.world.World.get_events>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid "Gets a set of all events you can register"
msgstr ""
"Erhält eine Liste aller Veranstaltungen, für die Sie sich registrieren "
"können"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.worlds.world_base.WorldBase.__init__>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`__init__ <miniworlds.worlds.world_base.WorldBase.__init__>`\\ "
"\\(\\)"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`remove <miniworlds.worlds.world_base.WorldBase.remove>`\\ "
"\\(actor\\)"
msgstr ""
":py:obj:`remove <miniworlds.worlds.world_base.WorldBase.remove>`\\ "
"\\(actor\\)"

#: ../../None:8:<autosummary>:1
msgid "Implemented in subclasses"
msgstr "In Unterklassen implementiert"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`on_change <miniworlds.worlds.world_base.WorldBase.on_change>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`on_change <miniworlds.worlds.world_base.WorldBase.on_change>`\\ "
"\\(\\)"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`on_new_actor "
"<miniworlds.worlds.world_base.WorldBase.on_new_actor>`\\ \\(actor\\)"
msgstr ""
":py:obj:`on_new_actor "
"<miniworlds.worlds.world_base.WorldBase.on_new_actor>`\\ \\(actor\\)"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`on_remove_actor "
"<miniworlds.worlds.world_base.WorldBase.on_remove_actor>`\\ \\(actor\\)"
msgstr ""
":py:obj:`on_remove_actor "
"<miniworlds.worlds.world_base.WorldBase.on_remove_actor>`\\ \\(actor\\)"

#: ../../None:8:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`get_world_connector "
"<miniworlds.worlds.world_base.WorldBase.get_world_connector>`\\ "
"\\(actor\\)"
msgstr ""
":py:obj:`get_world_connector "
"<miniworlds.worlds.world.World.get_world_connector>`\\ \\(Akteur\\)"

#: ../../source/api/world_toolbar.md
msgid "Private Data Attributes:"
msgstr "Private Datenattribute:"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.gui.toolbar.Toolbar._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <miniworlds.worlds.gui.toolbar.Toolbar._abc_impl>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_fps <miniworlds.worlds.gui.toolbar.Toolbar._fps>`\\"
msgstr ":py:obj:`_fps <miniworlds.worlds.gui.toolbar.Toolbar._fps>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_step <miniworlds.worlds.gui.toolbar.Toolbar._step>`\\"
msgstr ":py:obj:`_step <miniworlds.worlds.gui.toolbar.Toolbar._step>`\\"

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`_key_pressed "
"<miniworlds.worlds.gui.toolbar.Toolbar._key_pressed>`\\"
msgstr ""
":py:obj:`_key_pressed "
"<miniworlds.worlds.gui.toolbar.Toolbar._key_pressed>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_animated <miniworlds.worlds.gui.toolbar.Toolbar._animated>`\\"
msgstr ":py:obj:`_animated <miniworlds.worlds.gui.toolbar.Toolbar._animated>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_timed_objects "
"<miniworlds.worlds.gui.toolbar.Toolbar._timed_objects>`\\"
msgstr ""
":py:obj:`timed_objects "
"<miniworlds.worlds.gui.toolbar.Toolbar.timed_objects>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_dynamic_actors "
"<miniworlds.worlds.gui.toolbar.Toolbar._dynamic_actors>`\\"
msgstr ""
":py:obj:`dynamic_actors "
"<miniworlds.worlds.gui.toolbar.Toolbar.dynamic_actors>`\\"

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.gui.toolbar.Toolbar._registered_methods>`\\"
msgstr ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.gui.toolbar.Toolbar._registered_methods>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ":py:obj:`_mainloop <miniworlds.worlds.gui.toolbar.Toolbar._mainloop>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.gui.toolbar.Toolbar.app>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_collision_manager "
"<miniworlds.worlds.gui.toolbar.Toolbar._collision_manager>`\\"
msgstr ""
":py:obj:`collision_manager "
"<miniworlds.worlds.gui.toolbar.Toolbar.collision_manager>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.gui.gui.GUI._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <miniworlds.worlds.gui.gui.GUI._abc_impl>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_fps <miniworlds.worlds.gui.gui.GUI._fps>`\\"
msgstr ":py:obj:`_fps <miniworlds.worlds.gui.gui.GUI._fps>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_step <miniworlds.worlds.gui.gui.GUI._step>`\\"
msgstr ":py:obj:`_step <miniworlds.worlds.gui.gui.GUI._step>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_key_pressed <miniworlds.worlds.gui.gui.GUI._key_pressed>`\\"
msgstr ":py:obj:`_key_pressed <miniworlds.worlds.gui.gui.GUI._key_pressed>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_animated <miniworlds.worlds.gui.gui.GUI._animated>`\\"
msgstr ":py:obj:`_animated <miniworlds.worlds.gui.gui.GUI._animated>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ":py:obj:`_timed_objects <miniworlds.worlds.gui.gui.GUI._timed_objects>`\\"
msgstr ":py:obj:`timed_objects <miniworlds.worlds.gui.gui.GUI.timed_objects>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_dynamic_actors "
"<miniworlds.worlds.gui.gui.GUI._dynamic_actors>`\\"
msgstr ":py:obj:`dynamic_actors <miniworlds.worlds.gui.gui.GUI.dynamic_actors>`\\"

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.gui.gui.GUI._registered_methods>`\\"
msgstr ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.gui.gui.GUI._registered_methods>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ":py:obj:`_mainloop <miniworlds.worlds.gui.gui.GUI._mainloop>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.gui.gui.GUI.app>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_collision_manager "
"<miniworlds.worlds.gui.gui.GUI._collision_manager>`\\"
msgstr ""
":py:obj:`collision_manager "
"<miniworlds.worlds.gui.gui.GUI.collision_manager>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.world.World._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <miniworlds.worlds.world.World._abc_impl>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_fps <miniworlds.worlds.world.World._fps>`\\"
msgstr ":py:obj:`_fps <miniworlds.worlds.world.World._fps>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_step <miniworlds.worlds.world.World._step>`\\"
msgstr ":py:obj:`_step <miniworlds.worlds.world.World._step>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_key_pressed <miniworlds.worlds.world.World._key_pressed>`\\"
msgstr ":py:obj:`_key_pressed <miniworlds.worlds.world.World._key_pressed>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_animated <miniworlds.worlds.world.World._animated>`\\"
msgstr ":py:obj:`_animated <miniworlds.worlds.world.World._animated>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ":py:obj:`_timed_objects <miniworlds.worlds.world.World._timed_objects>`\\"
msgstr ":py:obj:`timed_objects <miniworlds.worlds.world.World.timed_objects>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_dynamic_actors "
"<miniworlds.worlds.world.World._dynamic_actors>`\\"
msgstr ":py:obj:`dynamic_actors <miniworlds.worlds.world.world._dynamic_actors>`\\"

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.world.World._registered_methods>`\\"
msgstr ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.world.World._registered_methods>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ":py:obj:`_mainloop <miniworlds.worlds.world.World._mainloop>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_collision_manager "
"<miniworlds.worlds.world.World._collision_manager>`\\"
msgstr ""
":py:obj:`collision_manager "
"<miniworlds.worlds.world.World.collision_manager>`\\"

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.world_base.WorldBase._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <miniworlds.worlds.world_base.WorldBase._abc_impl>`\\"

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`_abc_impl <abc.ABC._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <abc.ABC._abc_impl>`\\"

#: ../../source/api/world_toolbar.md
msgid "Private Methods:"
msgstr "Private Methoden:"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_get_mainloopmanager_class "
"<miniworlds.worlds.gui.toolbar.Toolbar._get_mainloopmanager_class>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`event_manager "
"<miniworlds.worlds.gui.toolbar.Toolbar.event_manager>`\\"

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`_add_widget "
"<miniworlds.worlds.gui.toolbar.Toolbar._add_widget>`\\ \\(widget\\[\\, "
"key\\]\\)"
msgstr ""
":py:obj:`_add_widget "
"<miniworlds.worlds.gui.toolbar.Toolbar._add_widget>`\\ \\(widget\\[\\, "
"key\\]\\)"

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`_widgets_total_height "
"<miniworlds.worlds.gui.toolbar.Toolbar._widgets_total_height>`\\ \\(\\)"
msgstr ""
":py:obj:`_widgets_total_height "
"<miniworlds.worlds.gui.toolbar.Toolbar._widgets_total_height>`\\ \\(\\)"

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`_set_widget_width "
"<miniworlds.worlds.gui.toolbar.Toolbar._set_widget_width>`\\ \\(widget\\)"
msgstr ""
":py:obj:`_set_widget_width "
"<miniworlds.worlds.gui.toolbar.Toolbar._set_widget_width>`\\ \\(widget\\)"

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_get_world_connector_class "
"<miniworlds.worlds.gui.gui.GUI._get_world_connector_class>`\\ \\(\\)"
msgstr ""
":py:obj:`_get_world_connector_class "
"<miniworlds.worlds.gui.gui.GUI._get_world_connector_class>`\\ \\(\\)"

#: ../../None:3:<autosummary>:1 ../../None:6:<autosummary>:1
msgid "needed by get_world_connector in parent class"
msgstr "benötigt von get_world_connector in der übergeordneten Klasse"

#: ../../None:3:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_validate_parameters "
"<miniworlds.worlds.world.World._validate_parameters>`\\ \\(x\\, y\\)"
msgstr ""
":py:obj:`validate_parameters "
"<miniworlds.worlds.world.World.validate_parameters>`\\ \\(x\\, y\\)"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_get_mainloopmanager_class "
"<miniworlds.worlds.world_base.WorldBase._get_mainloopmanager_class>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`_get_camera_manager_class "
"<miniworlds.worlds.world.World._get_camera_manager_class>`\\ \\(\\)"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_get_camera_manager_class "
"<miniworlds.worlds.world_base.WorldBase._get_camera_manager_class>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`_get_camera_manager_class "
"<miniworlds.worlds.world.World._get_camera_manager_class>`\\ \\(\\)"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_get_world_connector_class "
"<miniworlds.worlds.world_base.WorldBase._get_world_connector_class>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`_get_world_connector_class "
"<miniworlds.worlds.world.World._get_world_connector_class>`\\ \\(\\)"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_create_event_manager "
"<miniworlds.worlds.world_base.WorldBase._create_event_manager>`\\ \\(\\)"
msgstr ""
":py:obj:`_create_event_manager "
"<miniworlds.worlds.world.World._create_event_manager>`\\ \\(\\)"

#: miniworlds.worlds.gui.toolbar.Toolbar.__init__:4 of
msgid "Example"
msgstr "Beispiel"

#: miniworlds.worlds.gui.toolbar.Toolbar.__init__:5 of
msgid "Add a Toolbar which interacts with Actors on world via messages:"
msgstr ""
"Fügen Sie eine Symbolleiste hinzu, die über Nachrichten mit Akteuren in "
"der Welt interagiert:"

#: miniworlds.worlds.gui.toolbar.Toolbar.background_color:1 of
msgid "Background color as Tuple, e.g. (255,255,255) for white"
msgstr "Hintergrundfarbe als Tupel, z.B. (255,255,255) für Weiß"

#: ../../source/api/world_toolbar.md
#, fuzzy
msgid "Parameters"
msgstr "Parameter"

#: miniworlds.worlds.gui.toolbar.Toolbar.can_scroll_down:1
#: miniworlds.worlds.gui.toolbar.Toolbar.can_scroll_down:4
#: miniworlds.worlds.gui.toolbar.Toolbar.get_widget:5 of
msgid "_description_"
msgstr "_beschreibung_"

#: ../../source/api/world_toolbar.md
msgid "Returns"
msgstr ""

#: ../../source/api/world_toolbar.md
msgid "Return type"
msgstr ""

#: miniworlds.worlds.gui.toolbar.Toolbar.get_widget:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.actors.widgets.widget\\_base.BaseWidget\\``"
msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.actors.widgets.widget\\_base.BaseWidget\\``"

#: miniworlds.worlds.gui.toolbar.Toolbar.has_widget:3 of
msgid "The key of widget"
msgstr "Der Schlüssel des Widgets"

#: miniworlds.worlds.gui.toolbar.Toolbar.remove:1 of
msgid ""
"Removes a widget from the toolbar. Warning: Be careful when calling this "
"method in a loop."
msgstr ""
"Entfernt ein Widget aus der Symbolleiste. Warnung: Seien Sie vorsichtig, "
"wenn Sie diese Methode in einer Schleife aufrufen."

#: miniworlds.worlds.gui.toolbar.Toolbar.remove:3 of
msgid "The key of widget which should be removed"
msgstr "Der Schlüssel des Widgets, das entfernt werden soll"

#: miniworlds.worlds.gui.toolbar.Toolbar.send_message:3 of
msgid "A message can be received by the world or any actor on world"
msgstr ""
"Eine Nachricht kann von der Welt oder jedem Akteur auf der Welt empfangen"
" werden"

#~ msgid ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.is_display_initialized>`\\"
#~ msgstr ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.is_display_initialized>`\\"

#~ msgid ""
#~ ":py:obj:`is_listening "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.is_listening>`\\"
#~ msgstr ""
#~ ":py:obj:`is_listening "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.is_listening>`\\"

#~ msgid ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.gui.gui.GUI.is_display_initialized>`\\"
#~ msgstr ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.gui.gui.GUI.is_display_initialized>`\\"

#~ msgid ":py:obj:`is_listening <miniworlds.worlds.gui.gui.GUI.is_listening>`\\"
#~ msgstr ":py:obj:`is_listening <miniworlds.worlds.gui.gui.GUI.is_listening>`\\"

#~ msgid ":py:obj:`surface <miniworlds.worlds.world.World.surface>`\\"
#~ msgstr ":py:obj:`surface <miniworlds.worlds.world.World.surface>`\\"

#~ msgid ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.world.World.is_display_initialized>`\\"
#~ msgstr ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.world.World.is_display_initialized>`\\"

#~ msgid ":py:obj:`is_listening <miniworlds.worlds.world.World.is_listening>`\\"
#~ msgstr ":py:obj:`is_listening <miniworlds.worlds.world.World.is_listening>`\\"

#~ msgid ":py:obj:`surface <miniworlds.worlds.world_base.WorldBase.surface>`\\"
#~ msgstr ":py:obj:`Oberfläche <miniworlds.worlds.world_base.WorldBase.surface>`\\"

#~ msgid ":py:obj:`rect <miniworlds.worlds.world_base.WorldBase.rect>`\\"
#~ msgstr ":py:obj:`rect <miniworlds.worlds.world_base.WorldBase.rect>`\\"

#~ msgid ""
#~ ":py:obj:`window_docking_position "
#~ "<miniworlds.worlds.world_base.WorldBase.window_docking_position>`\\"
#~ msgstr ""
#~ ":py:obj:`window_docking_position "
#~ "<miniworlds.worlds.world_base.WorldBase.window_docking_position>`\\"

#~ msgid ""
#~ ":py:obj:`update "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.update>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`update "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.update>`\\ \\(\\)"

#~ msgid "The mainloop, called once per frame."
#~ msgstr "Die Hauptschleife, die einmal pro Frame aufgerufen wird."

#~ msgid ""
#~ ":py:obj:`add_right <miniworlds.worlds.world.World.add_right>`\\"
#~ " \\(world\\[\\, size\\]\\)"
#~ msgstr ""
#~ ":py:obj:`add_right <miniworlds.worlds.world.World.add_right>`\\"
#~ " \\(world\\[\\, größe\\]\\)"

#~ msgid ""
#~ ":py:obj:`add_bottom "
#~ "<miniworlds.worlds.world.World.add_bottom>`\\ \\(world\\[\\, "
#~ "size\\]\\)"
#~ msgstr ""
#~ ":py:obj:`add_bottom "
#~ "<miniworlds.worlds.world.World.add_bottom>`\\ \\(world\\[\\, "
#~ "größe\\]\\)"

#~ msgid ""
#~ ":py:obj:`remove_world "
#~ "<miniworlds.worlds.world.World.remove_world>`\\ \\(container\\)"
#~ msgstr ""
#~ ":py:obj:`remove_world "
#~ "<miniworlds.worlds.world.World.remove_world>`\\ \\(container\\)"

#~ msgid "Detects if rect is completely on the world."
#~ msgstr "Erkennt, ob das Rechteck vollständig auf der Welt ist."

#~ msgid "The method show() should always be called at the end of your program."
#~ msgstr ""
#~ "Die Methode show() sollte immer am "
#~ "Ende Ihres Programms aufgerufen werden."

#~ msgid ""
#~ ":py:obj:`init_display "
#~ "<miniworlds.worlds.world.World.init_display>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`init_display "
#~ "<miniworlds.worlds.world.World.init_display>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`switch_world "
#~ "<miniworlds.worlds.world.World.switch_world>`\\ "
#~ "\\(new\\_world\\[\\, reset\\]\\)"
#~ msgstr ""
#~ ":py:obj:`switch_world "
#~ "<miniworlds.worlds.world.World.switch_world>`\\ "
#~ "\\(new\\_world\\[\\, reset\\]\\)"

#~ msgid "Switches to another world"
#~ msgstr "Wechselt in eine andere Welt"

#~ msgid ":py:obj:`repaint <miniworlds.worlds.world.World.repaint>`\\ \\(\\)"
#~ msgstr ":py:obj:`repaint <miniworlds.worlds.world.World.repaint>`\\ \\(\\)"

#~ msgid ":py:obj:`update <miniworlds.worlds.world.World.update>`\\ \\(\\)"
#~ msgstr ":py:obj:`update <miniworlds.worlds.world.World.update>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world.World.handle_event>`\\ \\(event\\[\\,"
#~ " data\\]\\)"
#~ msgstr ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world.World.handle_event>`\\ \\(event\\[\\,"
#~ " daten\\]\\)"

#~ msgid "Event handling"
#~ msgstr "Ereignisverwaltung"

#~ msgid ""
#~ ":py:obj:`load_world_from_db "
#~ "<miniworlds.worlds.world.World.load_world_from_db>`\\ \\(file\\)"
#~ msgstr ""
#~ ":py:obj:`load_world_from_db "
#~ "<miniworlds.worlds.world.World.load_world_from_db>`\\ "
#~ "\\(Datei\\)"

#~ msgid "Loads a sqlite db file."
#~ msgstr "Lädt eine SQLite-Datenbankdatei."

#~ msgid ""
#~ ":py:obj:`load_actors_from_db "
#~ "<miniworlds.worlds.world.World.load_actors_from_db>`\\ "
#~ "\\(file\\, actor\\_classes\\)"
#~ msgstr ""
#~ ":py:obj:`load_actors_from_db "
#~ "<miniworlds.worlds.world.World.load_actors_from_db>`\\ "
#~ "\\(file\\, actor\\_classes\\)"

#~ msgid "Loads all actors from db."
#~ msgstr "Lädt alle Akteure aus der Datenbank."

#~ msgid ""
#~ ":py:obj:`save_to_db "
#~ "<miniworlds.worlds.world.World.save_to_db>`\\ \\(file\\)"
#~ msgstr ""
#~ ":py:obj:`save_to_db "
#~ "<miniworlds.worlds.world.World.save_to_db>`\\ \\(Datei\\)"

#~ msgid "Saves the current world an all actors to database."
#~ msgstr "Speichert die aktuelle Welt und alle Akteure in der Datenbank."

#~ msgid ""
#~ ":py:obj:`get_columns_by_width "
#~ "<miniworlds.worlds.world.World.get_columns_by_width>`\\ "
#~ "\\(width\\)"
#~ msgstr ""
#~ ":py:obj:`get_columns_by_width "
#~ "<miniworlds.worlds.world.World.get_columns_by_width>`\\ "
#~ "\\(width\\)"

#~ msgid ""
#~ ":py:obj:`get_rows_by_height "
#~ "<miniworlds.worlds.world.World.get_rows_by_height>`\\ "
#~ "\\(height\\)"
#~ msgstr ""
#~ ":py:obj:`get_rows_by_height "
#~ "<miniworlds.worlds.world.World.get_rows_by_height>`\\ \\(Höhe\\)"

#~ msgid ""
#~ ":py:obj:`add_to_window "
#~ "<miniworlds.worlds.world_base.WorldBase.add_to_window>`\\ "
#~ "\\(app\\, dock\\[\\, size\\]\\)"
#~ msgstr ""
#~ ":py:obj:`add_to_window "
#~ "<miniworlds.worlds.world_base.WorldBase.add_to_window>`\\ "
#~ "\\(app\\, dock\\[\\, größe\\]\\)"

#~ msgid ""
#~ ":py:obj:`update_width_and_height "
#~ "<miniworlds.worlds.world_base.WorldBase.update_width_and_height>`\\"
#~ " \\(\\)"
#~ msgstr ""
#~ ":py:obj:`update_width_and_height "
#~ "<miniworlds.worlds.world_base.WorldBase.update_width_and_height>`\\"
#~ " \\(\\)"

#~ msgid ""
#~ ":py:obj:`repaint "
#~ "<miniworlds.worlds.world_base.WorldBase.repaint>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`repaint "
#~ "<miniworlds.worlds.world_base.WorldBase.repaint>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`blit_surface_to_window_surface "
#~ "<miniworlds.worlds.world_base.WorldBase.blit_surface_to_window_surface>`\\"
#~ " \\(\\)"
#~ msgstr ""
#~ ":py:obj:`blit_surface_to_window_surface "
#~ "<miniworlds.worlds.world_base.WorldBase.blit_surface_to_window_surface>`\\"
#~ " \\(\\)"

#~ msgid ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world_base.WorldBase.handle_event>`\\ "
#~ "\\(event\\, data\\)"
#~ msgstr ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world_base.WorldBase.handle_event>`\\ "
#~ "\\(event\\, data\\)"

#~ msgid ""
#~ ":py:obj:`get_event "
#~ "<miniworlds.worlds.world_base.WorldBase.get_event>`\\ "
#~ "\\(event\\, data\\)"
#~ msgstr ""
#~ ":py:obj:`get_event "
#~ "<miniworlds.worlds.world_base.WorldBase.get_event>`\\ "
#~ "\\(ereignis\\, daten\\)"

#~ msgid ""
#~ ":py:obj:`update "
#~ "<miniworlds.worlds.world_base.WorldBase.update>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`update "
#~ "<miniworlds.worlds.world_base.WorldBase.update>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`get_local_position "
#~ "<miniworlds.worlds.world_base.WorldBase.get_local_position>`\\ "
#~ "\\(position\\)"
#~ msgstr ""
#~ ":py:obj:`get_local_position "
#~ "<miniworlds.worlds.world_base.WorldBase.get_local_position>`\\ "
#~ "\\(position\\)"

#~ msgid ""
#~ ":py:obj:`_update_all_costumes "
#~ "<miniworlds.worlds.world.World._update_all_costumes>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`_update_all_costumes "
#~ "<miniworlds.worlds.world.World._update_all_costumes>`\\ \\(\\)"

#~ msgid "updates costumes for all actors on the world"
#~ msgstr "aktualisiert Kostüme für alle Actor auf der Welt"

#~ msgid ":py:obj:`_act_all <miniworlds.worlds.world.World._act_all>`\\ \\(\\)"
#~ msgstr ":py:obj:`_act_all <miniworlds.worlds.world.World._act_all>`\\ \\(\\)"

#~ msgid "Overwritten in subclasses, e.g. physics_world."
#~ msgstr "In Unterklassen überschrieben, z. B. physics_world."

#~ msgid ""
#~ ":py:obj:`_tick_timed_objects "
#~ "<miniworlds.worlds.world.World._tick_timed_objects>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`_tick_timed_objects "
#~ "<miniworlds.worlds.world.World._tick_timed_objects>`\\ \\(\\)"

#~ msgid "Called in app.update() when update() from all containers is called."
#~ msgstr ""
#~ "Wird in app.update() aufgerufen, wenn "
#~ "update() von allen Containern aufgerufen "
#~ "wird."

#~ msgid ""
#~ ":py:obj:`mouse_manager "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.mouse_manager>`\\"
#~ msgstr ""
#~ ":py:obj:`mouse_manager "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.mouse_manager>`\\"

#~ msgid ":py:obj:`mouse_manager <miniworlds.worlds.gui.gui.GUI.mouse_manager>`\\"
#~ msgstr ":py:obj:`mouse_manager <miniworlds.worlds.gui.gui.GUI.mouse_manager>`\\"

#~ msgid ""
#~ ":py:obj:`default_fill_color "
#~ "<miniworlds.worlds.world.World.default_fill_color>`\\"
#~ msgstr ""
#~ ":py:obj:`default_fill_color "
#~ "<miniworlds.worlds.world.World.default_fill_color>`\\"

#~ msgid "Set default fill color for borders and lines"
#~ msgstr "Standardfüllfarbe für Rahmen und Linien festlegen"

#~ msgid ""
#~ ":py:obj:`default_is_filled "
#~ "<miniworlds.worlds.world.World.default_is_filled>`\\"
#~ msgstr ""
#~ ":py:obj:`default_is_filled "
#~ "<miniworlds.worlds.world.World.default_is_filled>`\\"

#~ msgid ""
#~ ":py:obj:`default_stroke_color "
#~ "<miniworlds.worlds.world.World.default_stroke_color>`\\"
#~ msgstr ""
#~ ":py:obj:`default_stroke_color "
#~ "<miniworlds.worlds.world.World.default_stroke_color>`\\"

#~ msgid "Set default stroke color for borders and lines."
#~ msgstr "Standardstrichfarbe für Rahmen und Linien festlegen."

#~ msgid ""
#~ ":py:obj:`default_border_color "
#~ "<miniworlds.worlds.world.World.default_border_color>`\\"
#~ msgstr ""
#~ ":py:obj:`default_border_color "
#~ "<miniworlds.worlds.world.World.default_border_color>`\\"

#~ msgid "Set default border color for borders and lines."
#~ msgstr "Standardrahmenfarbe für Rahmen und Linien festlegen."

#~ msgid ""
#~ ":py:obj:`default_border "
#~ "<miniworlds.worlds.world.World.default_border>`\\"
#~ msgstr ""
#~ ":py:obj:`default_border "
#~ "<miniworlds.worlds.world.World.default_border>`\\"

#~ msgid "Sets default border color for actors"
#~ msgstr "Legt die Standardrahmenfarbe für Akteure fest"

#~ msgid ":py:obj:`fill_color <miniworlds.worlds.world.World.fill_color>`\\"
#~ msgstr ":py:obj:`fill_color <miniworlds.worlds.world.World.fill_color>`\\"

#~ msgid ":py:obj:`color <miniworlds.worlds.world.World.color>`\\"
#~ msgstr ":py:obj:`Farbe <miniworlds.worlds.world.World.color>`\\"

#~ msgid ":py:obj:`window <miniworlds.worlds.world.World.window>`\\"
#~ msgstr ":py:obj:`Fenster <miniworlds.worlds.world.World.window>`\\"

#~ msgid "Gets the parent window"
#~ msgstr "Ruft das übergeordnete Fenster ab"

#~ msgid ":py:obj:`mouse_manager <miniworlds.worlds.world.World.mouse_manager>`\\"
#~ msgstr ":py:obj:`mouse_manager <miniworlds.worlds.world.World.mouse_manager>`\\"

#~ msgid ""
#~ ":py:obj:`default_fill "
#~ "<miniworlds.worlds.world.World.default_fill>`\\ \\(value\\)"
#~ msgstr ""
#~ ":py:obj:`default_fill "
#~ "<miniworlds.worlds.world.World.default_fill>`\\ \\(value\\)"

#~ msgid ""
#~ ":py:obj:`play_sound "
#~ "<miniworlds.worlds.world.World.play_sound>`\\ \\(path\\)"
#~ msgstr ""
#~ ":py:obj:`play_sound "
#~ "<miniworlds.worlds.world.World.play_sound>`\\ \\(Pfad\\)"

#~ msgid "plays sound from path"
#~ msgstr "spielt Ton vom Pfad ab"

#~ msgid ""
#~ ":py:obj:`stop_sounds "
#~ "<miniworlds.worlds.world.World.stop_sounds>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`stop_sounds "
#~ "<miniworlds.worlds.world.World.stop_sounds>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`play_music "
#~ "<miniworlds.worlds.world.World.play_music>`\\ \\(path\\)"
#~ msgstr ""
#~ ":py:obj:`play_music "
#~ "<miniworlds.worlds.world.World.play_music>`\\ \\(Pfad\\)"

#~ msgid "plays a music from path"
#~ msgstr "spielt Musik von einem Pfad"

#~ msgid ""
#~ ":py:obj:`stop_music "
#~ "<miniworlds.worlds.world.World.stop_music>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`stop_music "
#~ "<miniworlds.worlds.world.World.stop_music>`\\ \\(\\)"

#~ msgid "stops a music"
#~ msgstr "stoppt eine Musik"

#~ msgid ""
#~ ":py:obj:`get_mouse_position "
#~ "<miniworlds.worlds.world.World.get_mouse_position>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_mouse_position "
#~ "<miniworlds.worlds.world.World.get_mouse_position>`\\ \\(\\)"

#~ msgid "Gets the current mouse_position"
#~ msgstr "Ermittelt die aktuelle Mausposition"

#~ msgid ""
#~ ":py:obj:`get_mouse_x "
#~ "<miniworlds.worlds.world.World.get_mouse_x>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_mouse_x "
#~ "<miniworlds.worlds.world.World.get_mouse_x>`\\ \\(\\)"

#~ msgid "Gets x-coordinate of mouse-position"
#~ msgstr "Erhält die x-Koordinate der Mausposition"

#~ msgid ""
#~ ":py:obj:`get_mouse_y "
#~ "<miniworlds.worlds.world.World.get_mouse_y>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_mouse_y "
#~ "<miniworlds.worlds.world.World.get_mouse_y>`\\ \\(\\)"

#~ msgid "Gets y-coordinate of mouse-position"
#~ msgstr "Erhält die y-Koordinate der Mausposition"

#~ msgid ""
#~ ":py:obj:`get_prev_mouse_position "
#~ "<miniworlds.worlds.world.World.get_prev_mouse_position>`\\ "
#~ "\\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_prev_mouse_position "
#~ "<miniworlds.worlds.world.World.get_prev_mouse_position>`\\ "
#~ "\\(\\)"

#~ msgid "gets mouse-position of last frame"
#~ msgstr "holt die Mausposition des letzten Frames"

#~ msgid ""
#~ ":py:obj:`is_mouse_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_pressed>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`is_mouse_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_pressed>`\\ \\(\\)"

#~ msgid "Returns True, if mouse is pressed"
#~ msgstr "Gibt True zurück, wenn die Maus gedrückt ist"

#~ msgid ""
#~ ":py:obj:`is_mouse_left_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_left_pressed>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`is_mouse_left_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_left_pressed>`\\ \\(\\)"

#~ msgid "Returns True, if mouse left button is pressed"
#~ msgstr "Gibt True zurück, wenn die linke Maustaste gedrückt ist"

#~ msgid ""
#~ ":py:obj:`is_mouse_right_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_right_pressed>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`is_mouse_right_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_right_pressed>`\\ \\(\\)"

#~ msgid "Returns True, if mouse right button is pressed"
#~ msgstr "Gibt True zurück, wenn die rechte Maustaste gedrückt ist"

#~ msgid ""
#~ ":py:obj:`get_color_from_pixel "
#~ "<miniworlds.worlds.world.World.get_color_from_pixel>`\\ "
#~ "\\(position\\)"
#~ msgstr ""
#~ ":py:obj:`get_color_from_pixel "
#~ "<miniworlds.worlds.world.World.get_color_from_pixel>`\\ "
#~ "\\(position\\)"

#~ msgid "Returns the color at a specific position"
#~ msgstr "Gibt die Farbe an einer bestimmten Position zurück"

#~ msgid ""
#~ ":py:obj:`direction <miniworlds.worlds.world.World.direction>`\\"
#~ " \\(point1\\, point2\\)"
#~ msgstr ""
#~ ":py:obj:`Richtung <miniworlds.worlds.world.World.direction>`\\"
#~ " \\(punkt1\\, punkt2\\)"

#~ msgid ""
#~ ":py:obj:`_is_filled "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar._is_filled>`\\"
#~ msgstr ""
#~ ":py:obj:`_is_filled "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar._is_filled>`\\"

#~ msgid ""
#~ ":py:obj:`_orientation "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar._orientation>`\\"
#~ msgstr ""
#~ ":py:obj:`_orientation "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar._orientation>`\\"

#~ msgid ":py:obj:`_static <miniworlds.worlds.gui.toolbar.Toolbar._static>`\\"
#~ msgstr ":py:obj:`_static <miniworlds.worlds.gui.toolbar.Toolbar._static>`\\"

#~ msgid ":py:obj:`_is_filled <miniworlds.worlds.gui.gui.GUI._is_filled>`\\"
#~ msgstr ":py:obj:`_is_filled <miniworlds.worlds.gui.gui.GUI._is_filled>`\\"

#~ msgid ":py:obj:`_orientation <miniworlds.worlds.gui.gui.GUI._orientation>`\\"
#~ msgstr ":py:obj:`_orientation <miniworlds.worlds.gui.gui.GUI._orientation>`\\"

#~ msgid ":py:obj:`_static <miniworlds.worlds.gui.gui.GUI._static>`\\"
#~ msgstr ":py:obj:`_static <miniworlds.worlds.gui.gui.GUI._static>`\\"

#~ msgid ":py:obj:`_is_filled <miniworlds.worlds.world.World._is_filled>`\\"
#~ msgstr ":py:obj:`_is_filled <miniworlds.worlds.world.World._is_filled>`\\"

#~ msgid ":py:obj:`_orientation <miniworlds.worlds.world.World._orientation>`\\"
#~ msgstr ":py:obj:`_orientation <miniworlds.worlds.world.World._orientation>`\\"

#~ msgid ":py:obj:`_static <miniworlds.worlds.world.World._static>`\\"
#~ msgstr ":py:obj:`_static <miniworlds.worlds.world.World._static>`\\"

#~ msgid "Rückgabe"
#~ msgstr "Rückgabe"

#~ msgid "Rückgabetyp"
#~ msgstr "Return type"

#~ msgid ""
#~ ":py:obj:`backgrounds_manager "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.backgrounds_manager>`\\"
#~ msgstr ""
#~ ":py:obj:`backgrounds_manager "
#~ "<miniworlds.worlds.gui.toolbar.Toolbar.backgrounds_manager>`\\"

#~ msgid "Returns all backgrounds of the world as list."
#~ msgstr "Gibt alle Hintergründe der Welt als Liste zurück."

#~ msgid ""
#~ ":py:obj:`backgrounds_manager "
#~ "<miniworlds.worlds.world.World.backgrounds_manager>`\\"
#~ msgstr ""
#~ ":py:obj:`backgrounds_manager "
#~ "<miniworlds.worlds.world.World.backgrounds_manager>`\\"

#~ msgid ""
#~ ":py:obj:`add_to_world "
#~ "<miniworlds.worlds.world.World.add_to_world>`\\ \\(actor\\, "
#~ "position\\)"
#~ msgstr ""
#~ ":py:obj:`add_to_world "
#~ "<miniworlds.worlds.world.World.add_to_world>`\\ \\(Akteur\\, "
#~ "Position\\)"

#~ msgid "Adds a Actor to the world."
#~ msgstr "Fügt einen Actor zur Welt hinzu."

