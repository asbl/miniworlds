# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-08 13:20+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/api/world.md:1 ../../source/api/world.md:5
msgid "World"
msgstr "Welt"

#: ../../source/api/world.md:3
msgid "The base class for all of your worlds"
msgstr ""

#: miniworlds.worlds.world.World:1 of
msgid "A world is a playing field on which actors can move."
msgstr "Eine Welt ist ein Spielfeld, auf dem sich Akteure bewegen können."

#: miniworlds.worlds.world.World:3 of
msgid ""
"A world has a `background` and provides basic functions for the "
"positioning of actors and for the collision detection of actors, which "
"can be queried via the sensors of the actors."
msgstr ""
"Eine Welt hat einen `Hintergrund` und bietet grundlegende Funktionen für "
"die Positionierung von Akteuren und für die Kollisionsdetektion von "
"Akteuren, die über die Sensoren der Akteure abgefragt werden können."

#: miniworlds.worlds.world.World:6 of
msgid ""
"You can create your own world by creating a class that inherits from "
"World or you can directly create a world object of type `World` or one of"
" its child classes (`TiledWorld`, `PhysicsWorld`, ...)."
msgstr ""
"Sie können Ihre eigene Welt erschaffen, indem Sie eine Klasse erstellen, "
"die von World erbt, oder Sie können direkt ein Weltobjekt vom Typ `World`"
" oder einer seiner Kindklassen (`TiledWorld`, `PhysicsWorld`, ...) "
"erstellen."

#: miniworlds.worlds.world.World:9 of
msgid "*World*"
msgstr "*Welt*"

#: miniworlds.worlds.world.World:11 of
msgid "A world for pixel accurate games."
msgstr "Eine Welt für pixelgenaue Spiele."

#: miniworlds.worlds.world.World:13 of
msgid "The position of a actor on a World is the pixel at topleft of actor."
msgstr ""
"Die Position eines Actors in einer Welt ist das Pixel oben links des "
"Actors."

#: miniworlds.worlds.world.World:15 of
msgid "New actors are created with top-left corner of actor rect at position."
msgstr ""
"Neue Akteure werden erstellt, wobei die obere linke Ecke des "
"Akteursrechtecks an der Position liegt."

#: miniworlds.worlds.world.World:17 of
msgid "Two actors collide when their sprites overlap."
msgstr "Zwei Actor kollidieren, wenn sich ihre Sprites überlappen."

#: miniworlds.worlds.world.World:19 of
msgid "Asteroids"
msgstr "Asteroiden"

#: miniworlds.worlds.world.World:22 of
msgid "**Other worlds:**"
msgstr "**Andere Welten:**"

#: miniworlds.worlds.world.World:24 of
#, fuzzy
msgid ""
"TiledWorld: For worlds using Tiles, like rogue-like rpgs, see "
":doc:`TiledWorld </api/world_tiled>`)"
msgstr ""
"TiledWorld: Für Welten, die Kacheln verwenden, wie rogue-ähnliche RPGs, "
"siehe :doc:`TiledWorld <../api/world.tiledworld>`)"

#: miniworlds.worlds.world.World:26 of
#, fuzzy
msgid ""
"PhysicsWorld: For worlds using the PhysicsEngine, see :doc:`PhysicsWorld "
"</api/world_physics>`)"
msgstr ""
"PhysicsWorld: Für Welten, die die PhysicsEngine verwenden, siehe "
":doc:`PhysicsWorld <../api/world_physicsworld>`)"

#: miniworlds.worlds.world.World:30
#: miniworlds.worlds.world.World.add_background:11
#: miniworlds.worlds.world.World.detect_actors:10
#: miniworlds.worlds.world.World.fps:7 miniworlds.worlds.world.World.reset:5
#: miniworlds.worlds.world.World.set_background:11
#: miniworlds.worlds.world.World.size:4 miniworlds.worlds.world.World.step:10
#: miniworlds.worlds.world.World.switch_background:9 of
msgid "Examples"
msgstr "Beispiele"

#: miniworlds.worlds.world.World:31 of
msgid "Creating a TiledWorld Object:"
msgstr "Erstellen eines TiledWorld-Objekts:"

#: miniworlds.worlds.world.World:43 of
msgid "Creating a TiledWorld-Subclass."
msgstr "Erstellen einer TiledWorld-Unterklasse."

#: miniworlds.worlds.world.World:56 of
msgid "Creating a World Object:"
msgstr "Erstellen eines Weltobjekts:"

#: miniworlds.worlds.world.World:66 of
msgid "Creating a World Subclass"
msgstr "Erstellen einer Weltunterklasse"

#: miniworlds.worlds.world.World:80 of
#, fuzzy
msgid "See: :doc:`World </api/world>`"
msgstr "Siehe: :doc:`Welt <../api/world>`"

#: miniworlds.worlds.world.World:81 of
#, fuzzy
msgid "See: :doc:`TiledWorld </api/world_tiled>`"
msgstr "Siehe: :doc:`TiledWorld <../api/world.tiledworld>`"

#: ../../source/api/world.md
#, fuzzy
msgid "Parameters"
msgstr "Parameter"

#: miniworlds.worlds.world.World:83 of
msgid "columns of new world (default: 40)"
msgstr "Spalten der neuen Welt (Standard: 40)"

#: miniworlds.worlds.world.World:84 of
msgid "rows of new world (default:40)"
msgstr "Zeilen der neuen Welt (Standard:40)"

#: miniworlds.worlds.world.World:85 of
msgid "Size of tiles (1 for normal worlds, can differ for Tiledworlds)"
msgstr "Größe der Kacheln (1 für normale Welten, kann für Tiled-Welten abweichen)"

#: ../../source/api/world.md
msgid "Public Data Attributes:"
msgstr "Öffentliche Datenattribute:"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`subclasses <miniworlds.worlds.world.World.subclasses>`\\"
msgstr ":py:obj:`Unterklassen <miniworlds.worlds.world.World.subclasses>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`class_name <miniworlds.worlds.world.World.class_name>`\\"
msgstr ":py:obj:`class_name <miniworlds.worlds.world.World.class_name>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`step <miniworlds.worlds.world.World.step>`\\"
msgstr ":py:obj:`step <miniworlds.worlds.world.World.step>`\\"

#: ../../None:29:<autosummary>:1 miniworlds.worlds.world.World.step:1 of
msgid "Step defines how often the method ``act()`` will be called."
msgstr "Der Schritt definiert, wie oft die Methode ``act()`` aufgerufen wird."

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`fps <miniworlds.worlds.world.World.fps>`\\"
msgstr ":py:obj:`fps <miniworlds.worlds.world.World.fps>`\\"

#: ../../None:29:<autosummary>:1 miniworlds.worlds.world.World.fps:1 of
msgid "Frames per second shown on the screen."
msgstr "Bilder pro Sekunde auf dem Bildschirm angezeigt."

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`world_size_x <miniworlds.worlds.world.World.world_size_x>`\\"
msgstr ":py:obj:`world_size_x <miniworlds.worlds.world.World.world_size_x>`\\"

#: ../../None:29:<autosummary>:1 miniworlds.worlds.world.World.world_size_x:1
#: of
msgid "The x-world_size (defaults to view_size)"
msgstr "Die x-world_size (standardmäßig view_size)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`world_size_y <miniworlds.worlds.world.World.world_size_y>`\\"
msgstr ":py:obj:`world_size_y <miniworlds.worlds.world.World.world_size_y>`\\"

#: ../../None:29:<autosummary>:1 miniworlds.worlds.world.World.world_size_y:1
#: of
msgid "The y-world_size (defaults to view_size)"
msgstr "Die y-world_size (standardmäßig view_size)"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`columns <miniworlds.worlds.world.World.columns>`\\"
msgstr ":py:obj:`columns <miniworlds.worlds.world.World.columns>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`rows <miniworlds.worlds.world.World.rows>`\\"
msgstr ":py:obj:`rows <miniworlds.worlds.world.World.rows>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`size <miniworlds.worlds.world.World.size>`\\"
msgstr ":py:obj:`size <miniworlds.worlds.world.World.size>`\\"

#: ../../None:29:<autosummary>:1 miniworlds.worlds.world.World.size:1 of
msgid "Set the size of world"
msgstr "Stelle die Größe der Welt ein"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`background <miniworlds.worlds.world.World.background>`\\"
msgstr ":py:obj:`Hintergrund <miniworlds.worlds.world.World.background>`\\"

#: ../../None:29:<autosummary>:1 ../../None:35:<autosummary>:1
#: miniworlds.worlds.world.World.background:1
#: miniworlds.worlds.world.World.get_background:1 of
msgid "Returns the current background"
msgstr "Gibt den aktuellen Hintergrund zurück"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`has_background <miniworlds.worlds.world.World.has_background>`\\"
msgstr ":py:obj:`has_background <miniworlds.worlds.world.World.has_background>`\\"

#: ../../None:29:<autosummary>:1
msgid ""
":py:obj:`registered_events "
"<miniworlds.worlds.world.World.registered_events>`\\"
msgstr ""
":py:obj:`registered_events "
"<miniworlds.worlds.world.World.registered_events>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`image <miniworlds.worlds.world.World.image>`\\"
msgstr ":py:obj:`image <miniworlds.worlds.world.World.image>`\\"

#: ../../None:29:<autosummary>:1 miniworlds.worlds.world.World.image:1 of
msgid "The current displayed image"
msgstr "Das aktuell angezeigte Bild"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`actors <miniworlds.worlds.world.World.actors>`\\"
msgstr ":py:obj:`actors <miniworlds.worlds.world.World.actors>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`event_manager <miniworlds.worlds.world.World.event_manager>`\\"
msgstr ":py:obj:`event_manager <miniworlds.worlds.world.World.event_manager>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`clock <miniworlds.worlds.world.World.clock>`\\"
msgstr ":py:obj:`clock <miniworlds.worlds.world.World.clock>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`frame <miniworlds.worlds.world.World.frame>`\\"
msgstr ":py:obj:`frame <miniworlds.worlds.world.World.frame>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`is_running <miniworlds.worlds.world.World.is_running>`\\"
msgstr ":py:obj:`is_running <miniworlds.worlds.world.World.is_running>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`actors_fixed_size "
"<miniworlds.worlds.world.World.actors_fixed_size>`\\"
msgstr ":py:obj:`actors <miniworlds.worlds.world.World.actors>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`backgrounds <miniworlds.worlds.world.World.backgrounds>`\\"
msgstr ":py:obj:`Hintergründe <miniworlds.worlds.world.World.backgrounds>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`layout <miniworlds.worlds.world.World.layout>`\\"
msgstr ":py:obj:`sound <miniworlds.worlds.world.World.sound>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`data <miniworlds.worlds.world.World.data>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`mouse <miniworlds.worlds.world.World.mouse>`\\"
msgstr ":py:obj:`music <miniworlds.worlds.world.World.music>`\\"

#: ../../None:29:<autosummary>:1
#, fuzzy
msgid ":py:obj:`draw <miniworlds.worlds.world.World.draw>`\\"
msgstr ":py:obj:`rows <miniworlds.worlds.world.World.rows>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`music <miniworlds.worlds.world.World.music>`\\"
msgstr ":py:obj:`music <miniworlds.worlds.world.World.music>`\\"

#: ../../None:29:<autosummary>:1
msgid ":py:obj:`sound <miniworlds.worlds.world.World.sound>`\\"
msgstr ":py:obj:`sound <miniworlds.worlds.world.World.sound>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`window <miniworlds.worlds.world_base.WorldBase.window>`\\"
msgstr ":py:obj:`Fenster <miniworlds.worlds.world_base.WorldBase.window>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`size <miniworlds.worlds.world_base.WorldBase.size>`\\"
msgstr ":py:obj:`Größe <miniworlds.worlds.world_base.WorldBase.size>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`topleft <miniworlds.worlds.world_base.WorldBase.topleft>`\\"
msgstr ":py:obj:`topleft <miniworlds.worlds.world_base.WorldBase.topleft>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`width <miniworlds.worlds.world_base.WorldBase.width>`\\"
msgstr ":py:obj:`Breite <miniworlds.worlds.world_base.WorldBase.width>`\\"

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`height <miniworlds.worlds.world_base.WorldBase.height>`\\"
msgstr ":py:obj:`Höhe <miniworlds.worlds.world_base.WorldBase.height>`\\"

#: ../../source/api/world.md
msgid "Public Methods:"
msgstr "Öffentliche Methoden:"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.worlds.world.World.__init__>`\\ \\(\\[x\\, "
"y\\]\\)"
msgstr ""
":py:obj:`__init__ <miniworlds.worlds.world.World.__init__>`\\ \\(\\[x\\, "
"y\\]\\)"

#: ../../None:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`contains_position "
"<miniworlds.worlds.world.World.contains_position>`\\ \\(pos\\)"
msgstr ""
":py:obj:`detect_position "
"<miniworlds.worlds.world.World.detect_position>`\\ \\(pos\\)"

#: ../../None:35:<autosummary>:1
#: miniworlds.worlds.world.World.contains_position:1 of
msgid "Checks if position is in the world."
msgstr "Prüft, ob die Position in der Welt ist."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`contains_rect <miniworlds.worlds.world.World.contains_rect>`\\ "
"\\(rect\\)"
msgstr ""
":py:obj:`contains_rect <miniworlds.worlds.world.World.contains_rect>`\\ "
"\\(rect\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.contains_rect:1
#: of
msgid "Returns True if the entire rectangle is fully inside the world."
msgstr ""

#: ../../None:35:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`contains_rect_any "
"<miniworlds.worlds.world.World.contains_rect_any>`\\ \\(rect\\)"
msgstr ""
":py:obj:`contains_rect <miniworlds.worlds.world.World.contains_rect>`\\ "
"\\(rect\\)"

#: ../../None:35:<autosummary>:1
#: miniworlds.worlds.world.World.contains_rect_any:1 of
#, fuzzy
msgid "Returns True if any part of the rectangle is inside the world."
msgstr "Wahr, wenn die Position in der Welt ist."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`set_columns <miniworlds.worlds.world.World.set_columns>`\\ "
"\\(value\\)"
msgstr ""
":py:obj:`set_columns <miniworlds.worlds.world.World.set_columns>`\\ "
"\\(Wert\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`set_rows <miniworlds.worlds.world.World.set_rows>`\\ \\(value\\)"
msgstr ""
":py:obj:`setze_zeilen <miniworlds.worlds.world.World.set_rows>`\\ "
"\\(wert\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`borders <miniworlds.worlds.world.World.borders>`\\ \\(value\\)"
msgstr ":py:obj:`Grenzen <miniworlds.worlds.world.World.borders>`\\ \\(Wert\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.borders:1 of
msgid "Gets all borders from a source (`Position` or `Rect`)."
msgstr "Ruft alle Ränder aus einer Quelle ab (`Position` oder `Rechteck`)."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`get_background <miniworlds.worlds.world.World.get_background>`\\"
" \\(\\)"
msgstr ""
":py:obj:`get_background <miniworlds.worlds.world.World.get_background>`\\"
" \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`switch_background "
"<miniworlds.worlds.world.World.switch_background>`\\ \\(background\\)"
msgstr ""
":py:obj:`switch_background "
"<miniworlds.worlds.world.World.switch_background>`\\ \\(background\\)"

#: ../../None:35:<autosummary>:1
#: miniworlds.worlds.world.World.switch_background:1 of
msgid "Switches the background"
msgstr "Wechselt den Hintergrund"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`remove_background "
"<miniworlds.worlds.world.World.remove_background>`\\ "
"\\(\\[background\\]\\)"
msgstr ""
":py:obj:`remove_background "
"<miniworlds.worlds.world.World.remove_background>`\\ "
"\\(\\[hintergrund\\]\\)"

#: ../../None:35:<autosummary>:1
#: miniworlds.worlds.world.World.remove_background:1 of
msgid "Removes a background from world"
msgstr "Entfernt einen Hintergrund aus der Welt"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`set_background <miniworlds.worlds.world.World.set_background>`\\"
" \\(source\\)"
msgstr ""
":py:obj:`set_background <miniworlds.worlds.world.World.set_background>`\\"
" \\(Quelle\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.add_background:1
#: miniworlds.worlds.world.World.set_background:1 of
msgid "Adds a new background to the world"
msgstr "Fügt der Welt einen neuen Hintergrund hinzu"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`add_background <miniworlds.worlds.world.World.add_background>`\\"
" \\(source\\)"
msgstr ""
":py:obj:`add_background <miniworlds.worlds.world.World.add_background>`\\"
" \\(source\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`start <miniworlds.worlds.world.World.start>`\\ \\(\\)"
msgstr ":py:obj:`start <miniworlds.worlds.world.World.start>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.start:1 of
msgid "Starts the world, if world is not running."
msgstr "Startet die Welt, wenn die Welt nicht läuft."

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`stop <miniworlds.worlds.world.World.stop>`\\ \\(\\[frames\\]\\)"
msgstr ":py:obj:`stop <miniworlds.worlds.world.World.stop>`\\ \\(\\[Frames\\]\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.stop:1 of
msgid "Stops the world."
msgstr "Hält die Welt an."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`start_listening "
"<miniworlds.worlds.world.World.start_listening>`\\ \\(\\)"
msgstr ""
":py:obj:`start_listening "
"<miniworlds.worlds.world.World.start_listening>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`stop_listening <miniworlds.worlds.world.World.stop_listening>`\\"
" \\(\\)"
msgstr ""
":py:obj:`stop_listening <miniworlds.worlds.world.World.stop_listening>`\\"
" \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`run <miniworlds.worlds.world.World.run>`\\ \\(\\[fullscreen\\, "
"fit\\_desktop\\, replit\\, ...\\]\\)"
msgstr ""
":py:obj:`run <miniworlds.worlds.world.World.run>`\\ \\(\\[Vollbild\\, "
"fit\\_desktop\\, replit\\, ...\\]\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.run:1 of
msgid "Starts the main application loop of the Miniworlds engine."
msgstr ""

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`is_in_world <miniworlds.worlds.world.World.is_in_world>`\\ "
"\\(position\\)"
msgstr ""
":py:obj:`is_in_world <miniworlds.worlds.world.World.is_in_world>`\\ "
"\\(position\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`send_message <miniworlds.worlds.world.World.send_message>`\\ "
"\\(message\\[\\, data\\]\\)"
msgstr ""
":py:obj:`send_message <miniworlds.worlds.world.World.send_message>`\\ "
"\\(Nachricht\\[\\, Daten\\]\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.send_message:1
#: of
msgid "Sends broadcast message"
msgstr "Sendet Rundfunknachricht"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`quit <miniworlds.worlds.world.World.quit>`\\ "
"\\(\\[exit\\_code\\]\\)"
msgstr ""
":py:obj:`quit <miniworlds.worlds.world.World.quit>`\\ "
"\\(\\[exit\\_code\\]\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.quit:1 of
msgid "quits app and closes the window"
msgstr "beendet die App und schließt das Fenster"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`reset <miniworlds.worlds.world.World.reset>`\\ \\(\\)"
msgstr ":py:obj:`reset <miniworlds.worlds.world.World.reset>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.reset:1 of
msgid ""
"Resets the world Creates a new world with init-function - recreates all "
"actors and actors on the world."
msgstr ""
"Setzt die Welt zurück Erstellt eine neue Welt mit der Init-Funktion - "
"erstellt alle Akteure und Akteure in der Welt neu."

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`clear <miniworlds.worlds.world.World.clear>`\\ \\(\\)"
msgstr ":py:obj:`clear <miniworlds.worlds.world.World.clear>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`get_from_pixel <miniworlds.worlds.world.World.get_from_pixel>`\\"
" \\(position\\)"
msgstr ""
":py:obj:`get_from_pixel <miniworlds.worlds.world.World.get_from_pixel>`\\"
" \\(position\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.get_from_pixel:1
#: of
msgid "Gets Position from pixel"
msgstr "Position aus Pixel erhalten"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`to_pixel <miniworlds.worlds.world.World.to_pixel>`\\ "
"\\(position\\)"
msgstr ""
":py:obj:`to_pixel <miniworlds.worlds.world.World.to_pixel>`\\ "
"\\(position\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`on_setup <miniworlds.worlds.world.World.on_setup>`\\ \\(\\)"
msgstr ":py:obj:`on_setup <miniworlds.worlds.world.World.on_setup>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.on_setup:1 of
msgid "Overwrite or register this method to call `on_setup`-Actions"
msgstr ""
"Überschreiben oder registrieren Sie diese Methode, um `on_setup`-Aktionen"
" aufzurufen"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`detect_actors <miniworlds.worlds.world.World.detect_actors>`\\ "
"\\(position\\)"
msgstr ""
":py:obj:`detect_actors <miniworlds.worlds.world.World.detect_actors>`\\ "
"\\(Position\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.detect_actors:1
#: of
msgid "Gets all actors which are found at a specific position."
msgstr "Ruft alle Akteure ab, die sich an einer bestimmten Position befinden."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`get_actors_from_pixel "
"<miniworlds.worlds.world.World.get_actors_from_pixel>`\\ \\(pixel\\)"
msgstr ""
":py:obj:`get_actors_from_pixel "
"<miniworlds.worlds.world.World.get_actors_from_pixel>`\\ \\(pixel\\)"

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`register <miniworlds.worlds.world.World.register>`\\ \\(method\\)"
msgstr ""
":py:obj:`register <miniworlds.worlds.world.World.register>`\\ "
"\\(Methode\\)"

#: ../../None:35:<autosummary>:1
msgid "Used as decorator e.g. @register def method."
msgstr "Verwendet als Dekorator, z.B. @register def Methode."

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`unregister <miniworlds.worlds.world.World.unregister>`\\ "
"\\(method\\)"
msgstr ""
":py:obj:`unregister <miniworlds.worlds.world.World.unregister>`\\ "
"\\(Methode\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`distance_to <miniworlds.worlds.world.World.distance_to>`\\ "
"\\(pos1\\, pos2\\)"
msgstr ""
":py:obj:`distance_to <miniworlds.worlds.world.World.distance_to>`\\ "
"\\(pos1\\, pos2\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`direction_to <miniworlds.worlds.world.World.direction_to>`\\ "
"\\(pos1\\, pos2\\)"
msgstr ""
":py:obj:`direction_to <miniworlds.worlds.world.World.direction_to>`\\ "
"\\(pos1\\, pos2\\)"

#: ../../None:35:<autosummary>:1
msgid ""
":py:obj:`screenshot <miniworlds.worlds.world.World.screenshot>`\\ "
"\\(\\[filename\\]\\)"
msgstr ""
":py:obj:`screenshot <miniworlds.worlds.world.World.screenshot>`\\ "
"\\(\\[Dateiname\\]\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.screenshot:1 of
msgid "Creates a screenshot in given file."
msgstr "Erstellt einen Screenshot in der angegebenen Datei."

#: ../../None:35:<autosummary>:1
msgid ":py:obj:`get_events <miniworlds.worlds.world.World.get_events>`\\ \\(\\)"
msgstr ":py:obj:`get_events <miniworlds.worlds.world.World.get_events>`\\ \\(\\)"

#: ../../None:35:<autosummary>:1 miniworlds.worlds.world.World.get_events:1 of
msgid "Gets a set of all events you can register"
msgstr "Erhält eine Liste aller Ereignisse, für die Sie sich registrieren können"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.worlds.world_base.WorldBase.__init__>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`__init__ <miniworlds.worlds.world_base.WorldBase.__init__>`\\ "
"\\(\\)"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`remove <miniworlds.worlds.world_base.WorldBase.remove>`\\ "
"\\(actor\\)"
msgstr ""
":py:obj:`remove <miniworlds.worlds.world_base.WorldBase.remove>`\\ "
"\\(Akteur\\)"

#: ../../None:8:<autosummary>:1
msgid "Implemented in subclasses"
msgstr "In Unterklassen implementiert"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`on_change <miniworlds.worlds.world_base.WorldBase.on_change>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`on_change <miniworlds.worlds.world_base.WorldBase.on_change>`\\ "
"\\(\\)"

#: ../../None:8:<autosummary>:1
msgid "implemented in subclasses"
msgstr "in Unterklassen implementiert"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`on_new_actor "
"<miniworlds.worlds.world_base.WorldBase.on_new_actor>`\\ \\(actor\\)"
msgstr ""
":py:obj:`on_new_actor "
"<miniworlds.worlds.world_base.WorldBase.on_new_actor>`\\ \\(actor\\)"

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`on_remove_actor "
"<miniworlds.worlds.world_base.WorldBase.on_remove_actor>`\\ \\(actor\\)"
msgstr ""
":py:obj:`on_remove_actor "
"<miniworlds.worlds.world_base.WorldBase.on_remove_actor>`\\ \\(Akteur\\)"

#: ../../None:8:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`get_world_connector "
"<miniworlds.worlds.world_base.WorldBase.get_world_connector>`\\ "
"\\(actor\\)"
msgstr ""
":py:obj:`get_world_connector "
"<miniworlds.worlds.world.World.get_world_connector>`\\ \\(actor\\)"

#: ../../source/api/world.md
msgid "Private Data Attributes:"
msgstr "Private Datenattribute:"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.world.World._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <miniworlds.worlds.world.World._abc_impl>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_fps <miniworlds.worlds.world.World._fps>`\\"
msgstr ":py:obj:`_fps <miniworlds.worlds.world.World._fps>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_step <miniworlds.worlds.world.World._step>`\\"
msgstr ":py:obj:`_step <miniworlds.worlds.world.World._step>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_key_pressed <miniworlds.worlds.world.World._key_pressed>`\\"
msgstr ":py:obj:`_key_pressed <miniworlds.worlds.world.World._key_pressed>`\\"

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`_animated <miniworlds.worlds.world.World._animated>`\\"
msgstr ":py:obj:`_animated <miniworlds.worlds.world.World._animated>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ":py:obj:`_timed_objects <miniworlds.worlds.world.World._timed_objects>`\\"
msgstr ":py:obj:`timed_objects <miniworlds.worlds.world.World.timed_objects>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_dynamic_actors "
"<miniworlds.worlds.world.World._dynamic_actors>`\\"
msgstr ":py:obj:`dynamic_actors <miniworlds.worlds.world.world._dynamic_actors>`\\"

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.world.World._registered_methods>`\\"
msgstr ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.world.World._registered_methods>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ":py:obj:`_mainloop <miniworlds.worlds.world.World._mainloop>`\\"
msgstr ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"

#: ../../None:12:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_collision_manager "
"<miniworlds.worlds.world.World._collision_manager>`\\"
msgstr ""
":py:obj:`collision_manager "
"<miniworlds.worlds.world.World.collision_manager>`\\"

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.world_base.WorldBase._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <miniworlds.worlds.world_base.WorldBase._abc_impl>`\\"

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`_abc_impl <abc.ABC._abc_impl>`\\"
msgstr ":py:obj:`_abc_impl <abc.ABC._abc_impl>`\\"

#: ../../source/api/world.md
msgid "Private Methods:"
msgstr "Private Methoden:"

#: ../../None:3:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_validate_parameters "
"<miniworlds.worlds.world.World._validate_parameters>`\\ \\(x\\, y\\)"
msgstr ""
":py:obj:`validate_parameters "
"<miniworlds.worlds.world.World.validate_parameters>`\\ \\(x\\, y\\)"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_get_mainloopmanager_class "
"<miniworlds.worlds.world_base.WorldBase._get_mainloopmanager_class>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`_get_camera_manager_class "
"<miniworlds.worlds.world.World._get_camera_manager_class>`\\ \\(\\)"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_get_camera_manager_class "
"<miniworlds.worlds.world_base.WorldBase._get_camera_manager_class>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`_get_camera_manager_class "
"<miniworlds.worlds.world.World._get_camera_manager_class>`\\ \\(\\)"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_get_world_connector_class "
"<miniworlds.worlds.world_base.WorldBase._get_world_connector_class>`\\ "
"\\(\\)"
msgstr ""
":py:obj:`_get_world_connector_class "
"<miniworlds.worlds.world.World._get_world_connector_class>`\\ \\(\\)"

#: ../../None:6:<autosummary>:1
msgid "needed by get_world_connector in parent class"
msgstr "benötigt von get_world_connector in der Elternklasse"

#: ../../None:6:<autosummary>:1
#, fuzzy
msgid ""
":py:obj:`_create_event_manager "
"<miniworlds.worlds.world_base.WorldBase._create_event_manager>`\\ \\(\\)"
msgstr ""
":py:obj:`_create_event_manager "
"<miniworlds.worlds.world.World._create_event_manager>`\\ \\(\\)"

#: miniworlds.worlds.world.World.add_background:3
#: miniworlds.worlds.world.World.set_background:3 of
msgid ""
"If multiple backgrounds are added, the last adds background will be set "
"as active background."
msgstr ""
"Wenn mehrere Hintergründe hinzugefügt werden, wird der zuletzt "
"hinzugefügte Hintergrund als aktiver Hintergrund festgelegt."

#: ../../source/api/world.md
msgid "Return type"
msgstr ""

#: miniworlds.worlds.world.World.add_background:5
#: miniworlds.worlds.world.World.get_background:4
#: miniworlds.worlds.world.World.set_background:5
#: miniworlds.worlds.world.World.switch_background:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.appearances.background.Background\\``"
msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.appearances.background.Background\\``"

#: miniworlds.worlds.world.World.add_background:7
#: miniworlds.worlds.world.World.set_background:7 of
msgid ""
"The path to the first image of the background or a color (e.g. (255,0,0) "
"for red or \"images/my_background.png\" as path to a background."
msgstr ""
"Der Pfad zum ersten Bild des Hintergrunds oder eine Farbe (z.B. (255,0,0)"
" für Rot oder \"images/my_background.png\" als Pfad zu einem Hintergrund."

#: miniworlds.worlds.world.World.add_background:12
#: miniworlds.worlds.world.World.set_background:12 of
msgid "Add multiple Backgrounds:"
msgstr "Mehrere Hintergründe hinzufügen:"

#: ../../source/api/world.md
msgid "Returns"
msgstr ""

#: miniworlds.worlds.world.World.add_background:23
#: miniworlds.worlds.world.World.set_background:23 of
msgid "The new created background."
msgstr "Der neu erstellte Hintergrund."

#: miniworlds.worlds.world.World.borders:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`list\\``"
msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`list\\``"

#: miniworlds.worlds.world.World.borders:5 of
msgid "Position or rect"
msgstr "Position oder Rechteck"

#: miniworlds.worlds.world.World.borders:7 of
msgid ""
"A list of borders, e.g. [\"left\", \"top\"], if rect is touching the left"
" a top border."
msgstr ""
"Eine Liste von Rändern, z.B. [\"links\", \"oben\"], wenn das Rechteck den"
" linken und oberen Rand berührt."

#: miniworlds.worlds.world.World.contains_position:3 of
msgid "True, if Position is in the world."
msgstr "Wahr, wenn die Position in der Welt ist."

#: miniworlds.worlds.world.World.contains_rect:3
#: miniworlds.worlds.world.World.contains_rect_any:3 of
msgid "Useful when ensuring that an object is completely within bounds."
msgstr ""

#: miniworlds.worlds.world.World.detect_actors:3 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.List\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~miniworlds.actors.actor.Actor\\`\\]`"
msgstr ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.List\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~miniworlds.actors.actor.Actor\\`\\]`"

#: miniworlds.worlds.world.World.detect_actors:5 of
msgid "Position, where actors should be searched."
msgstr "Position, wo Actor gesucht werden sollten."

#: miniworlds.worlds.world.World.detect_actors:7 of
msgid "A list of actors"
msgstr "Eine Liste von Actorn"

#: miniworlds.worlds.world.World.detect_actors:11 of
msgid "Get all actors at mouse position:"
msgstr "Alle Akteure an der Mausposition abrufen:"

#: miniworlds.worlds.world.World.direction_to:2 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"
msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"

#: miniworlds.worlds.world.World.fps:3 of
msgid ""
"This controls how often the screen is redrawn. However, the game logic "
"can be called more often or less often independently of this with "
"``world.speed.``"
msgstr ""
"Dies steuert, wie oft der Bildschirm neu gezeichnet wird. Die Spiel-Logik"
" kann jedoch unabhängig davon häufiger oder seltener aufgerufen werden "
"mit ``world.speed.``"

#: miniworlds.worlds.world.World.get_from_pixel:3 of
msgid ""
"PixelWorld: the pixel position is returned TiledWorld: the tile-position "
"is returned"
msgstr ""
"PixelWorld: die Pixelposition wird zurückgegeben TiledWorld: die "
"Kachelposition wird zurückgegeben"

#: miniworlds.worlds.world.World.get_from_pixel:7 of
msgid "Position as pixel coordinates"
msgstr "Position als Pixelkoordinaten"

#: miniworlds.worlds.world.World.get_from_pixel:8 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Optional\\`\\\\"
" \\\\\\[\\:py\\:class\\:\\`tuple\\`\\]`"
msgstr ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Optional\\`\\\\"
" \\\\\\[\\:py\\:class\\:\\`tuple\\`\\]`"

#: miniworlds.worlds.world.World.get_from_pixel:9 of
msgid ""
"The pixel position, if position is on the world, None if position is not "
"on World."
msgstr ""
"Die Pixelposition, wenn die Position in der Welt ist, None, wenn die "
"Position nicht in der Welt ist."

#: miniworlds.worlds.world.World.is_in_world:2 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"

#: miniworlds.worlds.world.World.register:1 of
msgid "Used as decorator e.g. @register def method..."
msgstr "Verwendet als Dekorator, z.B. @register def Methode..."

#: miniworlds.worlds.world.World.register:7 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\``"
msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\``"

#: miniworlds.worlds.world.World.remove_background:3 of
msgid ""
"The index of the new background. Defaults to -1 (last background) or an "
"Appearance"
msgstr ""
"Der Index des neuen Hintergrunds. Standardmäßig -1 (letzter Hintergrund) "
"oder ein Appearance"

#: miniworlds.worlds.world.World.reset:6 of
msgid "Restarts flappy the bird game after collision with pipe:"
msgstr "Startet das Spiel Flappy Bird nach einer Kollision mit einem Rohr neu:"

#: miniworlds.worlds.world.World.run:3 of
msgid ""
"This method should be called at the end of a Miniworlds program to "
"initialize and start the world, event system, background rendering, and "
"main application coroutine."
msgstr ""

#: miniworlds.worlds.world.World.run:6 of
msgid ""
"It automatically handles environments like standard Python scripts, "
"REPLs, or Jupyter notebooks by safely managing the asyncio event loop."
msgstr ""

#: miniworlds.worlds.world.World.run:9 of
msgid "Whether to launch the application in fullscreen mode."
msgstr ""

#: miniworlds.worlds.world.World.run:11 of
msgid "Whether the app should fit to desktop resolution."
msgstr ""

#: miniworlds.worlds.world.World.run:13 of
msgid "Whether the app is running inside Replit (adjusts behavior accordingly)."
msgstr ""

#: miniworlds.worlds.world.World.run:15 of
msgid "An optional initial event to queue before starting the loop."
msgstr ""

#: miniworlds.worlds.world.World.run:17 of
msgid "Data associated with the initial event."
msgstr ""

#: miniworlds.worlds.world.World.screenshot:3 of
msgid ""
"The location of the file. The folder must exist. Defaults to "
"\"screenshot.jpg\"."
msgstr ""
"Der Speicherort der Datei. Der Ordner muss existieren. Standardmäßig "
"\"screenshot.jpg\"."

#: miniworlds.worlds.world.World.send_message:3 of
msgid "A message can be received by the world or any actor on world"
msgstr ""
"Eine Nachricht kann von der Welt oder jedem Akteur in der Welt empfangen "
"werden"

#: miniworlds.worlds.world.World.size:5 of
msgid "Create a world with 800 columns and 600 rows:"
msgstr "Erstelle eine Welt mit 800 Spalten und 600 Zeilen:"

#: miniworlds.worlds.world.World.step:3 of
msgid "If e.g. ``step = 30``, the game logic will be called every 30th-frame."
msgstr ""
"Wenn z.B. ``step = 30`` ist, wird die Spiel-Logik in jedem 30. Frame "
"aufgerufen."

#: miniworlds.worlds.world.World.step:7 of
msgid "You can adjust the frame-rate with ``world.fps``"
msgstr "Sie können die Bildrate mit ``world.fps`` anpassen"

#: miniworlds.worlds.world.World.step:11 of
msgid "Set speed and fps."
msgstr "Geschwindigkeit und fps einstellen."

#: miniworlds.worlds.world.World.step:30
#: miniworlds.worlds.world.World.switch_background:37 of
msgid "Output:"
msgstr "Ausgabe:"

#: miniworlds.worlds.world.World.step:32 of
msgid "``` 3 6 9 12 15 ```"
msgstr "``` 3 6 9 12 15 ```"

#: miniworlds.worlds.world.World.stop:3 of
msgid "If ``frames`` is set, world will be stopped in n frames. . Defaults to 0."
msgstr ""
"Wenn ``frames`` gesetzt ist, wird die Welt in n Frames angehalten. . "
"Standardmäßig 0."

#: miniworlds.worlds.world.World.switch_background:5 of
msgid ""
"The index of the new background or an Appearance. If index = -1, the next"
" background will be selected"
msgstr ""
"Der Index des neuen Hintergrunds oder ein Appearance. Wenn index = -1, "
"wird der nächste Hintergrund ausgewählt"

#: miniworlds.worlds.world.World.switch_background:10 of
msgid "Switch between different backgrounds:"
msgstr "Zwischen verschiedenen Hintergründen wechseln:"

#: miniworlds.worlds.world.World.switch_background:39 of
msgid "Switch background"
msgstr "Hintergrund wechseln"

#: miniworlds.worlds.world.World.switch_background:43 of
msgid "The new background"
msgstr "Der neue Hintergrund"

#~ msgid ":py:obj:`surface <miniworlds.worlds.world.World.surface>`\\"
#~ msgstr ":py:obj:`Oberfläche <miniworlds.worlds.world.World.surface>`\\"

#~ msgid ""
#~ ":py:obj:`default_fill_color "
#~ "<miniworlds.worlds.world.World.default_fill_color>`\\"
#~ msgstr ""
#~ ":py:obj:`default_fill_color "
#~ "<miniworlds.worlds.world.World.default_fill_color>`\\"

#~ msgid "Set default fill color for borders and lines"
#~ msgstr "Standardfüllfarbe für Rahmen und Linien festlegen"

#~ msgid ""
#~ ":py:obj:`default_is_filled "
#~ "<miniworlds.worlds.world.World.default_is_filled>`\\"
#~ msgstr ""
#~ ":py:obj:`default_is_filled "
#~ "<miniworlds.worlds.world.World.default_is_filled>`\\"

#~ msgid ""
#~ ":py:obj:`default_stroke_color "
#~ "<miniworlds.worlds.world.World.default_stroke_color>`\\"
#~ msgstr ""
#~ ":py:obj:`default_stroke_color "
#~ "<miniworlds.worlds.world.World.default_stroke_color>`\\"

#~ msgid "Set default stroke color for borders and lines."
#~ msgstr "Standardstrichfarbe für Rahmen und Linien festlegen."

#~ msgid ""
#~ ":py:obj:`default_border_color "
#~ "<miniworlds.worlds.world.World.default_border_color>`\\"
#~ msgstr ""
#~ ":py:obj:`default_border_color "
#~ "<miniworlds.worlds.world.World.default_border_color>`\\"

#~ msgid "Set default border color for borders and lines."
#~ msgstr "Standardrahmenfarbe für Rahmen und Linien festlegen."

#~ msgid ""
#~ ":py:obj:`default_border "
#~ "<miniworlds.worlds.world.World.default_border>`\\"
#~ msgstr ""
#~ ":py:obj:`default_border "
#~ "<miniworlds.worlds.world.World.default_border>`\\"

#~ msgid "Sets default border color for actors"
#~ msgstr "Legt die Standardrahmenfarbe für Akteure fest"

#~ msgid ":py:obj:`fill_color <miniworlds.worlds.world.World.fill_color>`\\"
#~ msgstr ":py:obj:`fill_color <miniworlds.worlds.world.World.fill_color>`\\"

#~ msgid ":py:obj:`color <miniworlds.worlds.world.World.color>`\\"
#~ msgstr ":py:obj:`Farbe <miniworlds.worlds.world.World.color>`\\"

#~ msgid ":py:obj:`window <miniworlds.worlds.world.World.window>`\\"
#~ msgstr ":py:obj:`Fenster <miniworlds.worlds.world.World.window>`\\"

#~ msgid "Gets the parent window"
#~ msgstr "Ruft das übergeordnete Fenster ab"

#~ msgid ":py:obj:`mouse_manager <miniworlds.worlds.world.World.mouse_manager>`\\"
#~ msgstr ":py:obj:`mouse_manager <miniworlds.worlds.world.World.mouse_manager>`\\"

#~ msgid ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.world.World.is_display_initialized>`\\"
#~ msgstr ""
#~ ":py:obj:`is_display_initialized "
#~ "<miniworlds.worlds.world.World.is_display_initialized>`\\"

#~ msgid ":py:obj:`is_listening <miniworlds.worlds.world.World.is_listening>`\\"
#~ msgstr ":py:obj:`is_listening <miniworlds.worlds.world.World.is_listening>`\\"

#~ msgid ":py:obj:`surface <miniworlds.worlds.world_base.WorldBase.surface>`\\"
#~ msgstr ":py:obj:`Oberfläche <miniworlds.worlds.world_base.WorldBase.surface>`\\"

#~ msgid ":py:obj:`rect <miniworlds.worlds.world_base.WorldBase.rect>`\\"
#~ msgstr ":py:obj:`rect <miniworlds.worlds.world_base.WorldBase.rect>`\\"

#~ msgid ""
#~ ":py:obj:`window_docking_position "
#~ "<miniworlds.worlds.world_base.WorldBase.window_docking_position>`\\"
#~ msgstr ""
#~ ":py:obj:`window_docking_position "
#~ "<miniworlds.worlds.world_base.WorldBase.window_docking_position>`\\"

#~ msgid ""
#~ ":py:obj:`add_right <miniworlds.worlds.world.World.add_right>`\\"
#~ " \\(world\\[\\, size\\]\\)"
#~ msgstr ""
#~ ":py:obj:`add_right <miniworlds.worlds.world.World.add_right>`\\"
#~ " \\(world\\[\\, größe\\]\\)"

#~ msgid ""
#~ ":py:obj:`add_bottom "
#~ "<miniworlds.worlds.world.World.add_bottom>`\\ \\(world\\[\\, "
#~ "size\\]\\)"
#~ msgstr ""
#~ ":py:obj:`add_bottom "
#~ "<miniworlds.worlds.world.World.add_bottom>`\\ \\(world\\[\\, "
#~ "größe\\]\\)"

#~ msgid ""
#~ ":py:obj:`remove_world "
#~ "<miniworlds.worlds.world.World.remove_world>`\\ \\(container\\)"
#~ msgstr ""
#~ ":py:obj:`remove_world "
#~ "<miniworlds.worlds.world.World.remove_world>`\\ \\(container\\)"

#~ msgid "Detects if rect is completely on the world."
#~ msgstr "Erkennt, ob das Rechteck vollständig auf der Welt ist."

#~ msgid ""
#~ ":py:obj:`default_fill "
#~ "<miniworlds.worlds.world.World.default_fill>`\\ \\(value\\)"
#~ msgstr ""
#~ ":py:obj:`default_fill "
#~ "<miniworlds.worlds.world.World.default_fill>`\\ \\(Wert\\)"

#~ msgid "The method show() should always be called at the end of your program."
#~ msgstr ""
#~ "Die Methode show() sollte immer am "
#~ "Ende Ihres Programms aufgerufen werden."

#~ msgid ""
#~ ":py:obj:`init_display "
#~ "<miniworlds.worlds.world.World.init_display>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`init_display "
#~ "<miniworlds.worlds.world.World.init_display>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`play_sound "
#~ "<miniworlds.worlds.world.World.play_sound>`\\ \\(path\\)"
#~ msgstr ""
#~ ":py:obj:`play_sound "
#~ "<miniworlds.worlds.world.World.play_sound>`\\ \\(Pfad\\)"

#~ msgid "plays sound from path"
#~ msgstr "spielt Ton vom Pfad ab"

#~ msgid ""
#~ ":py:obj:`stop_sounds "
#~ "<miniworlds.worlds.world.World.stop_sounds>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`stop_sounds "
#~ "<miniworlds.worlds.world.World.stop_sounds>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`play_music "
#~ "<miniworlds.worlds.world.World.play_music>`\\ \\(path\\)"
#~ msgstr ""
#~ ":py:obj:`play_music "
#~ "<miniworlds.worlds.world.World.play_music>`\\ \\(Pfad\\)"

#~ msgid "plays a music from path"
#~ msgstr "spielt Musik von einem Pfad"

#~ msgid ""
#~ ":py:obj:`stop_music "
#~ "<miniworlds.worlds.world.World.stop_music>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`stop_music "
#~ "<miniworlds.worlds.world.World.stop_music>`\\ \\(\\)"

#~ msgid "stops a music"
#~ msgstr "stoppt eine Musik"

#~ msgid ""
#~ ":py:obj:`get_mouse_position "
#~ "<miniworlds.worlds.world.World.get_mouse_position>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_mouse_position "
#~ "<miniworlds.worlds.world.World.get_mouse_position>`\\ \\(\\)"

#~ msgid "Gets the current mouse_position"
#~ msgstr "Ermittelt die aktuelle Mausposition"

#~ msgid ""
#~ ":py:obj:`get_mouse_x "
#~ "<miniworlds.worlds.world.World.get_mouse_x>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_mouse_x "
#~ "<miniworlds.worlds.world.World.get_mouse_x>`\\ \\(\\)"

#~ msgid "Gets x-coordinate of mouse-position"
#~ msgstr "Ermittelt die x-Koordinate der Mausposition"

#~ msgid ""
#~ ":py:obj:`get_mouse_y "
#~ "<miniworlds.worlds.world.World.get_mouse_y>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_mouse_y "
#~ "<miniworlds.worlds.world.World.get_mouse_y>`\\ \\(\\)"

#~ msgid "Gets y-coordinate of mouse-position"
#~ msgstr "Erhält die y-Koordinate der Mausposition"

#~ msgid ""
#~ ":py:obj:`get_prev_mouse_position "
#~ "<miniworlds.worlds.world.World.get_prev_mouse_position>`\\ "
#~ "\\(\\)"
#~ msgstr ""
#~ ":py:obj:`get_prev_mouse_position "
#~ "<miniworlds.worlds.world.World.get_prev_mouse_position>`\\ "
#~ "\\(\\)"

#~ msgid "gets mouse-position of last frame"
#~ msgstr "Ermittelt die Mausposition des letzten Frames"

#~ msgid ""
#~ ":py:obj:`is_mouse_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_pressed>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`is_mouse_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_pressed>`\\ \\(\\)"

#~ msgid "Returns True, if mouse is pressed"
#~ msgstr "Gibt True zurück, wenn die Maus gedrückt ist"

#~ msgid ""
#~ ":py:obj:`is_mouse_left_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_left_pressed>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`is_mouse_left_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_left_pressed>`\\ \\(\\)"

#~ msgid "Returns True, if mouse left button is pressed"
#~ msgstr "Gibt True zurück, wenn die linke Maustaste gedrückt ist"

#~ msgid ""
#~ ":py:obj:`is_mouse_right_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_right_pressed>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`is_mouse_right_pressed "
#~ "<miniworlds.worlds.world.World.is_mouse_right_pressed>`\\ \\(\\)"

#~ msgid "Returns True, if mouse right button is pressed"
#~ msgstr "Gibt True zurück, wenn die rechte Maustaste gedrückt wird"

#~ msgid ""
#~ ":py:obj:`switch_world "
#~ "<miniworlds.worlds.world.World.switch_world>`\\ "
#~ "\\(new\\_world\\[\\, reset\\]\\)"
#~ msgstr ""
#~ ":py:obj:`switch_world "
#~ "<miniworlds.worlds.world.World.switch_world>`\\ "
#~ "\\(new\\_world\\[\\, reset\\]\\)"

#~ msgid "Switches to another world"
#~ msgstr "Wechselt in eine andere Welt"

#~ msgid ""
#~ ":py:obj:`get_color_from_pixel "
#~ "<miniworlds.worlds.world.World.get_color_from_pixel>`\\ "
#~ "\\(position\\)"
#~ msgstr ""
#~ ":py:obj:`get_color_from_pixel "
#~ "<miniworlds.worlds.world.World.get_color_from_pixel>`\\ "
#~ "\\(position\\)"

#~ msgid "Returns the color at a specific position"
#~ msgstr "Gibt die Farbe an einer bestimmten Position zurück"

#~ msgid ":py:obj:`repaint <miniworlds.worlds.world.World.repaint>`\\ \\(\\)"
#~ msgstr ":py:obj:`repaint <miniworlds.worlds.world.World.repaint>`\\ \\(\\)"

#~ msgid ":py:obj:`update <miniworlds.worlds.world.World.update>`\\ \\(\\)"
#~ msgstr ":py:obj:`update <miniworlds.worlds.world.World.update>`\\ \\(\\)"

#~ msgid "The mainloop, called once per frame."
#~ msgstr "Die Hauptschleife, die einmal pro Frame aufgerufen wird."

#~ msgid ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world.World.handle_event>`\\ \\(event\\[\\,"
#~ " data\\]\\)"
#~ msgstr ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world.World.handle_event>`\\ \\(event\\[\\,"
#~ " daten\\]\\)"

#~ msgid "Event handling"
#~ msgstr "Ereignisverwaltung"

#~ msgid ""
#~ ":py:obj:`direction <miniworlds.worlds.world.World.direction>`\\"
#~ " \\(point1\\, point2\\)"
#~ msgstr ""
#~ ":py:obj:`Richtung <miniworlds.worlds.world.World.direction>`\\"
#~ " \\(punkt1\\, punkt2\\)"

#~ msgid ""
#~ ":py:obj:`load_world_from_db "
#~ "<miniworlds.worlds.world.World.load_world_from_db>`\\ \\(file\\)"
#~ msgstr ""
#~ ":py:obj:`load_world_from_db "
#~ "<miniworlds.worlds.world.World.load_world_from_db>`\\ "
#~ "\\(Datei\\)"

#~ msgid "Loads a sqlite db file."
#~ msgstr "Lädt eine SQLite-Datenbankdatei."

#~ msgid ""
#~ ":py:obj:`load_actors_from_db "
#~ "<miniworlds.worlds.world.World.load_actors_from_db>`\\ "
#~ "\\(file\\, actor\\_classes\\)"
#~ msgstr ""
#~ ":py:obj:`load_actors_from_db "
#~ "<miniworlds.worlds.world.World.load_actors_from_db>`\\ "
#~ "\\(file\\, actor\\_klassen\\)"

#~ msgid "Loads all actors from db."
#~ msgstr "Lädt alle Akteure aus der Datenbank."

#~ msgid ""
#~ ":py:obj:`save_to_db "
#~ "<miniworlds.worlds.world.World.save_to_db>`\\ \\(file\\)"
#~ msgstr ""
#~ ":py:obj:`save_to_db "
#~ "<miniworlds.worlds.world.World.save_to_db>`\\ \\(Datei\\)"

#~ msgid "Saves the current world an all actors to database."
#~ msgstr "Speichert die aktuelle Welt und alle Akteure in der Datenbank."

#~ msgid ""
#~ ":py:obj:`get_columns_by_width "
#~ "<miniworlds.worlds.world.World.get_columns_by_width>`\\ "
#~ "\\(width\\)"
#~ msgstr ""
#~ ":py:obj:`get_columns_by_width "
#~ "<miniworlds.worlds.world.World.get_columns_by_width>`\\ "
#~ "\\(width\\)"

#~ msgid ""
#~ ":py:obj:`get_rows_by_height "
#~ "<miniworlds.worlds.world.World.get_rows_by_height>`\\ "
#~ "\\(height\\)"
#~ msgstr ""
#~ ":py:obj:`get_rows_by_height "
#~ "<miniworlds.worlds.world.World.get_rows_by_height>`\\ \\(Höhe\\)"

#~ msgid ""
#~ ":py:obj:`add_to_window "
#~ "<miniworlds.worlds.world_base.WorldBase.add_to_window>`\\ "
#~ "\\(app\\, dock\\[\\, size\\]\\)"
#~ msgstr ""
#~ ":py:obj:`add_to_window "
#~ "<miniworlds.worlds.world_base.WorldBase.add_to_window>`\\ "
#~ "\\(app\\, dock\\[\\, size\\]\\)"

#~ msgid ""
#~ ":py:obj:`update_width_and_height "
#~ "<miniworlds.worlds.world_base.WorldBase.update_width_and_height>`\\"
#~ " \\(\\)"
#~ msgstr ""
#~ ":py:obj:`update_width_and_height "
#~ "<miniworlds.worlds.world_base.WorldBase.update_width_and_height>`\\"
#~ " \\(\\)"

#~ msgid ""
#~ ":py:obj:`repaint "
#~ "<miniworlds.worlds.world_base.WorldBase.repaint>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`repaint "
#~ "<miniworlds.worlds.world_base.WorldBase.repaint>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`blit_surface_to_window_surface "
#~ "<miniworlds.worlds.world_base.WorldBase.blit_surface_to_window_surface>`\\"
#~ " \\(\\)"
#~ msgstr ""
#~ ":py:obj:`blit_surface_to_window_surface "
#~ "<miniworlds.worlds.world_base.WorldBase.blit_surface_to_window_surface>`\\"
#~ " \\(\\)"

#~ msgid ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world_base.WorldBase.handle_event>`\\ "
#~ "\\(event\\, data\\)"
#~ msgstr ""
#~ ":py:obj:`handle_event "
#~ "<miniworlds.worlds.world_base.WorldBase.handle_event>`\\ "
#~ "\\(ereignis\\, daten\\)"

#~ msgid ""
#~ ":py:obj:`get_event "
#~ "<miniworlds.worlds.world_base.WorldBase.get_event>`\\ "
#~ "\\(event\\, data\\)"
#~ msgstr ""
#~ ":py:obj:`get_event "
#~ "<miniworlds.worlds.world_base.WorldBase.get_event>`\\ "
#~ "\\(event\\, data\\)"

#~ msgid ""
#~ ":py:obj:`update "
#~ "<miniworlds.worlds.world_base.WorldBase.update>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`update "
#~ "<miniworlds.worlds.world_base.WorldBase.update>`\\ \\(\\)"

#~ msgid ""
#~ ":py:obj:`get_local_position "
#~ "<miniworlds.worlds.world_base.WorldBase.get_local_position>`\\ "
#~ "\\(position\\)"
#~ msgstr ""
#~ ":py:obj:`get_local_position "
#~ "<miniworlds.worlds.world_base.WorldBase.get_local_position>`\\ "
#~ "\\(position\\)"

#~ msgid ":py:obj:`_is_filled <miniworlds.worlds.world.World._is_filled>`\\"
#~ msgstr ":py:obj:`_is_filled <miniworlds.worlds.world.World._is_filled>`\\"

#~ msgid ":py:obj:`_orientation <miniworlds.worlds.world.World._orientation>`\\"
#~ msgstr ":py:obj:`_orientation <miniworlds.worlds.world.World._orientation>`\\"

#~ msgid ":py:obj:`_static <miniworlds.worlds.world.World._static>`\\"
#~ msgstr ":py:obj:`_static <miniworlds.worlds.world.World._static>`\\"

#~ msgid ""
#~ ":py:obj:`_update_all_costumes "
#~ "<miniworlds.worlds.world.World._update_all_costumes>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`_update_all_costumes "
#~ "<miniworlds.worlds.world.World._update_all_costumes>`\\ \\(\\)"

#~ msgid "updates costumes for all actors on the world"
#~ msgstr "aktualisiert Kostüme für alle Actor auf der Welt"

#~ msgid ":py:obj:`_act_all <miniworlds.worlds.world.World._act_all>`\\ \\(\\)"
#~ msgstr ":py:obj:`_act_all <miniworlds.worlds.world.World._act_all>`\\ \\(\\)"

#~ msgid "Overwritten in subclasses, e.g. physics_world."
#~ msgstr "In Unterklassen überschrieben, z. B. physics_world."

#~ msgid ""
#~ ":py:obj:`_tick_timed_objects "
#~ "<miniworlds.worlds.world.World._tick_timed_objects>`\\ \\(\\)"
#~ msgstr ""
#~ ":py:obj:`_tick_timed_objects "
#~ "<miniworlds.worlds.world.World._tick_timed_objects>`\\ \\(\\)"

#~ msgid "A rectangle as tuple (top, left, width, height)"
#~ msgstr "Ein Rechteck als Tupel (oben, links, Breite, Höhe)"

#~ msgid "You must also set a border for actor."
#~ msgstr "Sie müssen auch einen Rahmen für den Akteur festlegen."

#~ msgid "Set default border for actors:"
#~ msgstr "Standardgrenze für Akteure festlegen:"

#~ msgid ""
#~ "``world.default_border_color`` does not have "
#~ "an effect, if no border is set."
#~ msgstr ""
#~ "``world.default_border_color`` hat keine Wirkung,"
#~ " wenn kein Rand festgelegt ist."

#~ msgid "You must also set ``world.border`` > 0."
#~ msgstr "Sie müssen auch ``world.border`` > 0 setzen."

#~ msgid "Create actors with and without with border"
#~ msgstr "Erstelle Akteure mit und ohne Rand"

#~ msgid "borders"
#~ msgstr "Grenzen"

#~ msgid ""
#~ "Set default stroke color for borders "
#~ "and lines. (equivalent to border-color)"
#~ msgstr ""
#~ "Standardstrichfarbe für Rahmen und Linien "
#~ "festlegen. (entspricht border-color)"

#~ msgid ""
#~ "Examples: :rtype: "
#~ ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`tuple\\``"
#~ msgstr ""
#~ "Beispiele: :rtype: "
#~ ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`tuple\\``"

#~ msgid "Output: (255, 0, 0, 255)"
#~ msgstr "Ausgabe: (255, 0, 0, 255)"

#~ msgid "get color of red screen"
#~ msgstr "Farbe des roten Bildschirms erhalten"

#~ msgid "The position to search for"
#~ msgstr "Die Position, nach der gesucht werden soll"

#~ msgid "The color"
#~ msgstr "Die Farbe"

#~ msgid ""
#~ "Returns the mouse position if mouse "
#~ "is on the world. Returns None "
#~ "otherwise"
#~ msgstr ""
#~ "Gibt die Mausposition zurück, wenn sich"
#~ " die Maus in der Welt befindet. "
#~ "Gibt andernfalls None zurück"

#~ msgid "Create circles at current mouse position:"
#~ msgstr "Kreise an der aktuellen Mausposition erstellen:"

#~ msgid "Circles at mouse-position"
#~ msgstr "Kreise an der Mausposition"

#~ msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`int\\``"
#~ msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`int\\``"

#~ msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.worlds.manager.world\\_connector.WorldConnector\\``"
#~ msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.worlds.manager.world\\_connector.WorldConnector\\``"

#~ msgid ""
#~ "Loads all actors from db. Usually "
#~ "you load the actors in __init__() "
#~ "or in on_setup()"
#~ msgstr ""
#~ "Lädt alle Akteure aus der Datenbank. "
#~ "Normalerweise laden Sie die Akteure in"
#~ " __init__() oder in on_setup()"

#~ msgid "reference to db file"
#~ msgstr "Verweis auf die Datenbankdatei"

#~ msgid "a list of all Actor Classes which should be imported."
#~ msgstr "eine Liste aller Actorklassen, die importiert werden sollen."

#~ msgid "All Actors"
#~ msgstr "Alle Actor"

#~ msgid "The path to the music"
#~ msgstr "Der Weg zur Musik"

#~ msgid "Returns:"
#~ msgstr "Rückgaben:"

#~ msgid ""
#~ "The method show() should always be "
#~ "called at the end of your program."
#~ " It starts the mainloop."
#~ msgstr ""
#~ "Die Methode show() sollte immer am "
#~ "Ende Ihres Programms aufgerufen werden. "
#~ "Sie startet die Hauptschleife."

#~ msgid "A minimal miniworlds-program:"
#~ msgstr "Ein minimales Miniwelten-Programm:"

#~ msgid "Minimal program"
#~ msgstr "Minimales Programm"

#~ msgid ""
#~ "Saves the current world an all "
#~ "actors to database. The file is "
#~ "stored as db file and can be "
#~ "opened with sqlite."
#~ msgstr ""
#~ "Speichert die aktuelle Welt und alle "
#~ "Akteure in der Datenbank. Die Datei "
#~ "wird als db-Datei gespeichert und "
#~ "kann mit SQLite geöffnet werden."

#~ msgid "The file as relative location"
#~ msgstr "Die Datei als relativer Speicherort"

#~ msgid "_description_"
#~ msgstr "_beschreibung_"

#~ msgid "Called in app.update() when reload_all_worlds is called."
#~ msgstr ""
#~ "Wird in app.update() aufgerufen, wenn "
#~ "reload_all_worlds aufgerufen wird."

#~ msgid "The window"
#~ msgstr "Das Fenster"

#~ msgid "Rückgabetyp"
#~ msgstr "Returntyp"

#~ msgid "Rückgabe"
#~ msgstr "Rückgabe"

#~ msgid "Die Basisklasse für all deine Welten."
#~ msgstr "The base class for all your worlds."

#~ msgid "Returns all backgrounds of the world as list."
#~ msgstr "Gibt alle Hintergründe der Welt als Liste zurück."

#~ msgid ""
#~ ":py:obj:`backgrounds_manager "
#~ "<miniworlds.worlds.world.World.backgrounds_manager>`\\"
#~ msgstr ""
#~ ":py:obj:`backgrounds_manager "
#~ "<miniworlds.worlds.world.World.backgrounds_manager>`\\"

#~ msgid ""
#~ ":py:obj:`add_to_world "
#~ "<miniworlds.worlds.world.World.add_to_world>`\\ \\(actor\\, "
#~ "position\\)"
#~ msgstr ""
#~ ":py:obj:`add_to_world "
#~ "<miniworlds.worlds.world.World.add_to_world>`\\ \\(Akteur\\, "
#~ "Position\\)"

#~ msgid "Adds a Actor to the world."
#~ msgstr "Fügt einen Actor zur Welt hinzu."

