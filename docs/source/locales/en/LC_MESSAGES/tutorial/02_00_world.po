# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/tutorial/02_00_world.md:1
msgid "The First World"
msgstr ""

#: ../../source/tutorial/02_00_world.md:3
msgid ""
"In this section, we’ll create our first “world” in Miniworlds. A world is"
" the basic building block for everything you want to see or control in "
"your application — from a simple game field to more complex worlds like "
"those in video games. Let’s dive right in:"
msgstr ""

#: ../../source/tutorial/02_00_world.md:5
msgid "Getting Started"
msgstr ""

#: ../../source/tutorial/02_00_world.md:7
msgid "To create a world, you only need a few lines of code:"
msgstr ""

#: ../../source/tutorial/02_00_world.md:19
msgid "What happens in this code?"
msgstr ""

#: ../../source/tutorial/02_00_world.md:21
msgid ""
"**Import the library**: The first line imports the Miniworlds library, "
"which provides all the necessary functions."
msgstr ""

#: ../../source/tutorial/02_00_world.md:22
msgid ""
"**Create a world**: The method `miniworlds.World(600, 300)` creates a new"
" world. This defines the world’s size: 600 pixels wide and 300 pixels "
"tall."
msgstr ""

#: ../../source/tutorial/02_00_world.md:23
msgid ""
"**Start the world**: `world.run()` starts the world and displays it on "
"screen. You can think of this line like pressing “Play” — the world "
"becomes visible only after this."
msgstr ""

#: ../../source/tutorial/02_00_world.md:25
msgid "Take a look at the following image showing the first step:"
msgstr ""

#: ../../source/tutorial/02_00_world.md:27
msgid "![First miniworlds Example](../_images/01firstworld.png)"
msgstr "![First miniworlds Example](../_images/01firstworld.png)"

#: ../../source/tutorial/02_00_world.md:27
#: ../../source/tutorial/02_00_world.md:58
msgid "First miniworlds Example"
msgstr "First miniworlds Example"

#: ../../source/tutorial/02_00_world.md:29
msgid "Adding a Background"
msgstr ""

#: ../../source/tutorial/02_00_world.md:31
msgid ""
"To avoid having an empty world, you can add an image as a background. "
"You’ll need an image saved in the `images` folder of your project. Your "
"project structure might look like this:"
msgstr ""

#: ../../source/tutorial/02_00_world.md:42
msgid ""
"Once you’ve placed your image (e.g., `grass.png`) in the `images` folder,"
" you can add it to your world using the `add_background` method:"
msgstr ""

#: ../../source/tutorial/02_00_world.md:58
msgid "![First miniworlds Example](../_images/pixel_addbackground.png)"
msgstr "![First miniworlds Example](../_images/pixel_addbackground.png)"

#: ../../source/tutorial/02_00_world.md:60
msgid "What’s happening here?"
msgstr ""

#: ../../source/tutorial/02_00_world.md:62
#, fuzzy
msgid ""
"The method `add_background(\"images/grass.png\")` loads the image "
"`grass.png` from the specified path and sets it as the background for "
"your world."
msgstr ""
"The method add_background(\"images/grass.png\") loads the image grass.png"
" from the specified path and sets it as the background for your world."

#: ../../source/tutorial/02_00_world.md:65
#, python-brace-format
msgid "\\:::{note}"
msgstr ""

#: ../../source/tutorial/02_00_world.md:67
msgid ""
"There are different types of `Worlds` in Miniworlds. The `TiledWorld` is "
"specifically designed for games using tiled layouts, such as top-down "
"RPGs."
msgstr ""

#: ../../source/tutorial/02_00_world.md:70
msgid "\\:::"
msgstr ""

#: ../../source/tutorial/02_00_world.md:72
#, fuzzy, python-brace-format
msgid ""
"\\:::{seealso} [Concept: Naming and "
"Variables](../concepts/concept_naming) \\:::"
msgstr "[Konzept: Naming und Variablen](../concepts/concept_naming)"

#: ../../source/tutorial/02_00_world.md:76
#, fuzzy, python-brace-format
msgid "\\:::{seealso} [Concept: Imports](../concepts/concept_imports) \\:::"
msgstr "[Konzept: Importe](../concepts/concept_imports)"

#~ msgid "Die erste Welt"
#~ msgstr "The First World"

#~ msgid ""
#~ "In diesem Abschnitt werden wir unsere"
#~ " erste \"Welt\" in Miniworlds erstellen."
#~ " Eine Welt ist der Grundbaustein für"
#~ " alles,  was du in deiner Anwendung"
#~ " sehen oder steuern möchtest – von"
#~ " einem simplen Spielfeld bis hin zu"
#~ " komplexeren Welten  wie in Videospielen."
#~ " Lass uns direkt loslegen:"
#~ msgstr ""
#~ "In this section, we will create "
#~ "our first \"world\" in Miniworlds. A "
#~ "world is the building block for "
#~ "everything you want to see or "
#~ "control in your application – from "
#~ "a simple playing field to more "
#~ "complex worlds like in video games. "
#~ "Let's get started right away:"

#~ msgid "Erste Schritte"
#~ msgstr "Getting Started"

#~ msgid "Um eine Welt zu erstellen, brauchst du nur ein paar Zeilen Code:"
#~ msgstr "To create a world, you only need a few lines of code:"

#~ msgid "Was passiert in diesem Code?"
#~ msgstr "What is happening in this code?"

#~ msgid ""
#~ "Bibliothek importieren: In der ersten "
#~ "Zeile importierst du die miniworlds-"
#~ "Bibliothek, die alle benötigten Funktionen "
#~ "bereitstellt."
#~ msgstr ""
#~ "Import library: In the first line, "
#~ "you import the miniworlds library, which"
#~ " provides all the necessary functions."

#~ msgid ""
#~ "Welt erstellen: Die Methode "
#~ "miniworlds.World(600, 300) erstellt eine neue"
#~ " Welt.  Hiermit legst du die Größe"
#~ " der Welt fest: Sie ist 600 "
#~ "Pixel breit und 300 Pixel hoch."
#~ msgstr ""
#~ "Create world: The method miniworlds.World(600,"
#~ " 300) creates a new world. This "
#~ "sets the size of the world: It "
#~ "is 600 pixels wide and 300 pixels"
#~ " high."

#~ msgid ""
#~ "Welt starten: world.run() startet die "
#~ "Welt und zeigt sie auf dem "
#~ "Bildschirm an.  Stell dir diese Zeile"
#~ " wie den \"Play\"-Button vor – erst"
#~ " danach wird deine Welt sichtbar."
#~ msgstr ""
#~ "Start world: world.run() starts the "
#~ "world and displays it on the "
#~ "screen. Think of this line as the"
#~ " \"Play\" button – only then will "
#~ "your world become visible."

#~ msgid "Schau dir das folgende Bild an, das den ersten Schritt zeigt:"
#~ msgstr "Look at the following image that shows the first step:"

#~ msgid "Hintergrund hinzufügen"
#~ msgstr "Add background"

#~ msgid ""
#~ "Damit die Welt nicht leer aussieht, "
#~ "kannst du ihr ein Bild als "
#~ "Hintergrund hinzufügen.  Dazu brauchst du "
#~ "ein Bild, das du im images-Ordner"
#~ " deines Projekts speicherst.  Die "
#~ "Ordnerstruktur deines Projekts könnte "
#~ "folgendermaßen aussehen:"
#~ msgstr ""
#~ "To prevent the world from looking "
#~ "empty, you can add an image as "
#~ "a background.  For this, you need "
#~ "an image that you save in the "
#~ "images folder of your project.  The "
#~ "folder structure of your project might"
#~ " look like this:"

#~ msgid ""
#~ "Nachdem du dein Bild (z.B. grass.png)"
#~ " in den Ordner images gelegt hast,"
#~ "  kannst du es mit der Methode "
#~ "add_background der Welt hinzufügen:"
#~ msgstr ""
#~ "After you have placed your image "
#~ "(e.g., grass.png) in the images folder,"
#~ " you can add it to the world"
#~ " using the add_background method:"

#~ msgid "Was passiert hier?"
#~ msgstr "What is happening here?"

#~ msgid ""
#~ "Es gibt verschiedene Arten von `Worlds`"
#~ " in miniworlds.  Die `TiledWorld` ist "
#~ "speziell für Spiele auf gekachelten "
#~ "Flächen gedacht, z.B. Top-Down RPGs."
#~ msgstr ""
#~ "There are different types of `Worlds`"
#~ " in miniworlds. The `TiledWorld` is "
#~ "specifically designed for games on tiled"
#~ " surfaces, such as top-down RPGs."

