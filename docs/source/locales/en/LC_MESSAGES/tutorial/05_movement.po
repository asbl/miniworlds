# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/tutorial/05_movement.md:1
msgid "Movement"
msgstr ""

#: ../../source/tutorial/05_movement.md:3
msgid "Basics"
msgstr ""

#: ../../source/tutorial/05_movement.md:5
msgid ""
"Before we dive deeper into movement functions, here’s a quick recap of "
"the core concepts:"
msgstr ""

#: ../../source/tutorial/05_movement.md:7
msgid ""
"You can directly control an actor’s position and orientation using "
"**`self.direction`**, **`self.x`**, **`self.y`**, and "
"**`self.position`**."
msgstr ""

#: ../../source/tutorial/05_movement.md:9
msgid ""
"In addition, Miniworlds provides special methods that let an actor move "
"straight ahead or in specific directions."
msgstr ""

#: ../../source/tutorial/05_movement.md:11
#, fuzzy
msgid "The `move()` Function"
msgstr "The `move()` function"

#: ../../source/tutorial/05_movement.md:13
msgid ""
"The **`move()`** method moves your actor forward in the direction they "
"are currently facing (based on **`direction`**). If you change the "
"**`direction`** beforehand, the movement will automatically follow the "
"new orientation."
msgstr ""

#: ../../source/tutorial/05_movement.md:23
#, fuzzy
msgid "`turn_left()` and `turn_right()`"
msgstr "`turn_left()` and `turn_right()`"

#: ../../source/tutorial/05_movement.md:25
msgid ""
"With **`turn_left()`** and **`turn_right()`**, you can rotate the actor "
"by a specified number of degrees to the left or right:"
msgstr ""

#: ../../source/tutorial/05_movement.md:27
#, fuzzy
msgid "**`player.turn_left(degrees)`**: Rotates the actor **left** by `degrees`"
msgstr ""
"**`player.turn_left(degrees)`**: Turns the player left by **degrees** "
"degrees."

#: ../../source/tutorial/05_movement.md:28
#, fuzzy
msgid "**`player.turn_right(degrees)`**: Rotates the actor **right** by `degrees`"
msgstr ""
"**`player.turn_right(degrees)`**: Turns the player to the right by "
"**degrees** degrees."

#: ../../source/tutorial/05_movement.md:30
msgid "Example:"
msgstr ""

#: ../../source/tutorial/05_movement.md:60
msgid "`move_in_direction()`"
msgstr "`move_in_direction()`"

#: ../../source/tutorial/05_movement.md:62
msgid ""
"As an alternative to regular movement, you can use "
"**`move_in_direction()`** to move the actor in any direction by "
"specifying an angle."
msgstr ""

#: ../../source/tutorial/05_movement.md:64
msgid "Example: Diagonal movement"
msgstr ""

#: ../../source/tutorial/05_movement.md:86
msgid "Example: Move toward the mouse pointer"
msgstr ""

#: ../../source/tutorial/05_movement.md:88
msgid ""
"The following example shows how to make the actor follow the mouse "
"pointer using **`move_in_direction()`**:"
msgstr ""

#~ msgid "Bewegungen"
#~ msgstr "Movements"

#~ msgid "Grundlagen"
#~ msgstr "Basics"

#~ msgid ""
#~ "Bevor wir tiefer in die "
#~ "Bewegungsfunktionen eintauchen, hier eine "
#~ "kurze Wiederholung der wichtigsten Konzepte:"
#~ msgstr ""
#~ "Before we dive deeper into the "
#~ "motion functions, here is a brief "
#~ "review of the key concepts:"

#~ msgid ""
#~ "Mit **`self.direction`**, **`self.x`**, **`self.y`**"
#~ " und **`self.position`** kannst du die "
#~ "Position und Ausrichtung  eines Akteurs "
#~ "direkt steuern."
#~ msgstr ""
#~ "With **`self.direction`**, **`self.x`**, "
#~ "**`self.y`**, and **`self.position`**, you can"
#~ " directly control the position and "
#~ "orientation of an actor."

#~ msgid ""
#~ "Darüber hinaus gibt es spezielle "
#~ "Methoden, mit denen du einen Akteur "
#~ "geradeaus oder in bestimmte Richtungen "
#~ "bewegen kannst."
#~ msgstr ""
#~ "Furthermore, there are special methods "
#~ "that allow you to move an actor"
#~ " straight or in specific directions."

#~ msgid ""
#~ "Die Methode **`move()`** bewegt deinen "
#~ "Akteur in die Richtung, in die er"
#~ " gerade schaut (basierend auf der "
#~ "aktuellen **`direction`**). Wenn du die "
#~ "**`direction`** vorher änderst, passt sich "
#~ "die Bewegung automatisch an die neue "
#~ "Ausrichtung an."
#~ msgstr ""
#~ "The **`move()`** method moves your actor"
#~ " in the direction they are currently"
#~ " facing (based on the current "
#~ "**`direction`**). If you change the "
#~ "**`direction`** beforehand, the movement "
#~ "automatically adjusts to the new "
#~ "orientation."

#~ msgid ""
#~ "Mit **`turn_left()`** und **`turn_right()`** "
#~ "kannst du den Akteur um eine "
#~ "bestimmte Gradzahl nach links oder "
#~ "rechts drehen."
#~ msgstr ""
#~ "With **`turn_left()`** and **`turn_right()`**, "
#~ "you can rotate the actor by a "
#~ "specific number of degrees to the "
#~ "left or right."

#~ msgid "Beispiel:"
#~ msgstr "Example:"

#~ msgid ""
#~ "Alternativ zur Standardbewegung kannst du "
#~ "den Akteur mit **`move_in_direction()`** in"
#~ " eine beliebige Richtung bewegen, indem "
#~ "du einen Winkel angibst."
#~ msgstr ""
#~ "As an alternative to the standard "
#~ "movement, you can move the actor "
#~ "in any direction using "
#~ "**`move_in_direction()`** by specifying an "
#~ "angle."

#~ msgid "Beispiel: Bewegung schräg nach oben"
#~ msgstr "Example: Diagonal movement upwards"

#~ msgid "Beispiel: Bewegung in Richtung des Mauszeigers"
#~ msgstr "Example: Movement towards the mouse pointer"

#~ msgid ""
#~ "Das folgende Beispiel zeigt, wie der "
#~ "Akteur mithilfe von **`move_in_direction()`** "
#~ "der Position des Mauszeigers folgt:"
#~ msgstr ""
#~ "The following example shows how the "
#~ "actor follows the mouse pointer's "
#~ "position using **`move_in_direction()`**:"

