# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-25 09:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/tutorial/04_01_events.md:1
msgid "Events"
msgstr "Events"

#: ../../source/tutorial/04_01_events.md:3
msgid "Mach dein Spiel interaktiv"
msgstr "Make your game interactive"

#: ../../source/tutorial/04_01_events.md:5
msgid ""
"In diesem Abschnitt erfährst du, wie du deinem Spiel Interaktivität verleihst, indem du auf Tastatur-Eingaben, "
"Mausaktionen oder Kollisionen reagierst."
msgstr ""
"In this section, you will learn how to add interactivity to your game by responding to keyboard inputs, mouse actions, "
"or collisions."

#: ../../source/tutorial/04_01_events.md:7
msgid "Was sind Events?"
msgstr "What are events?"

#: ../../source/tutorial/04_01_events.md:9
msgid ""
"**Events** (Ereignisse) sind der Schlüssel zu interaktiven Spielen. Sie ermöglichen es, auf Benutzeraktionen zu "
"reagieren, wie Tastendrücke oder Mausbewegungen, und verändern dynamisch das Verhalten deiner Akteure."
msgstr ""
"**Events** (Ereignisse) are the key to interactive games. They allow you to respond to user actions, such as keystrokes "
"or mouse movements, and dynamically change the behavior of your actors."

#: ../../source/tutorial/04_01_events.md:11
msgid "**`on_setup()`**: Wird am Anfang aufgerufen, um deine Welt zu initialisieren und vorzubereiten."
msgstr "**`on_setup()`**: Called at the beginning to initialize and prepare your world."

#: ../../source/tutorial/04_01_events.md:12
msgid "**`act()`**: Diese Methode wird in jedem Frame aufgerufen und aktualisiert die Welt sowie die Akteure."
msgstr "**`act()`**: This method is called in every frame and updates the world as well as the actors."

#: ../../source/tutorial/04_01_events.md:13
msgid ""
"Es gibt spezielle Event-Methoden wie **`on_key_pressed`**, **`on_mouse_left`** oder **`on_clicked_left`**, um auf "
"verschiedene Benutzeraktionen zu reagieren."
msgstr ""
"There are special event methods like **`on_key_pressed`**, **`on_mouse_left`**, or **`on_clicked_left`** to respond to "
"various user actions."

#: ../../source/tutorial/04_01_events.md:15
msgid "Events registrieren"
msgstr "Register events"

#: ../../source/tutorial/04_01_events.md:17
msgid ""
"Damit ein Akteur oder die Welt auf ein Event reagieren kann, musst du die entsprechende Methode registrieren. Die "
"Registrierung funktioniert ähnlich wie bei der `act()`-Methode."
msgstr ""
"To enable an actor or the world to react to an event, you must register the corresponding method. The registration "
"works similarly to the `act()` method."

#: ../../source/tutorial/04_01_events.md:19
msgid "Beispiel: Einfache Tasteneingabe"
msgstr "Example: Simple keystroke input"

#: ../../source/tutorial/04_01_events.md:27
#: ../../source/tutorial/04_01_events.md:66
msgid "Erklärung:"
msgstr "Explanation:"

#: ../../source/tutorial/04_01_events.md:29
msgid ""
"Diese Methode wird ausgeführt, sobald die Taste <kbd>w</kbd> gedrückt wird. Der Akteur `player` bewegt sich dabei um "
"einen Schritt nach oben."
msgstr "This method is executed when the <kbd>w</kbd> key is pressed. The `player` actor moves one step upwards."

#: ../../source/tutorial/04_01_events.md:31
msgid "Beispiel: Steuerung mit mehreren Tasten"
msgstr "Example: Control with multiple buttons"

#: ../../source/tutorial/04_01_events.md:33
msgid ""
"Im nächsten Beispiel wird ein Akteur über die Tasten <kbd>W</kbd>, <kbd>A</kbd>, <kbd>S</kbd> und <kbd>D</kbd> "
"gesteuert."
msgstr "In the next example, an actor is controlled using the keys <kbd>W</kbd>, <kbd>A</kbd>, <kbd>S</kbd>, and <kbd>D</kbd>."

#: ../../source/tutorial/04_01_events.md:68
msgid "In diesem Beispiel wird der Akteur wie folgt gesteuert:"
msgstr "In this example, the actor is controlled as follows:"

#: ../../source/tutorial/04_01_events.md:70
msgid "<kbd>W</kbd>: Bewegt den Akteur nach oben."
msgstr "<kbd>W</kbd>: Moves the actor upwards."

#: ../../source/tutorial/04_01_events.md:71
msgid "<kbd>A</kbd>: Bewegt den Akteur nach links."
msgstr "<kbd>A</kbd>: Moves the actor to the left."

#: ../../source/tutorial/04_01_events.md:72
msgid "<kbd>D</kbd>: Bewegt den Akteur nach rechts."
msgstr "<kbd>D</kbd>: Moves the actor to the right."

#: ../../source/tutorial/04_01_events.md:73
msgid "<kbd>S</kbd>: Bewegt den Akteur nach unten."
msgstr "<kbd>S</kbd>: Moves the actor down."

#: ../../source/tutorial/04_01_events.md:75
msgid "Unterschied: `on_key_down` vs. `on_key_pressed`"
msgstr "Difference: `on_key_down` vs. `on_key_pressed`"

#: ../../source/tutorial/04_01_events.md:77
msgid "Es gibt zwei Arten von Tastatur-Events, um auf Tasteninteraktionen zu reagieren:"
msgstr "There are two types of keyboard events to respond to key interactions:"

#: ../../source/tutorial/04_01_events.md:79
msgid "**`on_key_down(self, key)`**: Wird genau einmal aufgerufen, wenn eine Taste gedrückt wird."
msgstr "**`on_key_down(self, key)`**: Called exactly once when a key is pressed."

#: ../../source/tutorial/04_01_events.md:80
msgid "**`on_key_pressed(self, key)`**: Wird fortlaufend aufgerufen, solange die Taste gedrückt gehalten wird."
msgstr "**`on_key_pressed(self, key)`**: Continuously called as long as the key is held down."

#: ../../source/tutorial/04_01_events.md:82
msgid "Beispiel: Unterschiedliche Tastatur-Events"
msgstr "Example: Different Keyboard Events"

#: ../../source/tutorial/04_01_events.md:110
msgid ""
"Du kannst entweder konkrete Tasten wie `on_key_down_b(self)` abfragen oder allgemeine Tastatur-Ereignisse mit "
"`on_key_down(self, key)` verarbeiten, um alle Tastatureingaben zu erkennen."
msgstr ""
"You can either query specific keys like `on_key_down_b(self)` or process general keyboard events with "
"`on_key_down(self, key)` to detect all keyboard inputs."
