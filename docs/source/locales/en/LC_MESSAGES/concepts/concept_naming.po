# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/concepts/concept_naming.md:1
#, fuzzy
msgid "Concept: Naming and Variables"
msgstr "Concept: Naming and Variables"

#: ../../source/concepts/concept_naming.md:3
msgid "Naming"
msgstr "Naming"

#: ../../source/concepts/concept_naming.md:5
msgid "In the first chapter, you saw instructions like this:"
msgstr ""

#: ../../source/concepts/concept_naming.md:11
msgid "Here, the `=` sign does **not** have the same meaning as in mathematics."
msgstr ""

#: ../../source/concepts/concept_naming.md:13
msgid ""
"First, the right side of the statement is executed. In this case, a "
"`TiledWorld()` object is created."
msgstr ""

#: ../../source/concepts/concept_naming.md:14
msgid ""
"Second, the created object is stored under the name `world`. You can "
"later refer to this object using its name."
msgstr ""

#: ../../source/concepts/concept_naming.md:17
msgid ""
"Names in programming have a special purpose: they act as **storage** for "
"objects and data. By assigning a name to an object, you can reuse or "
"modify it later."
msgstr ""

#: ../../source/concepts/concept_naming.md:20
msgid ""
"Such names are called **variables**, because the data they refer to can "
"change."
msgstr ""

#: ../../source/concepts/concept_naming.md:24
msgid "Simple Example"
msgstr ""

#: ../../source/concepts/concept_naming.md:32
msgid ""
"You store values in `a` and `b`, and later use them to compute `c`. The "
"result will be `5`."
msgstr ""

#: ../../source/concepts/concept_naming.md:35
msgid "Variables can also be **overwritten** — the old value is lost:"
msgstr ""

#: ../../source/concepts/concept_naming.md:44
msgid "This prints `4`, because `a` was overwritten with the value `2`."
msgstr ""

#: ../../source/concepts/concept_naming.md:48
#, fuzzy
msgid "The World Object"
msgstr "The World object"

#: ../../source/concepts/concept_naming.md:50
msgid "The `World` is an object that has various **attributes** and **methods**."
msgstr ""

#: ../../source/concepts/concept_naming.md:52
#, fuzzy
msgid "Attributes"
msgstr "Attribute"

#: ../../source/concepts/concept_naming.md:54
msgid "You can access attributes using dot notation: `object_name.attribute_name`"
msgstr ""

#: ../../source/concepts/concept_naming.md:57
#: ../../source/concepts/concept_naming.md:76
msgid "Example:"
msgstr ""

#: ../../source/concepts/concept_naming.md:63
msgid "This sets the number of rows in the world to 4."
msgstr ""

#: ../../source/concepts/concept_naming.md:67
#, fuzzy
msgid "Methods"
msgstr "Methoden"

#: ../../source/concepts/concept_naming.md:69
msgid ""
"Methods are actions an object can perform, for example: "
"`world.add_background()` adds a background to the world."
msgstr ""

#: ../../source/concepts/concept_naming.md:72
msgid ""
"You access methods with: `object_name.method_name()` Sometimes, arguments"
" are passed in parentheses."
msgstr ""

#~ msgid "Im ersten Kapitel hast du Anweisungen der folgenden Art gesehen:"
#~ msgstr "In the first chapter, you saw instructions of the following kind:"

#~ msgid "Das `=` Zeichen hat hier eine andere Funktion als in der Mathematik."
#~ msgstr "The `=` sign has a different function here than in mathematics."

#~ msgid ""
#~ "Zuerst wird die rechte Seite der "
#~ "Anweisung durchgeführt. In diesem Fall "
#~ "wird ein TiledWorld()-Objekt erzeugt."
#~ msgstr ""
#~ "First, the right side of the "
#~ "statement is executed. In this case, "
#~ "a TiledWorld() object is created."

#~ msgid ""
#~ "Im zweiten Schritt, wird das erzeugte"
#~ " Objekt mit dem Namen `world` "
#~ "gespeichert. Du kannst später über "
#~ "diesen `Namen` immer wieder auf das "
#~ "erzeugte Objekt zugreifen."
#~ msgstr ""
#~ "In the second step, the created "
#~ "object is saved with the name "
#~ "`world`. You can later access the "
#~ "created object again and again through"
#~ " this `name`."

#~ msgid ""
#~ "Namen haben also in einer "
#~ "Programmiersprache eine ganz besondere "
#~ "Bedeutung, sie dienen dir als ein "
#~ "Speicher für Objekte und Daten. Indem"
#~ " du Objekten einen Namen gibst, "
#~ "kannst du später wieder auf diese "
#~ "zugreifen. Man nennt solche Namen auch"
#~ " **Variablen**, denn das Objekt auf "
#~ "das über den Namen zugegriffen werden"
#~ " kann, kann meist auf verschiedene "
#~ "Arten verändert werden."
#~ msgstr ""
#~ "Names have a very special meaning "
#~ "in a programming language; they serve"
#~ " as a storage for objects and "
#~ "data. By giving objects a name, "
#~ "you can access them again later. "
#~ "Such names are also called "
#~ "**variables**, because the object that "
#~ "can be accessed through the name "
#~ "can usually be changed in various "
#~ "ways."

#~ msgid "Im einfachen Fall kann dies so aussehen:"
#~ msgstr "In the simple case, this might look like this:"

#~ msgid ""
#~ "Indem du Werte unter dem Namen a"
#~ " und b gespeichert hast, kannst du"
#~ " später wieder darauf zugreifen. In "
#~ "der letzten Zeile wird zuerst `a +"
#~ " b` gerechnet und das Ergebnis in "
#~ "`c` gespeichert. Als Ergebnis wird `5`"
#~ " ausgegeben."
#~ msgstr ""
#~ "By storing values under the names "
#~ "a and b, you can access them "
#~ "later. In the last line, `a + "
#~ "b` is calculated first and the "
#~ "result is stored in `c`. The "
#~ "result `5` is then output."

#~ msgid ""
#~ "Variablen können jederzeit neue Werte "
#~ "speichern - Der alte Wert geht "
#~ "dabei verloren:"
#~ msgstr ""
#~ "Variables can store new values at "
#~ "any time - the old value is "
#~ "lost in the process:"

#~ msgid ""
#~ "Das Programm gibt `4` aus, da der"
#~ " Wert 3 in der zweiten Zeile "
#~ "überschrieben wird und verloren ist."
#~ msgstr ""
#~ "The program outputs `4` because the "
#~ "value 3 is overwritten in the "
#~ "second line and is lost."

#~ msgid ""
#~ "Das World ist ein Objekt und "
#~ "bringt verschiedene Attribute und Methoden "
#~ "mit,  auf die du zugreifen kannst, "
#~ "z.B. `rows`, `columns` und `tile_size`."
#~ msgstr ""
#~ "The world is an object and comes"
#~ " with various attributes and methods "
#~ "that you can access, such as "
#~ "`rows`, `columns`, and `tile_size`."

#~ msgid "Auf Attribute greifst du mit der Syntax `objektname.attributsname` zu."
#~ msgstr "You access attributes using the syntax `objectname.attributename`."

#~ msgid "Beispiel:"
#~ msgstr "Example:"

#~ msgid ""
#~ "Dieser Code speichert den Wert 4 "
#~ "in `world.rows` - Das World-Objekt "
#~ "hat danach also 4 Zeilen."
#~ msgstr ""
#~ "This code stores the value 4 in"
#~ " `world.rows` - The World object then"
#~ " has 4 rows."

#~ msgid ""
#~ "Methoden sind Befehle, die ein Objekt"
#~ " ausführen kann, z.B. `world.add_background()`"
#~ " um  Auf Methoden greifst du mit "
#~ "der Syntax  `objektname.methodenname()`zu. Manchmal"
#~ " stehen in der Klammer noch Variablen"
#~ msgstr ""
#~ "Methods are commands that an object "
#~ "can execute, e.g., `world.add_background()` to"
#~ " access methods you use the syntax"
#~ " `objectname.methodname()`. Sometimes there are"
#~ " variables in the parentheses"

