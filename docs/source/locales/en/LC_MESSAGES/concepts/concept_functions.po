# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/concepts/concept_functions.md:1
#, fuzzy
msgid "Concept: Functions and Code Blocks"
msgstr "Concept: Functions and Code Blocks"

#: ../../source/concepts/concept_functions.md:3
#, fuzzy
msgid "Functions and Decorators"
msgstr "Functions and Decorators"

#: ../../source/concepts/concept_functions.md:5
msgid "In the last chapter, we saw code like this:"
msgstr ""

#: ../../source/concepts/concept_functions.md:14
msgid ""
"In the second line, a **function** is defined that performs specific "
"instructions (we’ll discuss that more below)."
msgstr ""

#: ../../source/concepts/concept_functions.md:16
msgid ""
"In the first line, a **decorator** is used. This decorator **attaches** "
"the function to the `world` object. Whenever the system wants to call "
"`world.on_setup`, the function you defined is executed instead. This way,"
" you can define functions that respond to various **events**, like key "
"presses, actor collisions, etc."
msgstr ""

#: ../../source/concepts/concept_functions.md:22
#, fuzzy
msgid "Indentation and Code Blocks"
msgstr "Concept: Functions and Code Blocks"

#: ../../source/concepts/concept_functions.md:24
msgid ""
"Lines 3 and 4 in the example above are **indented**. This means they "
"**belong to the function** and are executed when it is called."
msgstr ""

#: ../../source/concepts/concept_functions.md:26
msgid ""
"In Python, **indentation** is used to define **code blocks** — that is, "
"when a conditional or function begins and ends. All lines with the **same"
" level of indentation** are considered part of the same block."
msgstr ""

#: ../../source/concepts/concept_functions.md:31
msgid "Coding Standards — How Much Should You Indent?"
msgstr ""

#: ../../source/concepts/concept_functions.md:33
msgid ""
"The Python language doesn’t enforce **how many spaces** to use for "
"indentation — whether 3, 4, or 5 spaces — but all lines in a block must "
"be **indented equally**."
msgstr ""

#: ../../source/concepts/concept_functions.md:35
msgid ""
"However, Python developers have agreed on certain **coding standards** so"
" that code looks consistent across projects."
msgstr ""

#: ../../source/concepts/concept_functions.md:37
msgid "The commonly accepted rule is to indent code using **4 spaces**."
msgstr ""

#: ../../source/concepts/concept_functions.md:38
msgid ""
"While you can use your own style, it is **strongly recommended** to "
"follow this standard, especially when working in teams."
msgstr ""

#: ../../source/concepts/concept_functions.md:40
#, fuzzy
msgid ""
"Python’s functions and conventions are documented in official proposals "
"called **PEPs** (Python Enhancement Proposals). Style recommendations can"
" be found in [PEP 8](https://www.python.org/dev/peps/pep-0008/)."
msgstr ""
"In Python, functions and conventions are defined in so-called PEPs "
"(\"Python Enhancement Proposals\"). You can find style guides, for "
"example, in [PEP 8](https://www.python.org/dev/peps/pep-0008/)."

#: ../../source/concepts/concept_functions.md:43
msgid "Besides indentation, it covers many other topics — for example:"
msgstr ""

#: ../../source/concepts/concept_functions.md:49
msgid "instead of:"
msgstr ""

#: ../../source/concepts/concept_functions.md:55
msgid ""
"Although Python doesn’t **enforce** these rules, following them helps "
"make your code easier for others to read."
msgstr ""

#: ../../source/concepts/concept_functions.md:59
msgid "Helpful Tools"
msgstr ""

#: ../../source/concepts/concept_functions.md:61
msgid "Most modern code editors support:"
msgstr ""

#: ../../source/concepts/concept_functions.md:63
msgid "**Auto-formatting** (e.g., automatic indentation)"
msgstr ""

#: ../../source/concepts/concept_functions.md:64
msgid "**Linting** (checking your code for style issues)"
msgstr ""

#: ../../source/concepts/concept_functions.md:66
msgid "These tools help you write **clean and readable code** more easily."
msgstr ""

#~ msgid "Im letzten Kapitel wurde folgender Code verwendet:"
#~ msgstr "The following code was used in the last chapter:"

#~ msgid ""
#~ "In der zweiten Zeile wird eine "
#~ "Funktion definiert, die bestimmte Anweisungen"
#~ " durchführt (dazu später mehr)."
#~ msgstr ""
#~ "In the second line, a function is"
#~ " defined that executes certain instructions"
#~ " (more on that later)."

#~ msgid ""
#~ "In der ersten Zeile wird diese "
#~ "Funktion mit einem Decorator versehen. "
#~ "Dieser Decorator \"heftet\" die Funktion "
#~ "an das World an. Immer wenn das"
#~ " System die Funktion `world.on_setup` "
#~ "aufrufen will, wird die von dir "
#~ "definierte Funktion aufgerufen. Auf diese "
#~ "Weise kannst du später Funktionen "
#~ "definieren, die auf beliebige Ereignisse "
#~ "reagieren, z.B. Tastendrücke, ..."
#~ msgstr ""
#~ "In the first line, this function "
#~ "is decorated with a decorator. This "
#~ "decorator \"attaches\" the function to "
#~ "the World. Whenever the system wants "
#~ "to call the `world.on_setup` function, "
#~ "the function you defined is called. "
#~ "In this way, you can later define"
#~ " functions that respond to any "
#~ "events, such as keystrokes, ..."

#~ msgid "Einrückung und Code-Blöcke"
#~ msgstr "Indentation and code blocks"

#~ msgid ""
#~ "Die dritte und vierte Zeile des "
#~ "Programmcodes oben sind eingerückt. Dies "
#~ "bedeutet, dass bei Aufruf die beiden "
#~ "eingerückten Zeilen aufgerufen werden."
#~ msgstr ""
#~ "The third and fourth lines of the"
#~ " program code above are indented. "
#~ "This means that when called, the "
#~ "two indented lines will be executed."

#~ msgid ""
#~ "Code-Blöcke dienen in Python immer "
#~ "dazu, zu definieren wann eine bestimmte"
#~ " Verzweigung in deinem Programm beginnt "
#~ "und wann sie endet. Alles was "
#~ "gleich weit eingerückt wird gehört zu"
#~ " einem gemeinsamen Code-Block."
#~ msgstr ""
#~ "Code blocks in Python always serve "
#~ "to define when a specific branch "
#~ "in your program begins and when it"
#~ " ends. Everything that is indented to"
#~ " the same level belongs to a "
#~ "common code block."

#~ msgid "Coding-Standards Wie weit sollte eingerückt werden?"
#~ msgstr "Coding-Standards How far should it be indented?"

#~ msgid ""
#~ "Die Programmiersprache Python selbst definiert"
#~ " nicht, wie weit ein Code-Block "
#~ "eingerückt werden soll, ob du drei, "
#~ "vier oder fünf Zeichen verwendest ist"
#~ " egal - Entscheidend ist, dass alle"
#~ " Zeilen *gleich weit* eingerückt sind."
#~ msgstr ""
#~ "The Python programming language itself "
#~ "does not define how far a block"
#~ " of code should be indented, whether"
#~ " you use three, four, or five "
#~ "characters does not matter - what "
#~ "is crucial is that all lines are"
#~ " indented *equally*. "

#~ msgid ""
#~ "Es gibt in Python aber bestimmte "
#~ "Coding-Standards, auf die sich "
#~ "Programmierer geeinigt haben, damit Code "
#~ "immer ähnlich aussieht."
#~ msgstr ""
#~ "However, in Python, there are certain"
#~ " coding standards that programmers have "
#~ "agreed upon so that code always "
#~ "looks similar."

#~ msgid ""
#~ "So hat man sich darauf geeinigt, "
#~ "dass man Code immer 4 Zeichen "
#~ "einrückt. Du kannst dies für dich "
#~ "natürlich anders handhaben - Spätestens "
#~ "wenn ihr im Team arbeitet, ist es"
#~ " aber hilfreich sich an solche "
#~ "Konventionen zu halten."
#~ msgstr ""
#~ "So it has been agreed that code"
#~ " is always indented by 4 characters."
#~ " You can handle this differently for"
#~ " yourself, of course - but at "
#~ "the latest when you work in a "
#~ "team, it is helpful to adhere to"
#~ " such conventions."

#~ msgid ""
#~ "Neben der Einrückung findest du dort "
#~ "noch viel mehr, z.B. schreibt man "
#~ "`a = a + 3` anstatt `a=a+3`, "
#~ "weil ersteres leichter zu lesen ist. "
#~ "die Programmiersprache zwingt dich nicht "
#~ "dazu, aber so ist der Code für "
#~ "andere Programmierer besser zu lesen."
#~ msgstr ""
#~ "Besides indentation, you'll find much "
#~ "more there, e.g., you write `a ="
#~ " a + 3` instead of `a=a+3`, "
#~ "because the former is easier to "
#~ "read. The programming language doesn't "
#~ "force you to do this, but it "
#~ "makes the code easier for other "
#~ "programmers to read."

#~ msgid ""
#~ "Viele moderne Editoren können dich durch"
#~ " Autoformatierung und Linting darin "
#~ "unterstützen, **sauberen** Code zu schreiben."
#~ msgstr ""
#~ "Many modern editors can assist you "
#~ "in writing **clean** code through "
#~ "auto-formatting and linting."

