# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/processing/08_functions.md:1
#, fuzzy
msgid "Functions"
msgstr "Functions"

#: ../../source/processing/08_functions.md:3
msgid ""
"So far, you’ve used methods that belong to a `World` or an `Actor`, such "
"as `on_setup` or `act`."
msgstr ""

#: ../../source/processing/08_functions.md:5
msgid ""
"Now you’ll learn how to define your own functions. Functions are "
"*subprograms* that allow you to reuse code instead of writing it over and"
" over."
msgstr ""

#: ../../source/processing/08_functions.md:9
msgid "First Example"
msgstr ""

#: ../../source/processing/08_functions.md:11
msgid "Suppose you want to create four red circles as shown in this image:"
msgstr ""

#: ../../source/processing/08_functions.md:13
msgid "This can be done like so:"
msgstr ""

#: ../../source/processing/08_functions.md:32
msgid "![4 red circles](../_images/processing/4red_circles.png)"
msgstr "![4 red circles](../_images/processing/4red_circles.png)"

#: ../../source/processing/08_functions.md:32
msgid "4 red circles"
msgstr "4 red circles"

#: ../../source/processing/08_functions.md:34
msgid ""
"This works, but if you wanted to change all four circles to green, you’d "
"need to update the color in four places."
msgstr ""

#: ../../source/processing/08_functions.md:36
msgid ""
"Instead, you can move the logic for creating and coloring a circle into a"
" function:"
msgstr ""

#: ../../source/processing/08_functions.md:55
#, fuzzy
msgid "This defines a function `create_circle`:"
msgstr "A function `create_circle` was defined here."

#: ../../source/processing/08_functions.md:57
msgid "The **name** of the function is `create_circle`"
msgstr ""

#: ../../source/processing/08_functions.md:58
msgid ""
"It takes two **parameters**: `x` and `y`, which specify where to place "
"the circle."
msgstr ""

#: ../../source/processing/08_functions.md:59
msgid "The **body** of the function creates the circle and sets its color."
msgstr ""

#: ../../source/processing/08_functions.md:60
msgid ""
"The function is called using its **name** and the appropriate "
"**arguments**, e.g., `(20, 20)`."
msgstr ""

#: ../../source/processing/08_functions.md:64
msgid "General Syntax: Defining Functions"
msgstr ""

#: ../../source/processing/08_functions.md:66
msgid ""
"When you want to automate something more complex (e.g. creating Actors), "
"you can define your own function:"
msgstr ""

#: ../../source/processing/08_functions.md:73
msgid "Example:"
msgstr ""

#: ../../source/processing/08_functions.md:81
msgid "Each function consists of:"
msgstr ""

#: ../../source/processing/08_functions.md:83
msgid ""
"The **signature**: the first line that includes the function name and "
"parameters (e.g., `x` and `y`)."
msgstr ""

#: ../../source/processing/08_functions.md:84
msgid ""
"The **body**: a block of indented code that executes when the function is"
" called."
msgstr ""

#: ../../source/processing/08_functions.md:86
msgid ""
"The commands inside the function are executed from top to bottom when the"
" function is invoked."
msgstr ""

#: ../../source/processing/08_functions.md:90
msgid "Calling Functions"
msgstr ""

#: ../../source/processing/08_functions.md:92
msgid ""
"To call a function, use its name followed by parentheses and pass the "
"required arguments:"
msgstr ""

#: ../../source/processing/08_functions.md:98
msgid "This would create an actor at `x=4`, `y=2`."
msgstr ""

#: ../../source/processing/08_functions.md:102
msgid "Drawing Complex Shapes"
msgstr ""

#: ../../source/processing/08_functions.md:104
msgid "Functions can help you draw more complex shapes:"
msgstr ""

#: ../../source/processing/08_functions.md:127
msgid ""
"This defines a `create_face` function that draws a smiley face, which can"
" be used at various positions."
msgstr ""

#: ../../source/processing/08_functions.md:129
msgid "![faces](../_images/processing/face3.png)"
msgstr "![faces](../_images/processing/face3.png)"

#: ../../source/processing/08_functions.md:129
msgid "faces"
msgstr "faces"

#: ../../source/processing/08_functions.md:133
msgid "Assigning Properties and Registering Methods"
msgstr ""

#: ../../source/processing/08_functions.md:135
msgid "The following program creates “raindrops” automatically."
msgstr ""

#: ../../source/processing/08_functions.md:137
msgid ""
"Inside the `raindrop` function, each drop is configured and assigned "
"behavior using registered methods:"
msgstr ""

#~ msgid ""
#~ "Du hast bisher Methoden verwendet, die"
#~ " zu einem World oder einem Actor "
#~ "gehören, z.B. ``on_setup``, ``act``."
#~ msgstr ""
#~ "You have used methods that belong "
#~ "to a World or an Actor so "
#~ "far, e.g., ``on_setup``, ``act``."

#~ msgid ""
#~ "Jetzt lernst du eigene Funktionen zu "
#~ "erstellen. Funktionen sind `Unterprogramme` "
#~ "die dir ermöglichen, Code wiederzuverwenden,"
#~ "  anstatt ihn immer wieder zu "
#~ "schreiben."
#~ msgstr ""
#~ "Now you are learning to create "
#~ "your own functions. Functions are "
#~ "`subprograms` that allow you to reuse"
#~ " code instead of writing it over "
#~ "and over again."

#~ msgid "Erstes Beispiel"
#~ msgstr "First example"

#~ msgid ""
#~ "du möchtest vier rote Kreise erstellen,"
#~ " so wie im folgenden Bild "
#~ "dargestellt:"
#~ msgstr "you want to create four red circles, as shown in the following image:"

#~ msgid "Dies geht z.B. so:"
#~ msgstr "This goes, for example, like this:"

#~ msgid ""
#~ "Das Programm ist korrekt. Wenn nun "
#~ "aber alle vier Kreise grün sein "
#~ "sollen, dann musst du das Programm "
#~ "an vier Stellen verändern."
#~ msgstr ""
#~ "The program is correct. However, if "
#~ "all four circles are to be green,"
#~ " then you need to change the "
#~ "program in four places."

#~ msgid ""
#~ "Stattdessen kann man das Erstellen des"
#~ " Kreises und das festlegen der Farbe"
#~ " in Unterprogramme auslagern:"
#~ msgstr ""
#~ "Instead, you can outsource the creation"
#~ " of the circle and the setting "
#~ "of the color to subroutines:"

#~ msgid "Die Funktion hat den **Namen**  `create_circle`"
#~ msgstr "The function is named **Namen** `create_circle`"

#~ msgid ""
#~ "Die Funktion erhält als **Übergabeparameter**"
#~ " die Werte `x` und `y` - An "
#~ "dieser Stelle soll der Kreis erstellt"
#~ " werden."
#~ msgstr ""
#~ "The function receives the values `x` "
#~ "and `y` as **parameters** - At "
#~ "this point, the circle should be "
#~ "created."

#~ msgid ""
#~ "Im **Methodenkörper** wird zuerst ein "
#~ "Kreis erstellt und diesem anschließend "
#~ "eine Farbe zugewiesen."
#~ msgstr ""
#~ "In the **method body**, a circle "
#~ "is first created and then assigned "
#~ "a color."

#~ msgid ""
#~ "Die Funktion wird mit Hilfe ihres "
#~ "**Namens** und mit Übergabe der "
#~ "**Argumente** (z.B. 20, 20) aufgerufen."
#~ msgstr ""
#~ "The function is called using its "
#~ "**name** and passing the **arguments** "
#~ "(e.g., 20, 20)."

#~ msgid "Allgemein: Definieren von Funktionen"
#~ msgstr "General: Defining Functions"

#~ msgid ""
#~ "Oft willst du komplizierte Dinge "
#~ "automatisieren, z.B. das Anlegen von "
#~ "Actors."
#~ msgstr ""
#~ "Often you want to automate complicated"
#~ " things, e.g., the creation of "
#~ "actors."

#~ msgid ""
#~ "Dies geht, indem du Funktionen selbst"
#~ " definierst - Dies geht im "
#~ "Allgemeinen so:"
#~ msgstr ""
#~ "This is done by defining functions "
#~ "yourself - This is generally done "
#~ "like this:"

#~ msgid "z.B.:"
#~ msgstr "e.g.:"

#~ msgid ""
#~ "Deine Funktion besteht aus einer "
#~ "*Signatur* und einem *Funktionskörper*."
#~ msgstr "Your function consists of a *signature* and a *function body*."

#~ msgid ""
#~ "Die Signatur ist die erste Zeile "
#~ "der Funktion. Sie enthält alle "
#~ "Informationen die du brauchst um die "
#~ "Funktion aufzurufen. Dies ist der "
#~ "**Name** und **Parameter**. Der Name "
#~ "dieser Funktion ist `create_actor`, die "
#~ "Parameter sind `x`und `y`.  Parameter "
#~ "werden benötigt um der Funktion weitere"
#~ " Informationen zu übergeben. Im Beispiel"
#~ " wird die Information übergeben, *wo* "
#~ "das Objekt erstellt werden soll."
#~ msgstr ""
#~ "The signature is the first line of"
#~ " the function. It contains all the"
#~ " information you need to call the "
#~ "function. This includes the **name** and"
#~ " **parameters**. The name of this "
#~ "function is `create_actor`, and the "
#~ "parameters are `x` and `y`. Parameters"
#~ " are needed to pass additional "
#~ "information to the function. In the "
#~ "example, the information is passed about"
#~ " *where* the object should be "
#~ "created."

#~ msgid ""
#~ "Der Funktionskörper ist ein Code-Block."
#~ " Er enthält alle Befehle, die bei "
#~ "Aufruf der Funktion  nacheinander abgearbeitet"
#~ " werden. Hier wird beim Funktionsaufruf "
#~ "zuerst ein Kreis erzeugt und "
#~ "anschließend  werden die Farbe des "
#~ "Kreises festgelegt."
#~ msgstr ""
#~ "The function body is a code block."
#~ " It contains all the commands that"
#~ " are executed sequentially when the "
#~ "function is called. Here, a circle "
#~ "is first created when the function "
#~ "is called, and then the color of"
#~ " the circle is set."

#~ msgid ""
#~ "Die Befehle werden beim Aufruf der "
#~ "Funktion von oben nach unten "
#~ "abgearbeitet."
#~ msgstr ""
#~ "The commands are processed from top "
#~ "to bottom when the function is "
#~ "called."

#~ msgid "Aufruf von Funktionen"
#~ msgstr "Calling functions"

#~ msgid ""
#~ "Eine Funktion wird mit Hilfe des "
#~ "Namens aufgerufen. Dabei übergibst du "
#~ "der Funktion die  als Parameter "
#~ "definierten Argumente."
#~ msgstr ""
#~ "A function is called using its "
#~ "name. You pass the arguments defined "
#~ "as parameters to the function."

#~ msgid "Allgemein schreibt man: `method_name(<parameter>)`"
#~ msgstr "Generally, one writes: `method_name(<parameter>)`"

#~ msgid "Dies kann z.B. so aussehen:"
#~ msgstr "This can look like this, for example:"

#~ msgid "Hier wird ein Actor an der Position `x=4` und `y=2` angelegt."
#~ msgstr "Here, an actor is created at position `x=4` and `y=2`."

#~ msgid "Komplexe Figuren zeichen"
#~ msgstr "Draw complex figures"

#~ msgid "Mit  Hilfe von Funktionen kannst du komplexe Figuren zeichnen:"
#~ msgstr "With the help of functions, you can draw complex figures:"

#~ msgid ""
#~ "In der Funktion `create_face` wird ein"
#~ " Gesicht erzeugt.  Dieses kann anschließend"
#~ " an unterschiedlichen Stellen erzeugt "
#~ "werden."
#~ msgstr ""
#~ "In the function `create_face`, a face"
#~ " is created.  This can then be "
#~ "generated in different places."

#~ msgid "Eigenschaften und Methoden registrieren."
#~ msgstr "Register properties and methods."

#~ msgid "Das folgende Programm erstellt automatisch \"Regentropfen\"."
#~ msgstr "The following program automatically creates \"raindrops\"."

#~ msgid ""
#~ "In der funktion raindrop werden nicht"
#~ " nur Eigenschaften für jeden Tropfen "
#~ "festgelegt, sondern auch Methoden registriert."
#~ msgstr ""
#~ "In the function raindrop, not only "
#~ "are properties set for each drop, "
#~ "but methods are also registered."

