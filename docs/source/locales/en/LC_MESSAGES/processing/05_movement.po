# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/processing/05_movement.md:1
msgid "Movement"
msgstr ""

#: ../../source/processing/05_movement.md:3
msgid ""
"In this chapter, we’ll set elements in motion — with the help of "
"variables."
msgstr ""

#: ../../source/processing/05_movement.md:7
msgid "Simple Movement"
msgstr ""

#: ../../source/processing/05_movement.md:9
msgid ""
"You can create a simple movement by changing the `x` and `y` attributes "
"of an object:"
msgstr ""

#: ../../source/processing/05_movement.md:25
#: ../../source/processing/05_movement.md:63
msgid "**Output:**"
msgstr ""

#: ../../source/processing/05_movement.md:27
#: ../../source/processing/05_movement.md:65
msgid "moving"
msgstr "moving"

#: ../../source/processing/05_movement.md:31
#, fuzzy
msgid "The Modulo Operator"
msgstr "The modulo operator"

#: ../../source/processing/05_movement.md:33
msgid ""
"The **modulo operator** is especially helpful for creating repeating "
"movements."
msgstr ""

#: ../../source/processing/05_movement.md:35
msgid "Python supports three types of division:"
msgstr ""

#: ../../source/processing/05_movement.md:37
msgid "`13 / 3` gives the result `4.3333…`"
msgstr ""

#: ../../source/processing/05_movement.md:38
msgid "`13 // 3` gives the **integer** result `4`"
msgstr ""

#: ../../source/processing/05_movement.md:39
msgid "`13 % 3` returns the **remainder** of the division, in this case `1`"
msgstr ""

#: ../../source/processing/05_movement.md:41
msgid ""
"Since the remainder is never greater than the divisor, we can use it for "
"looping animations:"
msgstr ""

#: ../../source/processing/05_movement.md:60
msgid ""
"The variable `x` keeps increasing, but `x % 100` always returns a number "
"between 0 and 99. This makes the circle loop back after reaching the "
"edge."
msgstr ""

#~ msgid "Bewegung"
#~ msgstr "Movement"

#~ msgid ""
#~ "In diesem Kapitel setzen wir Elemente"
#~ " in Bewegung. Dabei helfen uns auch"
#~ " Variablen."
#~ msgstr ""
#~ "In this chapter, we set elements "
#~ "in motion. Variables also help us "
#~ "with this."

#~ msgid "Einfache Bewegungen"
#~ msgstr "Simple movements"

#~ msgid ""
#~ "Eine einfache Bewegung kannst du "
#~ "realisieren, indem du bei einem Objekt"
#~ " die Attribute x und y veränderst."
#~ msgstr ""
#~ "You can achieve a simple movement "
#~ "by changing the x and y attributes"
#~ " of an object."

#~ msgid "Ausgabe:"
#~ msgstr "Output:"

#~ msgid ""
#~ "Für sich wiederholende Bewegungen ist "
#~ "der Modulo-Operator besonders hilfreich."
#~ msgstr "The modulo operator is particularly helpful for repetitive movements."

#~ msgid "Python kennt 3 Arten von Divisionen:"
#~ msgstr "Python knows 3 types of divisions:"

#~ msgid ""
#~ "13 / 3 liefert das Ergebnis "
#~ "4.3333333333 13 // 3 liefert das "
#~ "**ganzzzahlige** Ergebnis 4 13 % 3 "
#~ "liefert den Rest der Division 13 /"
#~ " 3, also 1 zurück."
#~ msgstr ""
#~ "13 / 3 liefert das Ergebnis "
#~ "4.3333333333 13 // 3 liefert das "
#~ "**ganzzzahlige** Ergebnis 4 13 % 3 "
#~ "liefert den Rest der Division 13 /"
#~ " 3, also 1 zurück."

#~ msgid ""
#~ "Das der Rest niemals größer als "
#~ "der Dividend sein kann, kann uns "
#~ "bei Animationen helfen:"
#~ msgstr ""
#~ "That the remainder can never be "
#~ "greater than the dividend can help "
#~ "us with animations:"

#~ msgid ""
#~ "Die Variable x zählt immer weiter "
#~ "nach oben, da der Rest der "
#~ "Division von x und 100 niemals "
#~ "größer als 100 werden kann, wandert "
#~ "der Punkt wieder zurück."
#~ msgstr ""
#~ "The variable x keeps counting upwards,"
#~ " and since the remainder of the "
#~ "division of x by 100 can never "
#~ "be greater than 100, the point "
#~ "moves back again."

