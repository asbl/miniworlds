# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/processing/09_lists.md:1
#, fuzzy
msgid "Lists"
msgstr "Listen"

#: ../../source/processing/09_lists.md:3
msgid ""
"Often, you want to access many similar elements at the same time, for "
"example: months."
msgstr ""

#: ../../source/processing/09_lists.md:5
msgid ""
"Suppose you want to store the average monthly temperatures in a city and "
"you have collected the following data:"
msgstr ""

#: ../../source/processing/09_lists.md:22
msgid ""
"If the data is to be processed further, this becomes impractical, as "
"you'd need to handle each value individually. Lists are used instead."
msgstr ""

#: ../../source/processing/09_lists.md:24
msgid ""
"Lists group similar elements under a common **name** and access them "
"using an **index**."
msgstr ""

#: ../../source/processing/09_lists.md:26
msgid "What are Lists?"
msgstr ""

#: ../../source/processing/09_lists.md:28
msgid ""
"Lists are a collection of data where each item is identified by an index."
" The individual values are called *elements*."
msgstr ""

#: ../../source/processing/09_lists.md:30
msgid "Creating Lists"
msgstr ""

#: ../../source/processing/09_lists.md:32
msgid "You can create lists in Python using square brackets:"
msgstr ""

#: ../../source/processing/09_lists.md:39
msgid "Lists can contain different data types, so this is also valid:"
msgstr ""

#: ../../source/processing/09_lists.md:45
msgid "Length of a List"
msgstr ""

#: ../../source/processing/09_lists.md:47
msgid "The length of a list can be calculated with `len()`:"
msgstr ""

#: ../../source/processing/09_lists.md:54
msgid "Accessing Elements"
msgstr ""

#: ../../source/processing/09_lists.md:56
msgid "You access elements of a list using an index:"
msgstr ""

#: ../../source/processing/09_lists.md:62
msgid "Example:"
msgstr ""

#: ../../source/processing/09_lists.md:71
msgid "Changing List Elements"
msgstr ""

#: ../../source/processing/09_lists.md:73
msgid "You can modify elements by index:"
msgstr ""

#: ../../source/processing/09_lists.md:81
msgid "append()"
msgstr "append()"

#: ../../source/processing/09_lists.md:83
msgid ""
"Python lists are dynamic and can be changed. Use `append()` to add an "
"element:"
msgstr ""

#: ../../source/processing/09_lists.md:91
msgid "in"
msgstr "in"

#: ../../source/processing/09_lists.md:93
msgid "The `in` keyword checks if an element is in a list:"
msgstr ""

#: ../../source/processing/09_lists.md:101
msgid "Example: Months"
msgstr ""

#: ../../source/processing/09_lists.md:103
msgid "Instead of using individual variables, we can use a list for the months:"
msgstr ""

#: ../../source/processing/09_lists.md:121
msgid "Or:"
msgstr ""

#: ../../source/processing/09_lists.md:159
msgid "![months](../_images/months.png)"
msgstr "![months](../_images/months.png)"

#: ../../source/processing/09_lists.md:159
msgid "months"
msgstr "months"

#: ../../source/processing/09_lists.md:161
msgid "Storing Graphical Objects"
msgstr ""

#: ../../source/processing/09_lists.md:163
msgid ""
"We can also store objects in lists. This is often used for collision "
"detection."
msgstr ""

#: ../../source/processing/09_lists.md:165
msgid ""
"For example, we want to create a program where green circles should be "
"collected and red ones avoided:"
msgstr ""

#~ msgid ""
#~ "Oft wollen wir viele ähnliche Elemente"
#~ " gleichzeitig zugreifen z.B. Monate:"
#~ msgstr ""
#~ "Often we want to access many "
#~ "similar elements at the same time, "
#~ "e.g., months:"

#~ msgid ""
#~ "Angenommen wir wollen die durchschnittlichen"
#~ " Monatstemperaturen in einer Stadt "
#~ "speichern und haben folgende Daten "
#~ "gemessen:"
#~ msgstr ""
#~ "Assuming we want to store the "
#~ "average monthly temperatures in a city"
#~ " and have measured the following "
#~ "data:"

#~ msgid ""
#~ "Wenn die Daten weiter verarbeitet werden"
#~ " sollen, dann wird dies sehr "
#~ "unpraktisch, da wir jedesmal jeden "
#~ "einzelnen Wert \"anfassen\" müssen. Daher "
#~ "verwendet man stattdessen Listen."
#~ msgstr ""
#~ "If the data is to be further "
#~ "processed, it becomes very impractical "
#~ "because we have to \"touch\" each "
#~ "individual value every time. Therefore, "
#~ "lists are used instead."

#~ msgid ""
#~ "Man verwendet daher für diesen "
#~ "Einsatzzweck Listen, bei der gleichartige "
#~ "Elemente unter einem gemeinsamen **Namen** "
#~ "zusammengefasst werden und mit Hilfe "
#~ "eines **Index** zugreifbar sind."
#~ msgstr ""
#~ "Therefore, lists are used for this "
#~ "purpose, where similar elements are "
#~ "grouped under a common **name** and "
#~ "can be accessed using an **index**."

#~ msgid "Was sind Listen?"
#~ msgstr "What are lists?"

#~ msgid ""
#~ "Listen sind eine Zusammenfassung von "
#~ "Daten, bei der jedes Datum durch "
#~ "einen Index identifiziert wird. Die "
#~ "einzelnen Werte einer Liste nennt man"
#~ " *Elemente*."
#~ msgstr ""
#~ "Lists are a summary of data where"
#~ " each datum is identified by an "
#~ "index. The individual values of a "
#~ "list are called *elements*."

#~ msgid "Listen erzeugen"
#~ msgstr "Create lists"

#~ msgid ""
#~ "Man kann in Python Listen auf "
#~ "verschiedene Art und Weise erzeugen. Die"
#~ " einfachste Möglichkeit ist es, Listen "
#~ "mit Hilfe von eckigen Klammern zu "
#~ "erzeugen:"
#~ msgstr ""
#~ "One can create lists in Python in"
#~ " various ways. The simplest way is"
#~ " to create lists using square "
#~ "brackets:"

#~ msgid ""
#~ "Listen können selbst unterschiedliche "
#~ "Datentypen enthalten, d.h. auch dies ist"
#~ " eine Liste:"
#~ msgstr ""
#~ "Lists can contain different data types"
#~ " themselves, i.e. this is also a "
#~ "list:"

#~ msgid ""
#~ "Wie du siehst, ist es sogar "
#~ "möglich (und oft notwendig) eine Liste"
#~ " innerhalb einer Liste zu erstellen."
#~ msgstr ""
#~ "As you can see, it is even "
#~ "possible (and often necessary) to create"
#~ " a list within a list."

#~ msgid "Länge einer Liste"
#~ msgstr "Length of a list"

#~ msgid "Die Länge einer Liste kannst du mit der Funktion len() berechnen:"
#~ msgstr "You can calculate the length of a list with the function len():"

#~ msgid "Auf Elemente zugreifen"
#~ msgstr "Access elements"

#~ msgid ""
#~ "Mit Hilfe des `Index` kannst du "
#~ "auf Elemente einer Liste zugreifen. die"
#~ " Syntax dafür ist folgende"
#~ msgstr ""
#~ "With the help of the `Index`, you"
#~ " can access elements of a list. "
#~ "The syntax for this is as follows"

#~ msgid "z.B."
#~ msgstr "e.g."

#~ msgid "Listenelemente verändern"
#~ msgstr "Change list items"

#~ msgid "Du kannst mit Hilfe des Index auch Listenelemente verändern:"
#~ msgstr "You can also change list elements using the index:"

#~ msgid ""
#~ "Listen in Python haben eine "
#~ "**dynamische** Größe und können verändert "
#~ "werden. So kannst du jederzeit mit "
#~ "append() ein Element an eine Liste "
#~ "anhängen:"
#~ msgstr ""
#~ "Lists in Python have a **dynamic** "
#~ "size and can be modified. So you"
#~ " can add an element to a list"
#~ " at any time with append():"

#~ msgid ""
#~ "Mit dem Schlüsselwort `in` kannst du "
#~ "überprüfen, ob ein Element in einer "
#~ "Liste enthalten ist."
#~ msgstr ""
#~ "The keyword `in` allows you to "
#~ "check if an element is contained "
#~ "in a list."

#~ msgid ""
#~ "Dies ist ein bedeutender Unterschied zu"
#~ " anderen Programmiersprachen, die als "
#~ "Datenstruktur anstelle von Listen *Arrays* "
#~ "kennen. Arrays sind nicht veränderbar "
#~ "und haben eine feste Länge."
#~ msgstr ""
#~ "This is a significant difference from"
#~ " other programming languages that know "
#~ "*arrays* as a data structure instead "
#~ "of lists. Arrays are immutable and "
#~ "have a fixed length."

#~ msgid "Beispiel : Monate"
#~ msgstr "Example : Months"

#~ msgid ""
#~ "Am Beispiel der Monate schauen wir "
#~ "uns dies nochmal genauer an. Anstelle"
#~ " von einzelnen Variablen kann man die"
#~ " Monate als Liste anlegen:"
#~ msgstr ""
#~ "Using the example of the months, "
#~ "let's take a closer look at this"
#~ " again. Instead of individual variables,"
#~ " you can create the months as a"
#~ " list:"

#~ msgid "Alternativ könnte man die Liste auch so anlegen:"
#~ msgstr "Alternatively, one could also create the list like this:"

#~ msgid "Wenn wir die Liste ausgeben, erhalten wir folgendes:"
#~ msgstr "When we output the list, we get the following:"

#~ msgid "Wir können auf die einzelnen Listenelemente mit einem Index zugreifen:"
#~ msgstr "We can access the individual list elements with an index:"

#~ msgid ""
#~ "Und wir können mit einer Schleife "
#~ "über die Liste iterieren. So können "
#~ "wir z.B. die Durchschnittstemperatur "
#~ "berechnen:"
#~ msgstr ""
#~ "And we can iterate over the list"
#~ " with a loop. This way, we can"
#~ " calculate the average temperature, for "
#~ "example:"

#~ msgid "Dies können wir nutzen, um die Daten zu visualisieren:"
#~ msgstr "We can use this to visualize the data:"

#~ msgid "Grafische Objekte speichern"
#~ msgstr "Save graphic objects"

#~ msgid ""
#~ "Wir können auch Objekte in Arrays "
#~ "speichern. Dies wird z.B. oft bei "
#~ "der Kollissionserkennung benötigt."
#~ msgstr ""
#~ "We can also store objects in "
#~ "arrays. This is often needed, for "
#~ "example, in collision detection."

#~ msgid ""
#~ "z.B. wollen wir ein Programm schreiben,"
#~ " bei denen grüne Kreise eingesammelt "
#~ "und rote Punkte vermieden werden sollen."
#~ " Dies können wir folgendermaßen mit "
#~ "Listen umsetzen:"
#~ msgstr ""
#~ "For example, we want to write a"
#~ " program where green circles are "
#~ "collected and red dots are to be"
#~ " avoided. We can implement this with"
#~ " lists as follows:"

#~ msgid ""
#~ "Wenn man die grünen Kreise anklickt, "
#~ "wird der Punktestand um 1 erhöht, "
#~ "ansonsten um 1 verringert."
#~ msgstr ""
#~ "When you click on the green "
#~ "circles, the score increases by 1, "
#~ "otherwise it decreases by 1."

#~ msgid ""
#~ "Die Kollissionserkennung funktioniert mit "
#~ "Hilfe von Listen: die Kreise werden "
#~ "jeweils in die Liste red_circles und "
#~ "green_circles hinzugefügt - Auf diese "
#~ "Weise kann man mit `circle in "
#~ "green_circles` überprüfen, ob ein Kreis "
#~ "in einer dieser beiden Listen enthalten"
#~ " ist."
#~ msgstr ""
#~ "Collision detection works with the help"
#~ " of lists: the circles are added "
#~ "to the lists red_circles and "
#~ "green_circles respectively - In this "
#~ "way, you can check with `circle in"
#~ " green_circles` whether a circle is "
#~ "contained in one of these two "
#~ "lists."

