# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-07 17:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.1.1\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/patterns/maze_game.md:1
msgid "Tutorial: Maze Game"
msgstr ""

#: ../../source/patterns/maze_game.md:3
msgid "In this chapter, we’ll build a maze game step by step."
msgstr ""

#: ../../source/patterns/maze_game.md:5
#, fuzzy
msgid "![Maze Game – Step One](../_images/maze_tiles.png)"
msgstr "![Labyrinth-Spiel - Erster Schritt](../_images/maze_tiles.png)"

#: ../../source/patterns/maze_game.md:5
msgid "Maze Game – Step One"
msgstr ""

#: ../../source/patterns/maze_game.md:7
msgid ""
"The technique of creating a tilemap is common in many games. Once you've "
"learned it here, you can apply it in your own projects."
msgstr ""

#: ../../source/patterns/maze_game.md:9
#, fuzzy
msgid "**Based on**: `https://github.com/electronstudio/pygame-zero-book`"
msgstr "**Based on**: `https://github.com/electronstudio/pygame-zero-book`"

#: ../../source/patterns/maze_game.md:10
#, fuzzy
msgid "**License**: Attribution-NonCommercial-ShareAlike 4.0 International"
msgstr "**License:** Attribution-NonCommercial-ShareAlike 4.0 International"

#: ../../source/patterns/maze_game.md:14
msgid "Step 1: Load Actors from a Tilemap"
msgstr ""

#: ../../source/patterns/maze_game.md:16
msgid ""
"A tilemap uses a small number of images (tiles) that are drawn multiple "
"times to create a large game level (the map). This saves effort in "
"creating graphics and makes level design easier to manage. In this "
"example, we’ll create a maze level."
msgstr ""

#: ../../source/patterns/maze_game.md:18
msgid ""
"You need three image files: `player.png` and `wall.png`. Save them in the"
" `mu_code/images` folder:"
msgstr ""

#: ../../source/patterns/maze_game.md:28
msgid "Now let’s set up the framework for the game."
msgstr ""

#: ../../source/patterns/maze_game.md:30
msgid "Create a World"
msgstr ""

#: ../../source/patterns/maze_game.md:32
msgid "Use this basic structure for your game:"
msgstr ""

#: ../../source/patterns/maze_game.md:34
msgid ""
"In line 2, a `TiledWorld` is created, which provides logic for tile-based"
" worlds. You must call `world.run()` at the end to start the game."
msgstr ""

#: ../../source/patterns/maze_game.md:47
msgid "Create Actor Subclasses"
msgstr ""

#: ../../source/patterns/maze_game.md:49
#, fuzzy
msgid "Create a subclass for each **type** of actor:"
msgstr "Create actor subclasses for each **type** of actor:"

#: ../../source/patterns/maze_game.md:62
msgid ""
"`self.add_costume` adds a costume to the actor, based on an image (e.g. "
"`\"player\"`, `\"wall\"` – file extensions like `.png` or `.jpeg` can be "
"omitted), or a color defined as an (r, g, b, a) tuple."
msgstr ""

#: ../../source/patterns/maze_game.md:64
msgid "Create a Tilemap"
msgstr ""

#: ../../source/patterns/maze_game.md:66
msgid "A tilemap is a 2D list that defines where each actor should be placed."
msgstr ""

#: ../../source/patterns/maze_game.md:68
msgid "0: Empty"
msgstr ""

#: ../../source/patterns/maze_game.md:69
#, fuzzy
msgid "1: Wall"
msgstr "1: Wand"

#: ../../source/patterns/maze_game.md:70
#, fuzzy
msgid "2: Player"
msgstr "2: Player"

#: ../../source/patterns/maze_game.md:87
msgid "Create Objects for Each Tile"
msgstr ""

#: ../../source/patterns/maze_game.md:89
msgid ""
"Create actors for each tile. The class to be instantiated is looked up "
"from the `tiles` list:"
msgstr ""

#: ../../source/patterns/maze_game.md:103
msgid "Step 2: Movement"
msgstr ""

#: ../../source/patterns/maze_game.md:105
msgid "Move the Player"
msgstr ""

#: ../../source/patterns/maze_game.md:107
msgid "Add this to the `Player` class to move the player:"
msgstr ""

#: ../../source/patterns/maze_game.md:126
msgid "Block Movement"
msgstr ""

#: ../../source/patterns/maze_game.md:128
msgid "Use the `move_back()` method to prevent movement into walls:"
msgstr ""

#: ../../source/patterns/maze_game.md:146
msgid "Create an Enemy"
msgstr ""

#: ../../source/patterns/maze_game.md:148
msgid "Create an `Enemy` class that follows the player:"
msgstr ""

#: ../../source/patterns/maze_game.md:169
msgid "Summary"
msgstr ""

#: ../../source/patterns/maze_game.md:171
msgid ""
"In this tutorial, you built a basic maze game with movable actors and a "
"tilemap. With this foundation, you can add more features like scoring, "
"levels, or smarter enemies!"
msgstr ""

#~ msgid "Tutorial: Labyrinth-Spiel"
#~ msgstr "Tutorial: Labyrinth Game"

#~ msgid ""
#~ "In diesem Kapitel erstellen wir Schritt"
#~ " für Schritt gemeinsam ein Labyrinth-"
#~ "Spiel."
#~ msgstr "In this chapter, we will create a maze game step by step together."

#~ msgid "Labyrinth-Spiel - Erster Schritt"
#~ msgstr "Labyrinth Game - First Step"

#~ msgid ""
#~ "Die Technik, eine Kachelkarte (Tilemap) "
#~ "zu erstellen, ist in vielen Spielen "
#~ "gängig. Nachdem du es hier gelernt "
#~ "hast, wirst du in der Lage sein,"
#~ " diese Technik in deine eigenen "
#~ "Projekte zu integrieren."
#~ msgstr ""
#~ "The technique of creating a tilemap "
#~ "is common in many games. After "
#~ "learning it here, you will be able"
#~ " to integrate this technique into "
#~ "your own projects."

#~ msgid "Schritt 1: Actor aus einer Kachelkarte laden"
#~ msgstr "Step 1: Load actor from a tile card"

#~ msgid ""
#~ "Eine Kachelkarte verwendet eine kleine "
#~ "Anzahl von Bildern (Kacheln), die "
#~ "mehrmals gezeichnet werden, um ein "
#~ "großes Spiellevel (die Karte) zu "
#~ "erstellen. Dies spart Arbeit beim "
#~ "Erstellen vieler Grafiken und erleichtert "
#~ "Änderungen am Level-Design. In diesem"
#~ " Beispiel erstellen wir ein Labyrinth-"
#~ "Level."
#~ msgstr ""
#~ "A tile map uses a small number "
#~ "of images (tiles) that are drawn "
#~ "multiple times to create a large "
#~ "game level (the map). This saves "
#~ "work in creating many graphics and "
#~ "makes it easier to make changes to"
#~ " the level design. In this example,"
#~ " we create a maze level."

#~ msgid ""
#~ "Wir benötigen drei Bilddateien: `player.png`,"
#~ " `wall.png`. Diese müssen im Ordner "
#~ "`mu_code/images` gespeichert werden."
#~ msgstr ""
#~ "We need three image files: `player.png`,"
#~ " `wall.png`. These must be stored in"
#~ " the `mu_code/images` folder."

#~ msgid "Jetzt können wir den Rahmen für unser Spiel programmieren:"
#~ msgstr "Now we can program the framework for our game:"

#~ msgid "Eine Welt erstellen"
#~ msgstr "Create a world"

#~ msgid "Verwende dieses Grundgerüst für dein Spiel:"
#~ msgstr "Use this framework for your game:"

#~ msgid ""
#~ "In Zeile 2 wird eine `TiledWorld` "
#~ "erstellt, die die Logik für gekachelte"
#~ " Welten bereitstellt. In der letzten "
#~ "Zeile musst du unbedingt `world.run()` "
#~ "aufrufen, um das Spiel zu starten."
#~ msgstr ""
#~ "In line 2, a `TiledWorld` is "
#~ "created, which provides the logic for"
#~ " tiled worlds. In the last line, "
#~ "you must call `world.run()` to start "
#~ "the game."

#~ msgid "Actor-Unterklassen erstellen"
#~ msgstr "Create Actor subclasses"

#~ msgid ""
#~ "`self.add_costume` fügt dem Actor ein "
#~ "Kostüm hinzu, das auf einem Bild "
#~ "basiert (z. B. \"player\", \"wall\" –"
#~ " Dateiendungen wie `.png` oder `.jpeg` "
#~ "können weggelassen werden) oder auf "
#~ "einer Farbe, die als (r, g, b, "
#~ "a)-Tupel angegeben wird."
#~ msgstr ""
#~ "`self.add_costume` adds a costume to the"
#~ " actor based on an image (e.g., "
#~ "\"player\", \"wall\" – file extensions "
#~ "like `.png` or `.jpeg` can be "
#~ "omitted) or on a color specified "
#~ "as an (r, g, b, a) tuple."

#~ msgid "Eine Kachelkarte erstellen"
#~ msgstr "Create a tile map"

#~ msgid ""
#~ "Eine Kachelkarte ist eine 2D-Liste, "
#~ "die die Positionen der Actor bestimmt."
#~ msgstr "A tile map is a 2D list that determines the positions of the actors."

#~ msgid "0: Leer"
#~ msgstr "0: Read"

#~ msgid "Objekte für jede Zelle der Kachelkarte erstellen"
#~ msgstr "Create objects for each cell of the tile map"

#~ msgid ""
#~ "Für jede Zelle der Kachelkarte kann "
#~ "ein Actor erzeugt werden. Die Klasse "
#~ "für jeden Actor wird aus der "
#~ "Kachelkarte abgerufen."
#~ msgstr ""
#~ "For each cell of the tile map, "
#~ "an actor can be created. The class"
#~ " for each actor is retrieved from "
#~ "the tile map."

#~ msgid "Schritt 2: Bewegung"
#~ msgstr "Step 2: Movement"

#~ msgid "Spieler bewegen"
#~ msgstr "Move player"

#~ msgid ""
#~ "Füge folgenden Code zur `Player`-Klasse "
#~ "hinzu, um den Spieler zu bewegen:"
#~ msgstr "Add the following code to the `Player` class to move the player:"

#~ msgid "Bewegung blockieren"
#~ msgstr "Block movement"

#~ msgid ""
#~ "Verwende die Methode `move_back()`, um "
#~ "die Bewegung des Spielers zu blockieren,"
#~ " wenn er auf eine Wand trifft:"
#~ msgstr ""
#~ "Use the method `move_back()` to block"
#~ " the player's movement when they hit"
#~ " a wall:"

#~ msgid "Einen Gegner erstellen"
#~ msgstr "Create an opponent"

#~ msgid "Erstelle eine Gegner-Klasse, die den Spieler jagt:"
#~ msgstr "Create an enemy class that hunts the player:"

#~ msgid "Zusammenfassung"
#~ msgstr "Summary"

#~ msgid ""
#~ "In diesem Tutorial hast du ein "
#~ "einfaches Labyrinth-Spiel mit beweglichen "
#~ "Actorn und Kachelkarten erstellt. Mit "
#~ "dieser Grundlage kannst du weitere "
#~ "Funktionen wie Punkte, Levelaufstiege oder "
#~ "komplexere Gegner hinzufügen!"
#~ msgstr ""
#~ "In this tutorial, you created a "
#~ "simple maze game with movable actors "
#~ "and tile maps. With this foundation, "
#~ "you can add more features like "
#~ "points, level-ups, or more complex "
#~ "enemies!"

