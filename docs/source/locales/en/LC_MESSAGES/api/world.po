# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-09 08:34+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/api/world.md:1 ../../source/api/world.md:5
msgid "World"
msgstr ""

#: ../../source/api/world.md:3
msgid "Die Basisklasse f√ºr all deine Welten."
msgstr ""

#: miniworlds.worlds.world.World:1 of
msgid "A world is a playing field on which actors can move."
msgstr ""

#: miniworlds.worlds.world.World:3 of
msgid ""
"A world has a `background` and provides basic functions for the "
"positioning of actors and for the collision detection of actors, which "
"can be queried via the sensors of the actors."
msgstr ""

#: miniworlds.worlds.world.World:6 of
msgid ""
"You can create your own world by creating a class that inherits from "
"World or you can directly create a world object of type `World` or one of"
" its child classes (`TiledWorld`, `PhysicsWorld`, ...)."
msgstr ""

#: miniworlds.worlds.world.World:9 of
msgid "*World*"
msgstr ""

#: miniworlds.worlds.world.World:11 of
msgid "A world for pixel accurate games."
msgstr ""

#: miniworlds.worlds.world.World:13 of
msgid "The position of a actor on a World is the pixel at topleft of actor."
msgstr ""

#: miniworlds.worlds.world.World:15 of
msgid "New actors are created with top-left corner of actor rect at position."
msgstr ""

#: miniworlds.worlds.world.World:17 of
msgid "Two actors collide when their sprites overlap."
msgstr ""

#: miniworlds.worlds.world.World:19 of
msgid "Asteroids"
msgstr ""

#: miniworlds.worlds.world.World:22 of
msgid "**Other worlds:**"
msgstr ""

#: miniworlds.worlds.world.World:24 of
msgid ""
"TiledWorld: For worlds using Tiles, like rogue-like rpgs, see "
":doc:`TiledWorld <../api/world.tiledworld>`)"
msgstr ""

#: miniworlds.worlds.world.World:26 of
msgid ""
"PhysicsWorld: For worlds using the PhysicsEngine, see :doc:`PhysicsWorld "
"<../api/world_physicsworld>`)"
msgstr ""

#: miniworlds.worlds.world.World:30
#: miniworlds.worlds.world.World.add_background:11
#: miniworlds.worlds.world.World.default_border:8
#: miniworlds.worlds.world.World.default_border_color:10
#: miniworlds.worlds.world.World.detect_actors:10
#: miniworlds.worlds.world.World.fps:7
#: miniworlds.worlds.world.World.get_mouse_position:8
#: miniworlds.worlds.world.World.reset:5 miniworlds.worlds.world.World.run:5
#: miniworlds.worlds.world.World.set_background:11
#: miniworlds.worlds.world.World.size:4 miniworlds.worlds.world.World.step:10
#: miniworlds.worlds.world.World.switch_background:9 of
msgid "Examples"
msgstr ""

#: miniworlds.worlds.world.World:31 of
msgid "Creating a TiledWorld Object:"
msgstr ""

#: miniworlds.worlds.world.World:43 of
msgid "Creating a TiledWorld-Subclass."
msgstr ""

#: miniworlds.worlds.world.World:56 of
msgid "Creating a World Object:"
msgstr ""

#: miniworlds.worlds.world.World:66 of
msgid "Creating a World Subclass"
msgstr ""

#: miniworlds.worlds.world.World:80 of
msgid "See: :doc:`World <../api/world>`"
msgstr ""

#: miniworlds.worlds.world.World:81 of
msgid "See: :doc:`TiledWorld <../api/world.tiledworld>`"
msgstr ""

#: ../../source/api/world.md miniworlds.worlds.world.World.play_music
#: miniworlds.worlds.world.World.save_to_db of
msgid "Parameter"
msgstr ""

#: miniworlds.worlds.world.World:83 of
msgid "columns of new world (default: 40)"
msgstr ""

#: miniworlds.worlds.world.World:84 of
msgid "rows of new world (default:40)"
msgstr ""

#: miniworlds.worlds.world.World:85 of
msgid "Size of tiles (1 for normal worlds, can differ for Tiledworlds)"
msgstr ""

#: ../../source/api/world.md
msgid "Public Data Attributes:"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`subclasses <miniworlds.worlds.world.World.subclasses>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`surface <miniworlds.worlds.world.World.surface>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`class_name <miniworlds.worlds.world.World.class_name>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`step <miniworlds.worlds.world.World.step>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.step:1 of
msgid "Step defines how often the method ``act()`` will be called."
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`fps <miniworlds.worlds.world.World.fps>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.fps:1 of
msgid "Frames per second shown on the screen."
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`world_size_x <miniworlds.worlds.world.World.world_size_x>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.world_size_x:1
#: of
msgid "The x-world_size (defaults to view_size)"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`world_size_y <miniworlds.worlds.world.World.world_size_y>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.world_size_y:1
#: of
msgid "The y-world_size (defaults to view_size)"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`columns <miniworlds.worlds.world.World.columns>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`rows <miniworlds.worlds.world.World.rows>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`size <miniworlds.worlds.world.World.size>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.size:1 of
msgid "Set the size of world"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`default_fill_color "
"<miniworlds.worlds.world.World.default_fill_color>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.default_fill:1
#: miniworlds.worlds.world.World.default_fill_color:1 of
msgid "Set default fill color for borders and lines"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`default_is_filled "
"<miniworlds.worlds.world.World.default_is_filled>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`default_stroke_color "
"<miniworlds.worlds.world.World.default_stroke_color>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid "Set default stroke color for borders and lines."
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`default_border_color "
"<miniworlds.worlds.world.World.default_border_color>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
#: miniworlds.worlds.world.World.default_border_color:1 of
msgid "Set default border color for borders and lines."
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`default_border <miniworlds.worlds.world.World.default_border>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.default_border:1
#: of
msgid "Sets default border color for actors"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`backgrounds <miniworlds.worlds.world.World.backgrounds>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.backgrounds:1 of
msgid "Returns all backgrounds of the world as list."
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`background <miniworlds.worlds.world.World.background>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.background:1
#: miniworlds.worlds.world.World.get_background:1 of
msgid "Returns the current background"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`has_background <miniworlds.worlds.world.World.has_background>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`registered_events "
"<miniworlds.worlds.world.World.registered_events>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`image <miniworlds.worlds.world.World.image>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.image:1 of
msgid "The current displayed image"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`fill_color <miniworlds.worlds.world.World.fill_color>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`color <miniworlds.worlds.world.World.color>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`window <miniworlds.worlds.world.World.window>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1 miniworlds.worlds.world.World.window:1 of
msgid "Gets the parent window"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`actors <miniworlds.worlds.world.World.actors>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`event_manager <miniworlds.worlds.world.World.event_manager>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`backgrounds_manager "
"<miniworlds.worlds.world.World.backgrounds_manager>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`mouse_manager <miniworlds.worlds.world.World.mouse_manager>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`is_display_initialized "
"<miniworlds.worlds.world.World.is_display_initialized>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`is_running <miniworlds.worlds.world.World.is_running>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`is_listening <miniworlds.worlds.world.World.is_listening>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`frame <miniworlds.worlds.world.World.frame>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`clock <miniworlds.worlds.world.World.clock>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`app <miniworlds.worlds.world.World.app>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`music <miniworlds.worlds.world.World.music>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`sound <miniworlds.worlds.world.World.sound>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ""
":py:obj:`collision_manager "
"<miniworlds.worlds.world.World.collision_manager>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`timed_objects <miniworlds.worlds.world.World.timed_objects>`\\"
msgstr ""

#: ../../None:40:<autosummary>:1
msgid ":py:obj:`dynamic_actors <miniworlds.worlds.world.World.dynamic_actors>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`surface <miniworlds.worlds.world_base.WorldBase.surface>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`window <miniworlds.worlds.world_base.WorldBase.window>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`size <miniworlds.worlds.world_base.WorldBase.size>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`rect <miniworlds.worlds.world_base.WorldBase.rect>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`topleft <miniworlds.worlds.world_base.WorldBase.topleft>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`window_docking_position "
"<miniworlds.worlds.world_base.WorldBase.window_docking_position>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`width <miniworlds.worlds.world_base.WorldBase.width>`\\"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ":py:obj:`height <miniworlds.worlds.world_base.WorldBase.height>`\\"
msgstr ""

#: ../../source/api/world.md
msgid "Public Methods:"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`validate_parameters "
"<miniworlds.worlds.world.World.validate_parameters>`\\ \\(x\\, y\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.worlds.world.World.__init__>`\\ \\(\\[x\\, "
"y\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`add_right <miniworlds.worlds.world.World.add_right>`\\ "
"\\(world\\[\\, size\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`add_bottom <miniworlds.worlds.world.World.add_bottom>`\\ "
"\\(world\\[\\, size\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`remove_world <miniworlds.worlds.world.World.remove_world>`\\ "
"\\(container\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_world_connector "
"<miniworlds.worlds.world.World.get_world_connector>`\\ \\(actor\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`detect_position "
"<miniworlds.worlds.world.World.detect_position>`\\ \\(pos\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.detect_position:1 of
msgid "Checks if position is in the world."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`contains_rect <miniworlds.worlds.world.World.contains_rect>`\\ "
"\\(rect\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.contains_rect:1
#: of
msgid "Detects if rect is completely on the world."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`set_columns <miniworlds.worlds.world.World.set_columns>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`set_rows <miniworlds.worlds.world.World.set_rows>`\\ \\(value\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`borders <miniworlds.worlds.world.World.borders>`\\ \\(value\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.borders:1 of
msgid "Gets all borders from a source (`Position` or `Rect`)."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`default_fill <miniworlds.worlds.world.World.default_fill>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_background <miniworlds.worlds.world.World.get_background>`\\"
" \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`switch_background "
"<miniworlds.worlds.world.World.switch_background>`\\ \\(background\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.switch_background:1 of
msgid "Switches the background"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`remove_background "
"<miniworlds.worlds.world.World.remove_background>`\\ "
"\\(\\[background\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.remove_background:1 of
msgid "Removes a background from world"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`set_background <miniworlds.worlds.world.World.set_background>`\\"
" \\(source\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.add_background:1
#: miniworlds.worlds.world.World.set_background:1 of
msgid "Adds a new background to the world"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`add_background <miniworlds.worlds.world.World.add_background>`\\"
" \\(source\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`start <miniworlds.worlds.world.World.start>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.start:1 of
msgid "Starts the world, if world is not running."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`stop <miniworlds.worlds.world.World.stop>`\\ \\(\\[frames\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.stop:1 of
msgid "Stops the world."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`start_listening "
"<miniworlds.worlds.world.World.start_listening>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`stop_listening <miniworlds.worlds.world.World.stop_listening>`\\"
" \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`run <miniworlds.worlds.world.World.run>`\\ \\(\\[fullscreen\\, "
"fit\\_desktop\\, replit\\, ...\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid "The method show() should always be called at the end of your program."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`init_display <miniworlds.worlds.world.World.init_display>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`play_sound <miniworlds.worlds.world.World.play_sound>`\\ "
"\\(path\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.play_sound:1 of
msgid "plays sound from path"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`stop_sounds <miniworlds.worlds.world.World.stop_sounds>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`play_music <miniworlds.worlds.world.World.play_music>`\\ "
"\\(path\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.play_music:1 of
msgid "plays a music from path"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`stop_music <miniworlds.worlds.world.World.stop_music>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.stop_music:1 of
msgid "stops a music"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_mouse_position "
"<miniworlds.worlds.world.World.get_mouse_position>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.get_mouse_position:1 of
msgid "Gets the current mouse_position"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`get_mouse_x <miniworlds.worlds.world.World.get_mouse_x>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.get_mouse_x:1 of
msgid "Gets x-coordinate of mouse-position"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`get_mouse_y <miniworlds.worlds.world.World.get_mouse_y>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.get_mouse_y:1 of
msgid "Gets y-coordinate of mouse-position"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_prev_mouse_position "
"<miniworlds.worlds.world.World.get_prev_mouse_position>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.get_prev_mouse_position:1 of
msgid "gets mouse-position of last frame"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`is_mouse_pressed "
"<miniworlds.worlds.world.World.is_mouse_pressed>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.is_mouse_pressed:1 of
msgid "Returns True, if mouse is pressed"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`is_mouse_left_pressed "
"<miniworlds.worlds.world.World.is_mouse_left_pressed>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.is_mouse_left_pressed:1 of
msgid "Returns True, if mouse left button is pressed"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`is_mouse_right_pressed "
"<miniworlds.worlds.world.World.is_mouse_right_pressed>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.is_mouse_right_pressed:1 of
msgid "Returns True, if mouse right button is pressed"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`is_in_world <miniworlds.worlds.world.World.is_in_world>`\\ "
"\\(position\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`send_message <miniworlds.worlds.world.World.send_message>`\\ "
"\\(message\\[\\, data\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.send_message:1
#: of
msgid "Sends broadcast message"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`quit <miniworlds.worlds.world.World.quit>`\\ "
"\\(\\[exit\\_code\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.quit:1 of
msgid "quits app and closes the window"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`reset <miniworlds.worlds.world.World.reset>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.reset:1 of
msgid ""
"Resets the world Creates a new world with init-function - recreates all "
"actors and actors on the world."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`clear <miniworlds.worlds.world.World.clear>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`switch_world <miniworlds.worlds.world.World.switch_world>`\\ "
"\\(new\\_world\\[\\, reset\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.switch_world:1
#: of
msgid "Switches to another world"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_color_from_pixel "
"<miniworlds.worlds.world.World.get_color_from_pixel>`\\ \\(position\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.get_color_from_pixel:1 of
msgid "Returns the color at a specific position"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_from_pixel <miniworlds.worlds.world.World.get_from_pixel>`\\"
" \\(position\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.get_from_pixel:1
#: of
msgid "Gets Position from pixel"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`to_pixel <miniworlds.worlds.world.World.to_pixel>`\\ "
"\\(position\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`on_setup <miniworlds.worlds.world.World.on_setup>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.on_setup:1 of
msgid "Overwrite or register this method to call `on_setup`-Actions"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`add_to_world <miniworlds.worlds.world.World.add_to_world>`\\ "
"\\(actor\\, position\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid "Adds a Actor to the world."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`detect_actors <miniworlds.worlds.world.World.detect_actors>`\\ "
"\\(position\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.detect_actors:1
#: of
msgid "Gets all actors which are found at a specific position."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_actors_from_pixel "
"<miniworlds.worlds.world.World.get_actors_from_pixel>`\\ \\(pixel\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`repaint <miniworlds.worlds.world.World.repaint>`\\ \\(\\)"
msgstr ""

#: ../../None:15:<autosummary>:1 ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.repaint:1 of
msgid "Implemented in subclasses"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`update <miniworlds.worlds.world.World.update>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.update:1 of
msgid "The mainloop, called once per frame."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`handle_event <miniworlds.worlds.world.World.handle_event>`\\ "
"\\(event\\[\\, data\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid "Event handling"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`register <miniworlds.worlds.world.World.register>`\\ \\(method\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid "Used as decorator e.g. @register def method."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`unregister <miniworlds.worlds.world.World.unregister>`\\ "
"\\(method\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`direction <miniworlds.worlds.world.World.direction>`\\ "
"\\(point1\\, point2\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`distance_to <miniworlds.worlds.world.World.distance_to>`\\ "
"\\(pos1\\, pos2\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`direction_to <miniworlds.worlds.world.World.direction_to>`\\ "
"\\(pos1\\, pos2\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`load_world_from_db "
"<miniworlds.worlds.world.World.load_world_from_db>`\\ \\(file\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
#: miniworlds.worlds.world.World.load_world_from_db:1 of
msgid "Loads a sqlite db file."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`load_actors_from_db "
"<miniworlds.worlds.world.World.load_actors_from_db>`\\ \\(file\\, "
"actor\\_classes\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid "Loads all actors from db."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`save_to_db <miniworlds.worlds.world.World.save_to_db>`\\ "
"\\(file\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid "Saves the current world an all actors to database."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`screenshot <miniworlds.worlds.world.World.screenshot>`\\ "
"\\(\\[filename\\]\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.screenshot:1 of
msgid "Creates a screenshot in given file."
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_columns_by_width "
"<miniworlds.worlds.world.World.get_columns_by_width>`\\ \\(width\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ""
":py:obj:`get_rows_by_height "
"<miniworlds.worlds.world.World.get_rows_by_height>`\\ \\(height\\)"
msgstr ""

#: ../../None:64:<autosummary>:1
msgid ":py:obj:`get_events <miniworlds.worlds.world.World.get_events>`\\ \\(\\)"
msgstr ""

#: ../../None:64:<autosummary>:1 miniworlds.worlds.world.World.get_events:1 of
msgid "Gets a set of all events you can register"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`__init__ <miniworlds.worlds.world_base.WorldBase.__init__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`on_change <miniworlds.worlds.world_base.WorldBase.on_change>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid "implemented in subclasses"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`add_to_window "
"<miniworlds.worlds.world_base.WorldBase.add_to_window>`\\ \\(app\\, "
"dock\\[\\, size\\]\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`update_width_and_height "
"<miniworlds.worlds.world_base.WorldBase.update_width_and_height>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`repaint <miniworlds.worlds.world_base.WorldBase.repaint>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`blit_surface_to_window_surface "
"<miniworlds.worlds.world_base.WorldBase.blit_surface_to_window_surface>`\\"
" \\(\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`remove <miniworlds.worlds.world_base.WorldBase.remove>`\\ "
"\\(actor\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`handle_event "
"<miniworlds.worlds.world_base.WorldBase.handle_event>`\\ \\(event\\, "
"data\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`get_event <miniworlds.worlds.world_base.WorldBase.get_event>`\\ "
"\\(event\\, data\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ":py:obj:`update <miniworlds.worlds.world_base.WorldBase.update>`\\ \\(\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`get_local_position "
"<miniworlds.worlds.world_base.WorldBase.get_local_position>`\\ "
"\\(position\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`on_new_actor "
"<miniworlds.worlds.world_base.WorldBase.on_new_actor>`\\ \\(actor\\)"
msgstr ""

#: ../../None:15:<autosummary>:1
msgid ""
":py:obj:`on_remove_actor "
"<miniworlds.worlds.world_base.WorldBase.on_remove_actor>`\\ \\(actor\\)"
msgstr ""

#: ../../source/api/world.md
msgid "Private Data Attributes:"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.world.World._abc_impl>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_fps <miniworlds.worlds.world.World._fps>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_key_pressed <miniworlds.worlds.world.World._key_pressed>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_animated <miniworlds.worlds.world.World._animated>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_is_filled <miniworlds.worlds.world.World._is_filled>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_orientation <miniworlds.worlds.world.World._orientation>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_static <miniworlds.worlds.world.World._static>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ":py:obj:`_step <miniworlds.worlds.world.World._step>`\\"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`_registered_methods "
"<miniworlds.worlds.world.World._registered_methods>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`_abc_impl <miniworlds.worlds.world_base.WorldBase._abc_impl>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ":py:obj:`_abc_impl <abc.ABC._abc_impl>`\\"
msgstr ""

#: ../../source/api/world.md
msgid "Private Methods:"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`_get_camera_manager_class "
"<miniworlds.worlds.world.World._get_camera_manager_class>`\\ \\(\\)"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`_get_world_connector_class "
"<miniworlds.worlds.world.World._get_world_connector_class>`\\ \\(\\)"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid "needed by get_world_connector in parent class"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`_create_event_manager "
"<miniworlds.worlds.world.World._create_event_manager>`\\ \\(\\)"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`_update_all_costumes "
"<miniworlds.worlds.world.World._update_all_costumes>`\\ \\(\\)"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid "updates costumes for all actors on the world"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ":py:obj:`_act_all <miniworlds.worlds.world.World._act_all>`\\ \\(\\)"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid "Overwritten in subclasses, e.g. physics_world."
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`_tick_timed_objects "
"<miniworlds.worlds.world.World._tick_timed_objects>`\\ \\(\\)"
msgstr ""

#: miniworlds.worlds.world.World.add_background:3
#: miniworlds.worlds.world.World.set_background:3 of
msgid ""
"If multiple backgrounds are added, the last adds background will be set "
"as active background."
msgstr ""

#: ../../source/api/world.md
msgid "R√ºckgabetyp"
msgstr ""

#: miniworlds.worlds.world.World.add_background:5
#: miniworlds.worlds.world.World.get_background:4
#: miniworlds.worlds.world.World.set_background:5
#: miniworlds.worlds.world.World.switch_background:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.appearances.background.Background\\``"
msgstr ""

#: miniworlds.worlds.world.World.add_background:7
#: miniworlds.worlds.world.World.set_background:7 of
msgid ""
"The path to the first image of the background or a color (e.g. (255,0,0) "
"for red or \"images/my_background.png\" as path to a background."
msgstr ""

#: miniworlds.worlds.world.World.add_background:12
#: miniworlds.worlds.world.World.set_background:12 of
msgid "Add multiple Backgrounds:"
msgstr ""

#: ../../source/api/world.md
msgid "R√ºckgabe"
msgstr ""

#: miniworlds.worlds.world.World.add_background:23
#: miniworlds.worlds.world.World.set_background:23 of
msgid "The new created background."
msgstr ""

#: miniworlds.worlds.world.World.borders:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`list\\``"
msgstr ""

#: miniworlds.worlds.world.World.borders:5 of
msgid "Position or rect"
msgstr ""

#: miniworlds.worlds.world.World.borders:7 of
msgid ""
"A list of borders, e.g. [\"left\", \"top\"], if rect is touching the left"
" a top border."
msgstr ""

#: miniworlds.worlds.world.World.contains_rect:3 of
msgid "A rectangle as tuple (top, left, width, height)"
msgstr ""

#: miniworlds.worlds.world.World.default_border:5 of
msgid "You must also set a border for actor."
msgstr ""

#: miniworlds.worlds.world.World.default_border:9 of
msgid "Set default border for actors:"
msgstr ""

#: miniworlds.worlds.world.World.default_border_color:5 of
msgid ""
"``world.default_border_color`` does not have an effect, if no border is "
"set."
msgstr ""

#: miniworlds.worlds.world.World.default_border_color:7 of
msgid "You must also set ``world.border`` > 0."
msgstr ""

#: miniworlds.worlds.world.World.default_border_color:11 of
msgid "Create actors with and without with border"
msgstr ""

#: miniworlds.worlds.world.World.default_border_color:35
#: miniworlds.worlds.world.World.get_mouse_position:26
#: miniworlds.worlds.world.World.run:15 miniworlds.worlds.world.World.step:30
#: miniworlds.worlds.world.World.switch_background:37 of
msgid "Output:"
msgstr ""

#: miniworlds.worlds.world.World.default_border_color:37 of
msgid "borders"
msgstr ""

#: miniworlds.worlds.world.World.default_stroke_color:1 of
msgid ""
"Set default stroke color for borders and lines. (equivalent to border-"
"color)"
msgstr ""

#: miniworlds.worlds.world.World.detect_actors:3
#: miniworlds.worlds.world.World.load_actors_from_db:3 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.List\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~miniworlds.actors.actor.Actor\\`\\]`"
msgstr ""

#: miniworlds.worlds.world.World.detect_actors:5 of
msgid "Position, where actors should be searched."
msgstr ""

#: miniworlds.worlds.world.World.detect_actors:7 of
msgid "A list of actors"
msgstr ""

#: miniworlds.worlds.world.World.detect_actors:11 of
msgid "Get all actors at mouse position:"
msgstr ""

#: miniworlds.worlds.world.World.detect_position:3 of
msgid "True, if Position is in the world."
msgstr ""

#: miniworlds.worlds.world.World.direction_to:2 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"
msgstr ""

#: miniworlds.worlds.world.World.fps:3 of
msgid ""
"This controls how often the screen is redrawn. However, the game logic "
"can be called more often or less often independently of this with "
"``world.speed.``"
msgstr ""

#: miniworlds.worlds.world.World.get_color_from_pixel:3 of
msgid ""
"Examples: :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`tuple\\``"
msgstr ""

#: miniworlds.worlds.world.World.get_color_from_pixel:20 of
msgid "Output: (255, 0, 0, 255)"
msgstr ""

#: miniworlds.worlds.world.World.get_color_from_pixel:22 of
msgid "get color of red screen"
msgstr ""

#: miniworlds.worlds.world.World.get_color_from_pixel:26 of
msgid "The position to search for"
msgstr ""

#: miniworlds.worlds.world.World.get_color_from_pixel:28 of
msgid "The color"
msgstr ""

#: miniworlds.worlds.world.World.get_from_pixel:3 of
msgid ""
"PixelWorld: the pixel position is returned TiledWorld: the tile-position "
"is returned"
msgstr ""

#: miniworlds.worlds.world.World.get_from_pixel:7 of
msgid "Position as pixel coordinates"
msgstr ""

#: miniworlds.worlds.world.World.get_from_pixel:8
#: miniworlds.worlds.world.World.get_mouse_position:3 of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Optional\\`\\\\"
" \\\\\\[\\:py\\:class\\:\\`tuple\\`\\]`"
msgstr ""

#: miniworlds.worlds.world.World.get_from_pixel:9 of
msgid ""
"The pixel position, if position is on the world, None if position is not "
"on World."
msgstr ""

#: miniworlds.worlds.world.World.get_mouse_position:5 of
msgid ""
"Returns the mouse position if mouse is on the world. Returns None "
"otherwise"
msgstr ""

#: miniworlds.worlds.world.World.get_mouse_position:9 of
msgid "Create circles at current mouse position:"
msgstr ""

#: miniworlds.worlds.world.World.get_mouse_position:28 of
msgid "Circles at mouse-position"
msgstr ""

#: miniworlds.worlds.world.World.get_mouse_x:4
#: miniworlds.worlds.world.World.get_mouse_y:4 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`int\\``"
msgstr ""

#: miniworlds.worlds.world.World.get_world_connector:2 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~miniworlds.worlds.manager.world\\_connector.WorldConnector\\``"
msgstr ""

#: miniworlds.worlds.world.World.is_in_world:2
#: miniworlds.worlds.world.World.is_mouse_left_pressed:4
#: miniworlds.worlds.world.World.is_mouse_pressed:4
#: miniworlds.worlds.world.World.is_mouse_right_pressed:4 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: miniworlds.worlds.world.World.load_actors_from_db:1 of
msgid ""
"Loads all actors from db. Usually you load the actors in __init__() or in"
" on_setup()"
msgstr ""

#: miniworlds.worlds.world.World.load_actors_from_db:5 of
msgid "reference to db file"
msgstr ""

#: miniworlds.worlds.world.World.load_actors_from_db:7 of
msgid "a list of all Actor Classes which should be imported."
msgstr ""

#: miniworlds.worlds.world.World.load_actors_from_db:10 of
msgid "All Actors"
msgstr ""

#: miniworlds.worlds.world.World.play_music:3 of
msgid "The path to the music"
msgstr ""

#: miniworlds.worlds.world.World.play_music:5
#: miniworlds.worlds.world.World.save_to_db:6
#: miniworlds.worlds.world.World.stop_music:3 of
msgid "Returns:"
msgstr ""

#: miniworlds.worlds.world.World.register:1 of
msgid "Used as decorator e.g. @register def method..."
msgstr ""

#: miniworlds.worlds.world.World.register:7 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Callable\\``"
msgstr ""

#: miniworlds.worlds.world.World.remove_background:3 of
msgid ""
"The index of the new background. Defaults to -1 (last background) or an "
"Appearance"
msgstr ""

#: miniworlds.worlds.world.World.reset:6 of
msgid "Restarts flappy the bird game after collision with pipe:"
msgstr ""

#: miniworlds.worlds.world.World.run:1 of
msgid ""
"The method show() should always be called at the end of your program. It "
"starts the mainloop."
msgstr ""

#: miniworlds.worlds.world.World.run:6 of
msgid "A minimal miniworlds-program:"
msgstr ""

#: miniworlds.worlds.world.World.run:17 of
msgid "Minimal program"
msgstr ""

#: miniworlds.worlds.world.World.save_to_db:1 of
msgid ""
"Saves the current world an all actors to database. The file is stored as "
"db file and can be opened with sqlite."
msgstr ""

#: miniworlds.worlds.world.World.save_to_db:4 of
msgid "The file as relative location"
msgstr ""

#: miniworlds.worlds.world.World.screenshot:3 of
msgid ""
"The location of the file. The folder must exist. Defaults to "
"\"screenshot.jpg\"."
msgstr ""

#: miniworlds.worlds.world.World.send_message:3 of
msgid "A message can be received by the world or any actor on world"
msgstr ""

#: miniworlds.worlds.world.World.size:5 of
msgid "Create a world with 800 columns and 600 rows:"
msgstr ""

#: miniworlds.worlds.world.World.step:3 of
msgid "If e.g. ``step = 30``, the game logic will be called every 30th-frame."
msgstr ""

#: miniworlds.worlds.world.World.step:7 of
msgid "You can adjust the frame-rate with ``world.fps``"
msgstr ""

#: miniworlds.worlds.world.World.step:11 of
msgid "Set speed and fps."
msgstr ""

#: miniworlds.worlds.world.World.step:32 of
msgid "``` 3 6 9 12 15 ```"
msgstr ""

#: miniworlds.worlds.world.World.stop:3 of
msgid "If ``frames`` is set, world will be stopped in n frames. . Defaults to 0."
msgstr ""

#: miniworlds.worlds.world.World.switch_background:5 of
msgid ""
"The index of the new background or an Appearance. If index = -1, the next"
" background will be selected"
msgstr ""

#: miniworlds.worlds.world.World.switch_background:10 of
msgid "Switch between different backgrounds:"
msgstr ""

#: miniworlds.worlds.world.World.switch_background:39 of
msgid "Switch background"
msgstr ""

#: miniworlds.worlds.world.World.switch_background:43 of
msgid "The new background"
msgstr ""

#: miniworlds.worlds.world.World.switch_world:3 of
msgid "_description_"
msgstr ""

#: miniworlds.worlds.world.World.update:3 of
msgid "Called in app.update() when reload_all_worlds is called."
msgstr ""

#: miniworlds.worlds.world.World.window:3 of
msgid "The window"
msgstr ""

