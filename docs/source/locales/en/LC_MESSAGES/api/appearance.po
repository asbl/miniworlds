# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-08 13:20+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/api/appearance.md:1 ../../source/api/appearance.md:7
msgid "Appearance"
msgstr ""

#: ../../source/api/appearance.md:3
msgid "**Appearance** is the parent-class of **Background** and **Costume**"
msgstr ""

#: ../../source/api/appearance.md:5
msgid ""
"**Backgrounds** and **Costumes** are also **Appearances** - All objects "
"of these types inherit all attributes and methods who are defined in this"
" class."
msgstr ""

#: miniworlds.appearances.appearance.Appearance:1 of
msgid "Base class of actor costumes and world backgrounds"
msgstr ""

#: miniworlds.appearances.appearance.Appearance:3 of
msgid ""
"The class contains all methods and attributes to display and animate "
"images of the objects, render text on the images or display overlays."
msgstr ""

#: ../../source/api/appearance.md
msgid "Public Data Attributes:"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`counter <miniworlds.appearances.appearance.Appearance.counter>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`RELOAD_ACTUAL_IMAGE "
"<miniworlds.appearances.appearance.Appearance.RELOAD_ACTUAL_IMAGE>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`LOAD_NEW_IMAGE "
"<miniworlds.appearances.appearance.Appearance.LOAD_NEW_IMAGE>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`font_size "
"<miniworlds.appearances.appearance.Appearance.font_size>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`texture_size "
"<miniworlds.appearances.appearance.Appearance.texture_size>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`animation_speed "
"<miniworlds.appearances.appearance.Appearance.animation_speed>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_textured "
"<miniworlds.appearances.appearance.Appearance.is_textured>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.is_textured:1 of
msgid "If True, the image is tiled over the background."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_rotatable "
"<miniworlds.appearances.appearance.Appearance.is_rotatable>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.is_rotatable:1 of
msgid "If True, costume will be rotated with token direction"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_centered "
"<miniworlds.appearances.appearance.Appearance.is_centered>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_filled "
"<miniworlds.appearances.appearance.Appearance.is_filled>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_flipped "
"<miniworlds.appearances.appearance.Appearance.is_flipped>`\\"
msgstr ""

#: ../../None:23:<autosummary>:1 ../../None:32:<autosummary>:1
msgid "Flips the costume or background."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_upscaled "
"<miniworlds.appearances.appearance.Appearance.is_upscaled>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.is_upscaled:1 of
msgid "If True, the image will be upscaled remaining aspect-ratio."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_scaled_to_width "
"<miniworlds.appearances.appearance.Appearance.is_scaled_to_width>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_scaled_to_height "
"<miniworlds.appearances.appearance.Appearance.is_scaled_to_height>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`fill_color "
"<miniworlds.appearances.appearance.Appearance.fill_color>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_scaled "
"<miniworlds.appearances.appearance.Appearance.is_scaled>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.is_scaled:1 of
msgid "Scales the token to parent-size without remaining aspect-ratio."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`orientation "
"<miniworlds.appearances.appearance.Appearance.orientation>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.orientation:1 of
msgid ""
"If True, the image will be rotated by parent orientation before it is "
"rotated."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`coloring "
"<miniworlds.appearances.appearance.Appearance.coloring>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.coloring:1 of
msgid "Defines a colored layer."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`transparency "
"<miniworlds.appearances.appearance.Appearance.transparency>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.transparency:1 of
msgid "Defines a transparency."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`alpha <miniworlds.appearances.appearance.Appearance.alpha>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.alpha:1 of
msgid "transparent, 255: visible If value < 1, it will be multiplied with 255."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`is_animated "
"<miniworlds.appearances.appearance.Appearance.is_animated>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.is_animated:1 of
msgid "If True, the costume will be animated."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`color <miniworlds.appearances.appearance.Appearance.color>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.color:1 of
msgid "->See fill color"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`stroke_color "
"<miniworlds.appearances.appearance.Appearance.stroke_color>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.stroke_color:1 of
msgid "see border color"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`border_color "
"<miniworlds.appearances.appearance.Appearance.border_color>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.border_color:1 of
msgid "border color of actor"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`border <miniworlds.appearances.appearance.Appearance.border>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.border:1 of
msgid "The border-size of actor."
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`images <miniworlds.appearances.appearance.Appearance.images>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`image <miniworlds.appearances.appearance.Appearance.image>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.image:1 of
msgid "Performs all actions in image pipeline"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`dirty <miniworlds.appearances.appearance.Appearance.dirty>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ":py:obj:`world <miniworlds.appearances.appearance.Appearance.world>`\\"
msgstr ""

#: ../../None:32:<autosummary>:1 ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.get_manager:1
#: miniworlds.appearances.appearance.Appearance.world:1 of
msgid "Implemented in subclasses Costume and Background"
msgstr ""

#: ../../None:32:<autosummary>:1
msgid ""
":py:obj:`image_manager "
"<miniworlds.appearances.appearance.Appearance.image_manager>`\\"
msgstr ""

#: ../../source/api/appearance.md
msgid "Public Methods:"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<miniworlds.appearances.appearance.Appearance.__init__>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`set_image "
"<miniworlds.appearances.appearance.Appearance.set_image>`\\ \\(source\\)"
msgstr ""

#: ../../None:23:<autosummary>:1 ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.set_image:1 of
msgid "Sets the displayed image of costume/background to selected index"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`after_init "
"<miniworlds.appearances.appearance.Appearance.after_init>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`set_mode "
"<miniworlds.appearances.appearance.Appearance.set_mode>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`get_modes "
"<miniworlds.appearances.appearance.Appearance.get_modes>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`set_animated "
"<miniworlds.appearances.appearance.Appearance.set_animated>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`flip <miniworlds.appearances.appearance.Appearance.flip>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`remove_last_image "
"<miniworlds.appearances.appearance.Appearance.remove_last_image>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`add_image "
"<miniworlds.appearances.appearance.Appearance.add_image>`\\ \\(source\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.add_image:1 of
msgid "Adds an image to the appearance"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`add_images "
"<miniworlds.appearances.appearance.Appearance.add_images>`\\ "
"\\(sources\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.add_images:1 of
msgid "Adds multiple images to background/costume."
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`animate "
"<miniworlds.appearances.appearance.Appearance.animate>`\\ "
"\\(\\[loop\\]\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.animate:1 of
msgid "Animates the costume"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`after_animation "
"<miniworlds.appearances.appearance.Appearance.after_animation>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.after_animation:1 of
msgid "the method is overwritten in subclasses costume and appearance"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`to_colors_array "
"<miniworlds.appearances.appearance.Appearance.to_colors_array>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid "Create an array from costume or background."
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`from_array "
"<miniworlds.appearances.appearance.Appearance.from_array>`\\ \\(arr\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid "Create a background or costume from array."
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`fill <miniworlds.appearances.appearance.Appearance.fill>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.fill:1 of
msgid "Set default fill color for borders and lines"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`set_filled "
"<miniworlds.appearances.appearance.Appearance.set_filled>`\\ \\(value\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`get_color "
"<miniworlds.appearances.appearance.Appearance.get_color>`\\ "
"\\(position\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`get_rect "
"<miniworlds.appearances.appearance.Appearance.get_rect>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`draw <miniworlds.appearances.appearance.Appearance.draw>`\\ "
"\\(source\\, position\\, width\\, height\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`draw_on_image "
"<miniworlds.appearances.appearance.Appearance.draw_on_image>`\\ "
"\\(path\\, position\\, width\\, height\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`draw_color_on_image "
"<miniworlds.appearances.appearance.Appearance.draw_color_on_image>`\\ "
"\\(color\\, position\\, width\\, ...\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`__str__ "
"<miniworlds.appearances.appearance.Appearance.__str__>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid "Return str(self)."
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`get_image "
"<miniworlds.appearances.appearance.Appearance.get_image>`\\ \\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid "If dirty, the image will be reloaded."
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`update <miniworlds.appearances.appearance.Appearance.update>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
#: miniworlds.appearances.appearance.Appearance.update:1 of
msgid "Loads the next image, called 1/frame"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`register "
"<miniworlds.appearances.appearance.Appearance.register>`\\ \\(method\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid "Register method for decorator."
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`draw_shape_append "
"<miniworlds.appearances.appearance.Appearance.draw_shape_append>`\\ "
"\\(shape\\, arguments\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`draw_shape_set "
"<miniworlds.appearances.appearance.Appearance.draw_shape_set>`\\ "
"\\(shape\\, arguments\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`draw_image_append "
"<miniworlds.appearances.appearance.Appearance.draw_image_append>`\\ "
"\\(surface\\, rect\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`draw_image_set "
"<miniworlds.appearances.appearance.Appearance.draw_image_set>`\\ "
"\\(surface\\, rect\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`set_dirty "
"<miniworlds.appearances.appearance.Appearance.set_dirty>`\\ "
"\\(\\[value\\, status\\]\\)"
msgstr ""

#: ../../None:33:<autosummary>:1
msgid ""
":py:obj:`get_manager "
"<miniworlds.appearances.appearance.Appearance.get_manager>`\\ \\(\\)"
msgstr ""

#: ../../source/api/appearance.md
msgid "Private Data Attributes:"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_abc_impl "
"<miniworlds.appearances.appearance.Appearance._abc_impl>`\\"
msgstr ""

#: ../../source/api/appearance.md
msgid "Private Methods:"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_defaults "
"<miniworlds.appearances.appearance.Appearance._set_defaults>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_font "
"<miniworlds.appearances.appearance.Appearance._set_font>`\\ \\(font\\, "
"font\\_size\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_animation_speed "
"<miniworlds.appearances.appearance.Appearance._set_animation_speed>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_textured "
"<miniworlds.appearances.appearance.Appearance._set_textured>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "bool: If True, the image is tiled over the background."
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_rotatable "
"<miniworlds.appearances.appearance.Appearance._set_rotatable>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "If set to True, costume will be rotated with actor direction"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_centered "
"<miniworlds.appearances.appearance.Appearance._set_centered>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_flipped "
"<miniworlds.appearances.appearance.Appearance._set_flipped>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_filled "
"<miniworlds.appearances.appearance.Appearance._set_filled>`\\ \\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_scaled "
"<miniworlds.appearances.appearance.Appearance._set_scaled>`\\ \\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "Sets the actor to parenz-size **without** remaining aspect-ratio."
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_upscaled "
"<miniworlds.appearances.appearance.Appearance._set_upscaled>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "If set to True, the image will be upscaled remaining aspect-ratio."
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_scaled_to_width "
"<miniworlds.appearances.appearance.Appearance._set_scaled_to_width>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_scaled_to_height "
"<miniworlds.appearances.appearance.Appearance._set_scaled_to_height>`\\ "
"\\(value\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_set_image "
"<miniworlds.appearances.appearance.Appearance._set_image>`\\ \\(source\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_before_transformation_pipeline "
"<miniworlds.appearances.appearance.Appearance._before_transformation_pipeline>`\\"
" \\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "Called in `get_image`, if image is \"dirty\" (e.g. size, rotation, ."
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_after_transformation_pipeline "
"<miniworlds.appearances.appearance.Appearance._after_transformation_pipeline>`\\"
" \\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_load_image "
"<miniworlds.appearances.appearance.Appearance._load_image>`\\ \\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "Loads the image,"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_update_draw_shape "
"<miniworlds.appearances.appearance.Appearance._update_draw_shape>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_inner_shape "
"<miniworlds.appearances.appearance.Appearance._inner_shape>`\\ \\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "Returns inner shape of costume"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_outer_shape "
"<miniworlds.appearances.appearance.Appearance._outer_shape>`\\ \\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "Returns outer shape of costume"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_inner_shape_arguments "
"<miniworlds.appearances.appearance.Appearance._inner_shape_arguments>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "def setGets arguments for inner shape"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid ""
":py:obj:`_outer_shape_arguments "
"<miniworlds.appearances.appearance.Appearance._outer_shape_arguments>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:23:<autosummary>:1
msgid "Gets arguments for outer shape"
msgstr ""

#: ../../source/api/appearance.md
msgid "Return type"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.add_image:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`int\\``"
msgstr ""

#: ../../source/api/appearance.md
msgid "Returns"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.add_image:5 of
msgid "Index of the created image."
msgstr ""

#: miniworlds.appearances.appearance.Appearance.add_images:3 of
msgid ""
"Each source in sources parameter must be a valid parameter for "
":py:attr:`Appearance.cimage`"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.after_animation:4
#: miniworlds.appearances.appearance.Appearance.alpha:5
#: miniworlds.appearances.appearance.Appearance.from_array:5
#: miniworlds.appearances.appearance.Appearance.is_flipped:4
#: miniworlds.appearances.appearance.Appearance.is_textured:4
#: miniworlds.appearances.appearance.Appearance.orientation:4
#: miniworlds.appearances.appearance.Appearance.set_image:10
#: miniworlds.appearances.appearance.Appearance.to_colors_array:5 of
msgid "Examples"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.after_animation:5 of
msgid ""
"The actor will be removed after the animation - This can be used for "
"explosions."
msgstr ""

#: miniworlds.appearances.appearance.Appearance.alpha:20
#: miniworlds.appearances.appearance.Appearance.is_flipped:26
#: miniworlds.appearances.appearance.Appearance.is_flipped:29
#: miniworlds.appearances.appearance.Appearance.is_textured:31
#: miniworlds.appearances.appearance.Appearance.orientation:34 of
msgid "Textured image"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.alpha
#: miniworlds.appearances.appearance.Appearance.is_textured
#: miniworlds.appearances.appearance.Appearance.orientation of
msgid "type"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.alpha:23 of
msgid "defines transparency of Actor"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.alpha:25 of
msgid "0"
msgstr ""

#: ../../source/api/appearance.md
msgid "Parameters"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.animate:3 of
msgid ""
"If loop = True, the animation will be processed as loop. (you can stop "
"this with self.loop)"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.border:3 of
msgid "The value is 0, if actor has no border"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.border:5 of
msgid "int"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.coloring:3 of
msgid ""
"`coloring` can be True or false. The color is defined by the attribute "
"`appearance.color`."
msgstr ""

#: miniworlds.appearances.appearance.Appearance.from_array:1 of
msgid ""
"Create a background or costume from array. The array must be a "
"``numpy.ndarray, which can be created with ``.to_colors_array``"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.from_array:6 of
msgid "Convert grey default-background to gradient"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.from_array:25
#: miniworlds.appearances.appearance.Appearance.to_colors_array:26 of
msgid "Output:"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.from_array:27
#: miniworlds.appearances.appearance.Appearance.to_colors_array:28 of
msgid "converted image"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.get_image:1 of
msgid ""
"If dirty, the image will be reloaded. The image pipeline will be  "
"processed, defined by \"set_dirty\""
msgstr ""

#: miniworlds.appearances.appearance.Appearance.is_flipped:1 of
msgid ""
"Flips the costume or background. The image is mirrored over the y-axis of"
" costume/background."
msgstr ""

#: miniworlds.appearances.appearance.Appearance.is_flipped:5 of
msgid "Flips actor:"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.is_textured:5 of
msgid "Texture the board with the given image:"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.is_textured:16 of
msgid "Textured image>"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.is_textured:19 of
msgid "Set texture size"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.is_textured:34
#: miniworlds.appearances.appearance.Appearance.orientation:37 of
msgid "bool"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.orientation:5 of
msgid ""
"Both actors are moving up. The image of t2 is correctly aligned. t1 is "
"looking in the wrong direction."
msgstr ""

#: miniworlds.appearances.appearance.Appearance.register:1 of
msgid "Register method for decorator. Registers method to actor or background."
msgstr ""

#: miniworlds.appearances.appearance.Appearance.set_image:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.set_image:5 of
msgid "The image index or an image."
msgstr ""

#: miniworlds.appearances.appearance.Appearance.set_image:7 of
msgid "True, if image index exists"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.set_image:11 of
msgid "Add two images two background and switch to image 2"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.to_colors_array:1 of
msgid ""
"Create an array from costume or background. The array can be re-written "
"to appearance with ``.from_array``"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.to_colors_array:6 of
msgid "Convert a background image to grayscale"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.to_colors_array:31 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~numpy.ndarray\\``"
msgstr ""

#: miniworlds.appearances.appearance.Appearance.transparency:3 of
msgid ""
"If ``transparency``is ``True``, the che transparency value is defined by "
"the attribute ``appearance.alpha``"
msgstr ""

#~ msgid ""
#~ "Examples: :rtype: "
#~ ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~numpy.ndarray\\``"
#~ msgstr ""

#~ msgid "Rückgabetyp"
#~ msgstr ""

#~ msgid "Rückgabe"
#~ msgstr ""

#~ msgid "Parameter"
#~ msgstr ""

#~ msgid "Elternklasse von **Background** und **Costume**."
#~ msgstr ""

#~ msgid ""
#~ "In der Regel hast arbeitest du "
#~ "nicht direkt mit Objekten dieser Klasse,"
#~ " allerdings **sind** Backrounds und "
#~ "Costumes auch **Appearances**, d.h. Objekte"
#~ " beider Klassen verfügen über die "
#~ "Attribute und Methoden, die in dieser"
#~ " Klasse definiert sind."
#~ msgstr ""

#~ msgid "**Appearnace** is the parent-class of **Background** and **Costume**"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`_set_defaults "
#~ "<miniworlds.appearances.appearance.Appearance._set_defaults>`\\ "
#~ "\\(rotatable\\, is\\_animated\\, ...\\)"
#~ msgstr ""

