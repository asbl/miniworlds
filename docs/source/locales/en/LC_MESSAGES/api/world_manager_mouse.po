# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Andreas Siebel
# This file is distributed under the same license as the miniworlds package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miniworlds 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-08 12:37+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/api/world_manager_mouse.md:1
msgid "World > Mouse"
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager:1 of
msgid ""
"Manages mouse input for a given world. Provides access to current mouse "
"position, click states, and previous mouse state."
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager:4 of
msgid "Usage:"
msgstr ""

#: ../../source/api/world_manager_mouse.md
msgid "Public Data Attributes:"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`position "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.position>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.position:1 of
msgid "Property version of get_mouse_position()"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`prev_mouse_position "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.prev_mouse_position>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.prev_mouse_position:1
#: of
msgid "Returns the mouse position from the previous frame."
msgstr ""

#: ../../source/api/world_manager_mouse.md
msgid "Public Methods:"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.__init__>`\\ "
"\\(world\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.__init__:1 of
msgid "Initialize the MouseManager."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`get_mouse_position "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_position>`\\"
" \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_position:1 of
msgid "Gets the current mouse position if the mouse is over this world."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`mouse_left_is_clicked "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_left_is_clicked>`\\"
" \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_left_is_clicked:1
#: of
msgid "Returns True if the left mouse button is currently pressed."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`mouse_right_is_clicked "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_right_is_clicked>`\\"
" \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_right_is_clicked:1
#: of
msgid "Returns True if the right mouse button is currently pressed."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`get_mouse_x "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_x>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_x:1 of
msgid "Returns the x-coordinate of the mouse if over the world, otherwise 0."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`get_mouse_y "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_y>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_y:1 of
msgid "Returns the y-coordinate of the mouse if over the world, otherwise 0."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`get_prev_mouse_position "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.get_prev_mouse_position>`\\"
" \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_prev_mouse_position:1
#: of
msgid "Returns the mouse position from the last frame (if available)."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`is_mouse_pressed "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_pressed>`\\"
" \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_pressed:1 of
msgid "Returns True if any mouse button (left or right) is currently pressed."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`is_mouse_left_pressed "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_left_pressed>`\\"
" \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_left_pressed:1
#: of
msgid "Returns True if the left mouse button is pressed."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`is_mouse_right_pressed "
"<miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_right_pressed>`\\"
" \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_right_pressed:1
#: of
msgid "Returns True if the right mouse button is pressed."
msgstr ""

#: ../../source/api/world_manager_mouse.md
msgid "Private Methods:"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_update_positions "
"<miniworlds.worlds.manager.mouse_manager.MouseManager._update_positions>`\\"
" \\(\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid "Updates the current and previous mouse positions."
msgstr ""

#: ../../source/api/world_manager_mouse.md
msgid "Parameters"
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.__init__:3 of
msgid "The world instance this mouse belongs to."
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_position
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_x
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_y
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_prev_mouse_position
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_left_pressed
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_pressed
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_right_pressed
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_left_is_clicked
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_right_is_clicked
#: of
msgid "Return type"
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_position:3
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_prev_mouse_position:3
#: of
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Optional\\`\\\\"
" \\\\\\[\\:py\\:data\\:\\`\\~typing.Tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`int\\`\\, \\:py\\:class\\:\\`int\\`\\]\\]`"
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_position of
msgid "Returns"
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_position:5 of
msgid "Tuple of (x, y) coordinates or None if mouse is not on this world."
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_position:8
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_x:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_y:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_prev_mouse_position:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_left_pressed:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_pressed:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_right_pressed:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_left_is_clicked:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.position:4
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_right_is_clicked:6
#: miniworlds.worlds.manager.mouse_manager.MouseManager.prev_mouse_position:4
#: of
msgid "Examples"
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_x:3
#: miniworlds.worlds.manager.mouse_manager.MouseManager.get_mouse_y:3 of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`int\\``"
msgstr ""

#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_left_pressed:3
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_pressed:3
#: miniworlds.worlds.manager.mouse_manager.MouseManager.is_mouse_right_pressed:3
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_left_is_clicked:3
#: miniworlds.worlds.manager.mouse_manager.MouseManager.mouse_right_is_clicked:3
#: of
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`bool\\``"
msgstr ""

